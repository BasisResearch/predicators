pybullet build time: Nov 28 2023 23:52:03
Running command: python predicators/main.py --env grid_row_door --approach rl_bridge_policy --experiment_id RLBRIDGE_gridrowdoor-oracle --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --seed 0
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7fa3c45b95e0>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=True, random_bridge=False, use_obj_centric=True, rl_rwd_shape=False, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7fa3c45aeb20>, perceiver='trivial', horizon=30, active_sampler_learning_num_samples=100, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='grid_row_door', approach='rl_bridge_policy', excluded_predicates='', included_options='', seed=0, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_gridrowdoor-oracle', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: b884c40ed028ad57848b984e8cb6e73a1308ed73
/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96694475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20447835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6537727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.24326123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.33393392], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32088658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.71721905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.80494183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.14757179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4932283], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14414169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.86758554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.41282442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.19881944], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9393964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7190416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8727096], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03199781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.60430574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.18372805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.029996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7072361], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9467738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.32029676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18286502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47442758], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9284745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8366824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8030395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59971833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22555532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57168543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12526171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5986293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01367536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43688193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.67377996], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02399967], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38196367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04164154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00738562], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.805066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6789166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3135541], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08617736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3314771], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12072262], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5043259], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.60866714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2795458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33929273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28109884], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21373248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04207196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.50509626], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4815878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40713003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43413574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35206294], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73644525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2811363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9949523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91658664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2890708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17323305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7647569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26274535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5013885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32385978], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6974911], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8107557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23212793], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.55301845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24825847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48554856], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.6150655], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.77318144], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.38835567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5694293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.6348595], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.52766365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.6686057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5921605], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4470639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27103034], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05143869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30363834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97462374], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5445919], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.93889165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.07026832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7600722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16895607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.54963005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34715682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8886293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98153853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.064641], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35430065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89098763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25727203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03934415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7707031], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19208437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24243543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9449937], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46817568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47110116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0951638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8058874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6425991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49630442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3478605], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13080886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90629613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4968121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32721752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92886215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2633346], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5348209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.716649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28342298], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3702951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 5.0810049287974834e-06})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 398 datapoints
Loss: 0.00830, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss did not improve after 5000 itrs, terminating at itr 17166.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.62821174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98897284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9951369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9585654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99143094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99657935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94820863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97473586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9916367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9726825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99427205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9995061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9965955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9722745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98668003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95515335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98160094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99736273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95199245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98566496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97918886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9713568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9963826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9962421], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99975544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9334743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99981976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98890626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9636179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9823894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97630596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9638101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9845163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96277565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98999125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97447985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99993986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97605526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99918365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98584205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9988351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99917483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98128366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99040014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9654493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98167264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905768], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.63438416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9994414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96598214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9769085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98732626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98133755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99596417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9436592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97296154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96149427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9485064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95601827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99922585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98910505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99095875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9629649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99677503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98718524], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9838031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97093904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9579399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99798024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9895984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9877564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99201185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9463275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99472594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9624554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9754057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98173547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96552324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9117834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96632504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9988501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9937637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9495323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9779948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99301136], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9759099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9108333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98142743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99777526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99518704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94823563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9586116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99142706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98937666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97230524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9506205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98867494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9862248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99795127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9439263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97241724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98123735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96515983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98359627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9768458], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9954792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98690575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9666724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99595827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9930179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9685061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9889282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.951842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9690777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9890274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.987573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9621574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.974148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97746855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99161744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877125], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99027824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99136937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9610471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98644876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99007523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99420035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9596997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9778509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96824664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9637139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.981777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96230465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98388946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9532861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98627335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9990086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99311423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98921454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96800536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9956949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99362737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9819061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9847388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9813454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96936005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97470236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98085964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91853523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96953714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9727939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.966459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9820799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97122663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95366836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99300736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9802156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99966836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9929369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97276837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99255544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99650985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.986707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9648094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979934], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97733974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99531776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98248017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98255223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95140487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98253584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96414936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98978615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98803395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99952346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99075574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99177784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99167407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98155093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96573144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9861504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9446208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96188635], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99635357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9893723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99578065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95774996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96500987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99739814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97174853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99056023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95410526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99342394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9445727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99233085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97356886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9644304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9760956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95656854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99675095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704612], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 505, 'query_cost': 0.0, 'learning_time': 31.150619119987823})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 778 datapoints
Loss: 0.00026, iter: 0/100000
Loss: 0.00004, iter: 1000/100000
Loss: 0.00004, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00005, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00003, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00006, iter: 9000/100000
Loss: 0.00003, iter: 10000/100000
Loss: 0.00004, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11305.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9840797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99814373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9831783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9648138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9691917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93477005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97126806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9777563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9932666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9653322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9632411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.970542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99205214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98612356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.981274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99761605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93338555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.94103295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9954761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9890922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9659919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9885115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9988523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9719475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9758613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96651363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98925877], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99591833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9904315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9889105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9850219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98239267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96294004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9984652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9805079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9982872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9929203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99687517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9706963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.985027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99583495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9978849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.970277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.95143944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9990054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98551947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9697105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9935676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9808865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9792605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.996244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9962885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9898701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96995384], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99994045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9845286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96379477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9881521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9561951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98729694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9954526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9929379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98503476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9781197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99748516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9826145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99652153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9845921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99854237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.986979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97079194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9901723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9960985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9878637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9729343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9895791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.979523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9754122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9956259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9824656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98720783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9686233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98298675], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9961063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99835443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9917366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99068946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.956826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9647577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.979118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96437097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97866446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9679276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99734944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96927565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9896633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94589967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9745197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9487922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9884625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9413484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9844921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97408557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.86967885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9580452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9814728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9936018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9909937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99377865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9781569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9848082], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.985426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9918086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.999588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9815775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9971171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94534683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99921733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9598866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9933676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99615896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9574424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9905505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9815961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9600494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9808185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9777049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.983865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97353554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9933757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98643494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99422383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97002655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9831411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9981812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9894471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9991785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99821997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9968727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9943871], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99092793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97567093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9983239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9776772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99567366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9807438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99379504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94080716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.961379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9854904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9926974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96560293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9807239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9490378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.972001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9946058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9630437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93922627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9727385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9842773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99109745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9902696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9576053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9872615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9648344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9929228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9907321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92491525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9992645], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9896632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9980125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9677282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9835983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9573016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9762247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9975358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99466646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9926504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9060938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9814937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9826919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99338686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9892268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99764216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98500735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9611938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9489915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99996316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99760485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9422411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.98826826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9768393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9805903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9990325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9964074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99148476], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9962031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.93881375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99059206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9917049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99167764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9873835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9906265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9605844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9999277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9718577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99252164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.95957905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99514055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9536775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9710838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9819392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9661762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9950111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9668769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99814844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9890214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98837966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9814432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99406147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99906206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9883207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9967603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99802923], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9781733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9653573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9727671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9982378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97528714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9983179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9967438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98606193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99905896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9975041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97401035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9983936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9919166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9760397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.994879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9990204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9802706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99974287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9704176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9973896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99757355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9929945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9843179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9862992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9939631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96775466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9893508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9962677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9871259], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99949634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98986065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9933703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99741983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98891914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98860437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9974348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9935188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98987263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.994317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97099906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99810517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94606566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95784914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95181984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93382335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98600614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9949963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9701413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9593777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9999512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9710016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9995853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9680829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9730537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96299213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9980535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99768835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9936563], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 998, 'query_cost': 0.0, 'learning_time': 53.70064955801354})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1139 datapoints
Loss: 0.00004, iter: 0/100000
Loss: 0.00003, iter: 1000/100000
Loss: 0.00007, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00004, iter: 4000/100000
Loss: 0.01484, iter: 5000/100000
Loss: 0.00015, iter: 6000/100000
Loss: 0.00004, iter: 7000/100000
Loss: 0.00366, iter: 8000/100000
Loss: 0.00003, iter: 9000/100000
Loss: 0.00006, iter: 10000/100000
Loss: 0.00001, iter: 11000/100000
Loss: 0.00010, iter: 12000/100000
Loss: 0.00004, iter: 13000/100000
Loss: 0.00006, iter: 14000/100000
Loss: 0.00002, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15711.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35714477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36203486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.354898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36523676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37486875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34530872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38001487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40023452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35886902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35637137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36404812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35172454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.39642152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36558402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3758872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35966823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35436663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38903838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37282324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40012798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35525855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37659034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36712906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36292607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3722133], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3471219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34622252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3846952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36297154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35495755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38859907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3640785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3693984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35526592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36668184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35434645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35669363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35221034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35896802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3551546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3680124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39756858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3622709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3682392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36512166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35749176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36362064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36844158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34153527], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3517646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35940826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36937115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39209697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3588844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36746907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31828234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39575776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37259638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3666124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3711763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34354293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35414252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33742416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36464489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36025488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3563618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33335522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3653588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3609306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35516483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3467522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36928996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36747146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37191907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37118673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.359713], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35918507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3669092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40045884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37274534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36155683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37127656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36956346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37678903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36744654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36048502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34484076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3657951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.384359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36195683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.363811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.364662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38921145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34547696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38208228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.35806897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36752442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3554136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3369603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.34825167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.38151044], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37400264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33520243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35608542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34209767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34369886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35711184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35896266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36360464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37142527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3557692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.40231022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3690947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3732735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3594843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36224726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36628544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38374096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35762239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3885932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3610116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37206334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34313366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34704962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3809228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37518027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3717775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3953575], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1455, 'query_cost': 0.0, 'learning_time': 85.11987023401889})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1506 datapoints
Loss: 0.00141, iter: 0/100000
Loss: 0.00126, iter: 1000/100000
Loss: 0.00153, iter: 2000/100000
Loss: 0.00098, iter: 3000/100000
Loss: 0.00105, iter: 4000/100000
Loss: 0.00057, iter: 5000/100000
Loss: 0.00100, iter: 6000/100000
Loss: 0.00098, iter: 7000/100000
Loss: 0.00064, iter: 8000/100000
Loss: 0.00032, iter: 9000/100000
Loss: 0.01438, iter: 10000/100000
Loss: 0.00045, iter: 11000/100000
Loss: 0.00112, iter: 12000/100000
Loss: 0.00115, iter: 13000/100000
Loss: 0.01443, iter: 14000/100000
Loss: 0.00089, iter: 15000/100000
Loss: 0.00175, iter: 16000/100000
Loss: 0.00061, iter: 17000/100000
Loss: 0.00117, iter: 18000/100000
Loss: 0.00052, iter: 19000/100000
Loss: 0.00034, iter: 20000/100000
Loss did not improve after 5000 itrs, terminating at itr 20936.
Loaded best model with loss: 0.00008
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27951235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9935231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8854668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.86208963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8400017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80058545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7305788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6827661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4337065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99649876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.88217163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8279621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7914113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7563364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.723475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6953019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.42569542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9912256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.89197856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84742814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78192437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71056527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.42453647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97159964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.86942536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81574017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.78095466], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3083859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90399235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36496705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.88323724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89883655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8196413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38034683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8630575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9140862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8844585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8343726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7692443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33055347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74678046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92605424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90331036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8463815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76619387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3078211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6876667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8951666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8242062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40344566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9033708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92499435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89110357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.81755424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7460769], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29749617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9982987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88522744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81646466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.76496595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7225731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3549083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8431868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8996657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.83829844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78730065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7351355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33225778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77248484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88694507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8230713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7543214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6784557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25180164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5785326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85467607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76449573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41066062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.953216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89881104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8472824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79881877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7475493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37034497], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26464057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9914698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8780255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84807867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.80101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7654164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6980109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9981924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9031034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89230496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8644409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.85083145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8319002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7909691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7432742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72074276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7052582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6882708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6716895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9870417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8982616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8868519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9074449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92782027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9068728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8980518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.87490577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.83827865], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27103046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96489394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8128277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76484156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6985949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.658207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.64426464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.96251065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8668948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8075036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7646386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72854745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.62661326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98131514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8781057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.821605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.75275123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6877355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.63088167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94350934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8759552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8260883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7697485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71232414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6706249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64598286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4147588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9378557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88439476], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28015345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98897773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8704471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8352428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7807328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71542954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6499812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9954155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8950408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8635256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8308061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7967746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7708114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76700354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7480837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7157217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6345301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9943019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80427516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66966724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35823175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8281223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8983838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8494965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79726666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75079674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.70987755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6751052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38053003], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27278593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.95409644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.72458905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97953165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.85869306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82216096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8175247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7715741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.71331406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7161586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.72466916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6831894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.64268064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97375995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8789306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82970136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.7264356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99344444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8906317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8986077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8769992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8560365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.839648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8061675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.743821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6695773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6277039], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27662003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9943001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8557901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78264415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.73302376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6945442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65421677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99777657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8555693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7749236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7218322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7552809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7983618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7900436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.78572696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7565788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.71330017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6609912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39238688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9088129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.88967115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.85345423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8206583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7782906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7315985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6825826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39995214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9117624], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29791555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9991921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9095024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8810351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85799545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8226241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7880832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76100516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4393382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9924307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9037324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8398501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7601244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7208037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36300367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8081844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9115167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8664121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8247911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8403471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85387534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8085228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7403554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6785579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25045907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.57837576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8272759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7144386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33065805], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2768977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98294514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8500494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7930853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.74598336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7166462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.68873185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.670621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4425619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97934854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.85885847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8133746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8030963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79074675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.76109904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69929093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42907903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.995563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8942204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.85329473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.81368136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79117686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7566304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72876185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7194111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68400425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41190892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.956925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8721738], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1939, 'query_cost': 0.0, 'learning_time': 125.96508404001361})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1803 datapoints
Loss: 0.01636, iter: 0/100000
Loss: 0.00307, iter: 1000/100000
Loss: 0.00063, iter: 2000/100000
Loss: 0.00439, iter: 3000/100000
Loss: 0.00457, iter: 4000/100000
Loss: 0.00456, iter: 5000/100000
Loss: 0.00096, iter: 6000/100000
Loss: 0.00155, iter: 7000/100000
Loss: 0.00463, iter: 8000/100000
Loss: 0.00038, iter: 9000/100000
Loss: 0.00047, iter: 10000/100000
Loss: 0.00260, iter: 11000/100000
Loss: 0.00387, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12105.
Loaded best model with loss: 0.00007
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49585333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97578347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7775865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6489389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68201464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65898865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6864719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66928613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65799177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.68499064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6755318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6664017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67947173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67610246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61036825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66356105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6805146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67748404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.66206604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6441903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6689706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67906713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6759534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5931703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6611829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6401494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6712898], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47795194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99878496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5456323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5414217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5551494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.55354154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.55280715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5565762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5310099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5312437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.49833915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.53007734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5546579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5240229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5198429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5500389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.513053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.52181876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.53825814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.55630714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.53409743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.54229903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5363501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.54348785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.55921286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4953703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.54117644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5533241], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5101139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.991279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81414586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7446198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7776174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7798383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7818161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77251524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7751079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76237345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72904664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.748257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7830781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7669016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7882023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76462394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7878036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78852487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7342017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7868575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.789217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74950534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78510296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7732904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.772312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76085484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7771584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7816667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77319574], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5381876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9414312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.973961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.21500209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49845088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.97798145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7778867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6957502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70397496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6855787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6957709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6869914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6585856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7010448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6982177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.67789716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.64532864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.69115263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.68173254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6479211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7020819], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48573777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9981974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61595595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5913932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5655351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6022368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.58541805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6104661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60396105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5950741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53278077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6075612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59398323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6020557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60510147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60064876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5837709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61519945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6052937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6080143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5919369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.58571684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59112495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59748465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60293883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6144245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6029193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59897316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.58674854], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52031356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9987809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5719874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5464965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.51126164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5476729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52761054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52089655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52946407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5262662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5175778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5190626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5193395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5291993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5245063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5225326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53581697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52932733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.49612027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5324183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5160322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5128414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52563816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.52631617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.54340214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53461623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5194474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5277282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53809583], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5271027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9349778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9998896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21354552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22014378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.24653116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22509663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21712358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22045557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2199794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22254837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.234906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2231769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.20932814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22457124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21628071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2159559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22437178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21568625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22331002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21715218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21983391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.20834436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22846217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22476119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21950391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21989053], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49253234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9989504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66647214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6568159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6301178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6593339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6611939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6366335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6576567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6504745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65077287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65854764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6484971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65558356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6459975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.66387665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6596769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.632436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6580449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65753746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6602136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6303626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6604763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.62799066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.62455404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6645059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6431667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6608883], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5002072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99119693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68504655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6972743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71243644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6962394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71660686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6932778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6963096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6982757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67942715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6991572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6977675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6193933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7074074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70136744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7138544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6350971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7124796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7101531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7076709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7102995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70904076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70925456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6943953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70065606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71085364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6966665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71027404], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5100385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9942372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7954563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76504034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72349954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78390807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76957536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76976335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77633977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7856472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7607844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74217254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7836277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78772974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7520705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.786634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77592754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78422886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7900644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7433236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77527386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7473257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78799355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78327036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7879196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78696686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7840815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7676575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73433673], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2334, 'query_cost': 0.0, 'learning_time': 153.13042502303142})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2077 datapoints
Loss: 0.00179, iter: 0/100000
Loss: 0.00848, iter: 1000/100000
Loss: 0.00626, iter: 2000/100000
Loss: 0.00232, iter: 3000/100000
Loss: 0.00874, iter: 4000/100000
Loss: 0.01298, iter: 5000/100000
Loss: 0.01432, iter: 6000/100000
Loss: 0.00065, iter: 7000/100000
Loss: 0.00474, iter: 8000/100000
Loss: 0.00718, iter: 9000/100000
Loss: 0.00087, iter: 10000/100000
Loss: 0.00120, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11732.
Loaded best model with loss: 0.00029
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.59072393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.58186615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5390553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.570753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5953391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.557122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51077664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.45705396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.43296027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.41685313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3909698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3746812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.35473162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3426043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.33237535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.28839144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23936231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.19662191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11657179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04960656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.04579157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.03662447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03460284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.06366373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08078253], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56008464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6327693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5608522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.51071763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47632477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43050596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3846346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.35476533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32493713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.33119392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33001426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28176168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.20977657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21796204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2435938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19615385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.18163404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17210604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15978925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19261461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.19756171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.15201129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12539381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11911376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12011911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10763757], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57060885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64899904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55620724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4683395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40850356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.32046664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2921915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26384044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21208921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16834408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13990903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11689032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10825939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16471191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22284018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2123452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17758946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15635486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14744075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14443417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12041809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08497314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07993592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0916807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01385551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07718471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07726473], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5558395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6456819], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5903311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.53237027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44565222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3837196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3603276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.34091237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3175219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27900413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23068559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.18561591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15019947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12161507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10320701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.09280469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07180201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04737321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03357397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0288124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02207421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03365902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05315811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.07125046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08974763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08323625], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5541342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.65374416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5408787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.675091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5655889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.62067425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.5511414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.47503012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.4116051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.36996028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.33890226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.305551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.27406627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.26036683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2420856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.21624875], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5623843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.67723876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.55927867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6352364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5615985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4993546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44744715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38906226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.31385174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25340778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.22737612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.20854752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17736456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.15214711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13556115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13812022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15288703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14351118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13744058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12856476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0634959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0399358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07120989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.06968386], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.57523185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.65152097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56030583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.64803135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.60088897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.57890105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.5035666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.4011828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.35386813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.33470705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.32763416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.3213139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.2633336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.18821679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.17388901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.15535073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10408756], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.58940077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5732238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51195526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.45826778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.41508827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38609365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.34179458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.30463415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.27480364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24437925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23719896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2732216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3061985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28177994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.27227622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.264793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25025693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23128983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.18192025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9626624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21880747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02256897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00038921], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.55109924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6600579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.55938905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6339512], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.57539576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.5614377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.528177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.4622592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.40959546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.36296976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.29577306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.25130552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.24082524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.2206877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.20947364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.20003429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.18045208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.17395583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.15372424], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56917113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.63215274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5176762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.44397634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.43859082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3867917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34941828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31828466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28160772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28707016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.279298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2675578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26610056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23252241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19162126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15220171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11000533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06708787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05174948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0526444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06544833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08656076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09596235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07893509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02829576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01131046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01919816], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2692, 'query_cost': 0.0, 'learning_time': 180.67283436801517})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2448 datapoints
Loss: 0.00347, iter: 0/100000
Loss: 0.00463, iter: 1000/100000
Loss: 0.00918, iter: 2000/100000
Loss: 0.01260, iter: 3000/100000
Loss: 0.00982, iter: 4000/100000
Loss: 0.02324, iter: 5000/100000
Loss: 0.00535, iter: 6000/100000
Loss: 0.00557, iter: 7000/100000
Loss: 0.01727, iter: 8000/100000
Loss: 0.00464, iter: 9000/100000
Loss: 0.00249, iter: 10000/100000
Loss: 0.00385, iter: 11000/100000
Loss: 0.00300, iter: 12000/100000
Loss: 0.00127, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13073.
Loaded best model with loss: 0.00040
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9990329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.30843788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03116246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02896054], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21673596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12884024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99624044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.34278262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00405462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02226983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99278885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30519465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06290616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23308815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14655578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99698573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.30527413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03042705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01168891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00883281], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99219143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32654068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01929007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00450042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00134296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00222684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00068876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00096769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03342334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02388359], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00359979], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97184706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.31395295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03601953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00787509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01004389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03964687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.22603945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1008096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98951197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.30564797], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9978673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3161951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05007231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23370412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17223065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99403614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.30230758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06041151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01850647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00581596], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99358445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3549955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0038668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01930806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00545393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00035638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01198151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00068616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02539905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01964958], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0029733], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96936464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.32644284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03337768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00355347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0031554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0022615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.24954997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1451294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9931121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.30729154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.980544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.30822065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03957136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0096783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01132502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25295067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15902933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9925432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.30183303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04968026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02046755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9921091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30645847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05016971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02487531], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22875093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18098857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.99475247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.30269763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04536157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.00260894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9918132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30616954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03702303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00163602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00536718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02281738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23217061], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15312979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.995436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.30814245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3175, 'query_cost': 0.0, 'learning_time': 212.03313742301543})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2803 datapoints
Loss: 0.00918, iter: 0/100000
Loss: 0.00271, iter: 1000/100000
Loss: 0.00353, iter: 2000/100000
Loss: 0.00785, iter: 3000/100000
Loss: 0.00545, iter: 4000/100000
Loss: 0.00410, iter: 5000/100000
Loss: 0.01997, iter: 6000/100000
Loss: 0.00454, iter: 7000/100000
Loss: 0.00572, iter: 8000/100000
Loss: 0.00331, iter: 9000/100000
Loss: 0.00583, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10330.
Loaded best model with loss: 0.00116
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8181812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44038913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7735282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44885743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76700616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43896365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7988171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4405347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79886353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45197734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78463167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44329187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76727575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44123495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7919201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4471673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78037655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42971164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8172177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4437573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78956825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44513634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78993726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44906795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7910452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43331996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8052944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45742345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81563663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44304433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77927566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.479862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8272506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.412464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80900455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44849882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7993393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4494962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7733237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44377187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7908981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45089608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7892063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45331326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7781497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45464486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8017208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4429786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8267271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44249323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7918553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4363944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7982096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44852298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7819863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43741152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78961897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4464291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8282606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42070046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0]
Tasks solved: 10 / 10
Average time for successes: 1.02323 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0232267224200768, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3646, 'query_cost': 0.0, 'learning_time': 240.08241675500176})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2988 datapoints
Loss: 0.00975, iter: 0/100000
Loss: 0.00510, iter: 1000/100000
Loss: 0.00647, iter: 2000/100000
Loss: 0.01637, iter: 3000/100000
Loss: 0.01099, iter: 4000/100000
Loss: 0.00356, iter: 5000/100000
Loss: 0.01678, iter: 6000/100000
Loss: 0.01377, iter: 7000/100000
Loss: 0.00334, iter: 8000/100000
Loss: 0.00490, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9779.
Loaded best model with loss: 0.00097
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8703096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3987566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12070841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.46483526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5238849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3901695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22718115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.87237275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39694947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01691184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0279553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.4034702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.64682406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2628951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08655376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.1162131], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.86670876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41188034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02672971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38618255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5784875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2527695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.84022635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41661382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8656033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.40207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.04655259], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8658334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41245422], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03386916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37750486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5882781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27024624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10905275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09108673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09530585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07725791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08966183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09129269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09645538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09639628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10086431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09368973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10236453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08805106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09178351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08489864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08526734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09810849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10351674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09245223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08338987], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8514813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47659275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1770059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03822464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00351193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08326079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06777806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01635071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00440952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08127992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05809086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0333413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07722466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06494797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06994644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07126867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0536117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08218022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08187523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00348066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08339605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0788751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00284972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08288471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07586809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06292766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03855992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08204012], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.83928895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4213628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8685368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.40391153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02418044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02837192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.35121715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.59271526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.26860255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.86176866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.40512398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8429706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4264382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8550512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40510544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05762392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.27037767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.46774635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28099364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08059008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07309455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08980506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08765903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07682013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0666424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0708831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03517332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08623625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06369425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07386076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08269957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07997302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10126487], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.852889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4150263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06184909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16658568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0348563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08008133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03617189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08525889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0726154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08200452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07753646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06103402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06658562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07655296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02900657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05214097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03977972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05469234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05934139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07904356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05216489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06935544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.053844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07866886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05626836], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8654196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40378708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02025485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02518957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39072138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.67164093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2824406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09843468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09403583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08203868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09449701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09892537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09287924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10040727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10340425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09469315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07524605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07470154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10269304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08837486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09460187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08658153], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8600261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39917904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05359079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34736416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5856513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25764337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.83034444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42192143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8558226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41954362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.01892926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8467593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43768123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.86275935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40744093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04025897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.37838894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6523152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.21759897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8550428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.41083825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.05246393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3903, 'query_cost': 0.0, 'learning_time': 268.0446184600005})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3254 datapoints
Loss: 0.02768, iter: 0/100000
Loss: 0.00725, iter: 1000/100000
Loss: 0.01501, iter: 2000/100000
Loss: 0.00415, iter: 3000/100000
Loss: 0.01391, iter: 4000/100000
Loss: 0.00471, iter: 5000/100000
Loss: 0.02437, iter: 6000/100000
Loss: 0.00468, iter: 7000/100000
Loss: 0.01574, iter: 8000/100000
Loss: 0.00542, iter: 9000/100000
Loss: 0.00539, iter: 10000/100000
Loss: 0.00630, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11689.
Loaded best model with loss: 0.00142
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8760619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43687293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3502888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5233885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2477768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9122498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.37864402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0218098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00954479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00248896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00079905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00600701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01182031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00829805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00445402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00554759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00914895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00184273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02310179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.35466647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.40792045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.31168446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08013171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06303427], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8608724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.39502868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04308442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.31808653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4455836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26854202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.869455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39195973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04819684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3753044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59936804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.25088602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.87675244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.3796999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.06059175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.3525801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.5498331], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8661112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39237344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0529427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3173641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.501435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2508164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.899855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39818308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0379067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3891444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5496104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.27647483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8983774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.3769564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.0492419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([-0.00232429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.00102042], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9288357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.35951686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0473201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00431746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00304542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01130653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00813949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0017094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02645887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.34992385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.30113316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40339097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.58971596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26382244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8588685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4093153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02976918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.32464463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.4943039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.2888137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12364539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10262308], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9140697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3651456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0520166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01521667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00580234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00264189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00618785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00661612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03290434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35440022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5379562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.29797494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.87430257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4029978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03519405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37427053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5219518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.26434988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8506921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41468412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42510924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6433033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0470811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04690923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0153941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07280528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07484159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00711338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02174515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00070662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00951031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([9.9272234e-05], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00870986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00238509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0237864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01947216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00159651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0318933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01776263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01234179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34036732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29489577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38895684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5124127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06514258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05380985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01500953], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.87330204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.403546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01757479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.41580883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.54529667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06146087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00573225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07152246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.15729208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16995624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.85682374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3857667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03066631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.4118205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6081569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.04364102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.03160312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01349275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03310649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00550141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.0189983], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8615746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4106903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03814189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.29325107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4314705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26111227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.87272805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3960396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05488902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2825792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.40572765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2691041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.86945593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.38818398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.07175411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.29690906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.5112493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.28528893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87364286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3836742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05167706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.378746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5891145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2649643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8655461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43329954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.37681085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.5819551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.2663882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.87806845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4072129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04842118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2738304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.40584654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.27438214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8597533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40543488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02642298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40646863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6756027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2881404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12246346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1019939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11711593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11015944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10371973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.115973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10691237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12741892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11683355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11694763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10754536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13695455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10098717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11746626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07220533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11799569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15158646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11049934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10363993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1077705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12109624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12895621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10476501], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 10.0
CUMULATIVE NUM SOLVED: 10.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4282, 'query_cost': 0.0, 'learning_time': 300.0567464159976})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3493 datapoints
Loss: 0.02464, iter: 0/100000
Loss: 0.01408, iter: 1000/100000
Loss: 0.00306, iter: 2000/100000
Loss: 0.00251, iter: 3000/100000
Loss: 0.00384, iter: 4000/100000
Loss: 0.00392, iter: 5000/100000
Loss: 0.00299, iter: 6000/100000
Loss: 0.00749, iter: 7000/100000
Loss: 0.00312, iter: 8000/100000
Loss: 0.01659, iter: 9000/100000
Loss: 0.00455, iter: 10000/100000
Loss: 0.00499, iter: 11000/100000
Loss: 0.01382, iter: 12000/100000
Loss: 0.00242, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13360.
Loaded best model with loss: 0.00058
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99914163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44954684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08012756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.40875837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.38121152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4309429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5289903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04930334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13710594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07584833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.40865064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7399217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.32607052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06553844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06840555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06386069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05586943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07575354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04112601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05948295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05373682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02836188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03675467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05971986], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9998533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.33982065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25587556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14792962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9392816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4563361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3864665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.32897392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.45590624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6749687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.31734964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07037832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07350775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07200253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07267135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07361171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.10016201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07529977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.09460584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0649014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07711032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08335908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06254725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08298209], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9595304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45663893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35795158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19355582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9202808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45322412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3941715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.35668817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.45048386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6360593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10602524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.44028273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.57830006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1137258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.45197746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6311298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.08438935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3932483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.3915895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.42754757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.4767787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.35717866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.15802656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9977712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45433426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06417327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40428966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3278202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48206696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74827117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07860255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37235722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2993933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49499467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48818162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4866977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51550865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4821469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.46128485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49060154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4971905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4839778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48851594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48227388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48846906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4573482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47749385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48971897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48263282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48036286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4766681], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9760101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4621846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3494831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16471308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9568741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43676123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01960486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01700488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02268945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01632999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00426341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01122671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01053327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01890509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00016619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00460051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01642915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01196644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01588709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.0077106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01287141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02798725], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9693785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4609592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34390083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14804532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9751531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45833945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35378054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13013807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9703031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4590393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3256162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09220155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.91384727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44391516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02045661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00078483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03443945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.44016907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5419441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3154096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07169637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06522632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04661402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08953556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06991389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05422096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05794946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08298213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07132878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07672214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07689621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08464187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04815144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05895364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08080763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07431742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07256294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07493602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07951659], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9703602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40406433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07035828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02774085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01238138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02727357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4042801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.41041872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01629798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0036713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00193475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02303958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.405681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4490334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3726572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25711736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.45660052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44721323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.46151277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47057325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.45393476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44495824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47919032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44730914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48050812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4542353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44033614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44893667], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99375236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4262035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10430317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0105879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00040248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.002579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01404021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.44733587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5437916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05567583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14779507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07662856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39424405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37300965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3631968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3661774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36484277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38030863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37145886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36233687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3905177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3647568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3600885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38099143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36272672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37183142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36699843], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9708981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42671713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03000858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00267687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10822102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05902866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48522264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75688046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07330973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39704034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3492551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4566907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.66332644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10394372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.43179357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5292714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07109372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38471922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3412235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42960542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5711082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08513429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40828583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42938244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34781414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18237087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 11.0
CUMULATIVE NUM SOLVED: 11.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0]
Tasks solved: 1 / 10
Average time for successes: 1.64799 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.6479870630428195, 'avg_ref_cost': 14.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4603, 'query_cost': 0.0, 'learning_time': 335.9857002599747})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3766 datapoints
Loss: 0.00526, iter: 0/100000
Loss: 0.00314, iter: 1000/100000
Loss: 0.00903, iter: 2000/100000
Loss: 0.00264, iter: 3000/100000
Loss: 0.00384, iter: 4000/100000
Loss: 0.00345, iter: 5000/100000
Loss: 0.00779, iter: 6000/100000
Loss: 0.00792, iter: 7000/100000
Loss: 0.00328, iter: 8000/100000
Loss: 0.00226, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9582.
Loaded best model with loss: 0.00066
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9313488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44900122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02770566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.43205518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.4922831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.34808543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.15210097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.93034005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42255318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06133346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.45641354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59702253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.36992687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.23007515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.35177264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5023371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.36177102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.18993704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9263561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.40276253], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9275201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4262629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04330052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44100037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.48160526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37367287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.22777389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.93935746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4449683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03849839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.4319393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5246522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.35300595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.18008238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.93356484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4312743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.04828397], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91291624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4737382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4445342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5679439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10709253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09145897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07135343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10406731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09791539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10362587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09889728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07742456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08303143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08070007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03193103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02894592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10241535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0869113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07080108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08548917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10334877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10046118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.02999903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10327712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10291193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10515059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10581579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08135586], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.92275226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44721442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0247191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.45487085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5250208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37089846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17996816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9351483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4525527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0157218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.422141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.38869268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.45895138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5960205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.32721454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04383222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05333103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07078637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05809843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06089883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.03882548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04623495], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91818357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45025158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01957923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.44545946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5218295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34892184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09033548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9719281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38387567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06017552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01331362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3720397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13309626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9291074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44052625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.06216513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.40571824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.60898644], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90385634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44763863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06406745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28060612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41386586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3712429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3869623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37247857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39557382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3916363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45852187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37963182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.405323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3468259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3254861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33351505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.352589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35100055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33543321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35688797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35232663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35164154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35152712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31537676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33794054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.32662964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33732533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35399655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35374156], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9299531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45327437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03330581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4610361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.63464034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36864448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.24891067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4336817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69835865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36179158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21691665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.32554516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.47560683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.34381586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1872879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.18362994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13008748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1563308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1720022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.18239306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.15715447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.15202379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.18732676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13258609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1821225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.18709753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.14727023], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94355667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04235533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4259005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.45415083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.376541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.15175885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.92672414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44387114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04416109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4433658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60243285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36755198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25614807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3803583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.555367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.35312003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1816625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9291979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4414059], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04884493], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9334142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44629523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03179782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.43025395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.514327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3484214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12891372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14026433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13491106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12194167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12451667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14531416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1282377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14356971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13905542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10034497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1290578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1445236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14463016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14520226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09819154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14610253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1009132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14128125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11823292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13117233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13178942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11671492], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.91096234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4032107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06553552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4490647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5586029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35148463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07455494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.92506915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4254525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04736136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.44174454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.53005105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.34922478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11752915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11094092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11052921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.10209635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.0949502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11094801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11440404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11153438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.11473992], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 11.0
CUMULATIVE NUM SOLVED: 11.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4962, 'query_cost': 0.0, 'learning_time': 366.21668436497566})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3904 datapoints
Loss: 0.00203, iter: 0/100000
Loss: 0.00644, iter: 1000/100000
Loss: 0.02773, iter: 2000/100000
Loss: 0.00298, iter: 3000/100000
Loss: 0.00573, iter: 4000/100000
Loss: 0.00441, iter: 5000/100000
Loss: 0.00304, iter: 6000/100000
Loss: 0.01642, iter: 7000/100000
Loss: 0.00399, iter: 8000/100000
Loss: 0.00255, iter: 9000/100000
Loss: 0.00156, iter: 10000/100000
Loss: 0.00381, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11703.
Loaded best model with loss: 0.00072
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9954075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39256173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25237608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11359101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.91690075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3969738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.05222303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04043439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.29387844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.503897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.29839772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.94768804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38542587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.04755168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07905556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.22455679], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.998286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.37706682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.24797717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12568167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.995407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3779663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.26044354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.11641952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8965427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.40293524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.07105086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.384767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6880405], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90409166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38531527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06630813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41480222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.56686544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21408032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.92164826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39602357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06180969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.39226985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5254184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2816676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9962325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.33364892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.23072658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.15897472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9432186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.39532176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03377904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03832307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36555254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.44076326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28238302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9918075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.38344476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.24916947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12727515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9721188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.3720308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.28999737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.15723689], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99952775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38016748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2548214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14659274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99791193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3571166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.25853562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1675573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.97830385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.37628233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.28145862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.15116838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9347303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3860332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06049719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00599866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3463108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.31801564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40466413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5636918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27701262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9944939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.36898544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25135797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15596724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9702088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36057857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25937837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.14215715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97443074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36425984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2563317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1389801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9757385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3795909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.26821044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.14054425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9785412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.37107047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.27200457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.14555377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99467164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.36013225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2487761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1525645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96194184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39612854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.27493635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.15794045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.99838233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.37325025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.24654977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.14672348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99951047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34603164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22731487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18134066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.98538834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.34366754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.24901305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.16453291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9697674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.37715343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.29572356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.15371653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98916155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3723379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23580106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12095311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9961703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36974242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2496272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.1542949], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.996223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.3810885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.25005737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.13795254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 12.0
CUMULATIVE NUM SOLVED: 12.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0]
Tasks solved: 1 / 10
Average time for successes: 1.63470 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.6346959449583665, 'avg_ref_cost': 14.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5159, 'query_cost': 0.0, 'learning_time': 400.6324445219652})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4133 datapoints
Loss: 0.01302, iter: 0/100000
Loss: 0.00618, iter: 1000/100000
Loss: 0.01412, iter: 2000/100000
Loss: 0.00675, iter: 3000/100000
Loss: 0.00511, iter: 4000/100000
Loss: 0.00214, iter: 5000/100000
Loss: 0.00167, iter: 6000/100000
Loss: 0.01524, iter: 7000/100000
Loss: 0.01556, iter: 8000/100000
Loss: 0.00218, iter: 9000/100000
Loss: 0.00623, iter: 10000/100000
Loss: 0.00195, iter: 11000/100000
Loss: 0.00181, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12865.
Loaded best model with loss: 0.00060
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9906493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.32329175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21220966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.19161579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9770736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3056781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.23603587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.15683919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98204225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3134294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.2389462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.15550731], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9952943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1952077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.391533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.18405986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2184429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.24801558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26393256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28934118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.33299467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36598173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4047633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.30635738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19336797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2338925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27719474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33766282], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99705124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31623316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16961612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10561385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.99508095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.30801922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.22471812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.19862191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.96305823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.31897128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.23666956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.1820649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.95061433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.33076572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2570817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.19865318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.974864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.310881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.23327765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21624213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9960397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.31227618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.22581038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.13402167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99974257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.31243095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19712111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18434496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98877996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3211757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.23964967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.15767334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9980753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.31107858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.19481377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.15490815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99735117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2420814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41506872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96864337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.32658643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25626588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14434387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.96225125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4029219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.28472453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9781528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.31862187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23295934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.16626774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9734906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.32673088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.22812836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.15305409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.99621356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.30928347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.22881627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.18113925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9764487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.34277785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25406086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15961096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9822919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.31271604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2141803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1973038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9766531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.3330604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.21757641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.19417475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9562975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.34693217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26672423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15616417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.95040894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.33618712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.25713512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.16419499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9826865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.31574368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.21268748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.201499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.940644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3591448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2732858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12982328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9673711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.30583546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2476006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.15859076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9466132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.32784718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2566562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.13895835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 21.0
CUMULATIVE NUM SOLVED: 21.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0]
Tasks solved: 9 / 10
Average time for successes: 1.69142 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.691421263317655, 'avg_ref_cost': 1.6055555555555554, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5494, 'query_cost': 0.0, 'learning_time': 437.8410532879643})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4382 datapoints
Loss: 0.00563, iter: 0/100000
Loss: 0.00855, iter: 1000/100000
Loss: 0.00423, iter: 2000/100000
Loss: 0.00565, iter: 3000/100000
Loss: 0.00379, iter: 4000/100000
Loss: 0.00604, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5044.
Loaded best model with loss: 0.00052
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.58040684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52984726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3096794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6075137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.47986847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.22873235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.44948927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8861126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.28768992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5491785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5132132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1716369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.35251597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.51601344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5195478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.106052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2194451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.41535884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8124686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.27648473], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5106778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5239857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08909638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17655896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35003656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.701133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3648407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.30142066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6078273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4620627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.16014934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32935777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6634521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40380624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10404433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2100024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.41841188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8183031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2971597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.51571965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5293481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11885519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.24324074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5257568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5245977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12648757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23681408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4428998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86001307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2984391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.54218686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51752216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1521914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.2996408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.5739335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51723665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.22521307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.4302499], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5232077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52768064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14685649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4067887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.51102805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5154655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.07075953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.15536375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.27851933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5208369], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.5207661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49774063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.29374823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53065556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53012854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16355072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33562464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5195617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5388479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16769028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7497536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.28274646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.5145261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.52936554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.08374051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.13762495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.28049183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.5622944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.05254161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.0689759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.54617286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52728784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19786976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38827956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.509412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5127149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03583869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08766004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1580718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27198058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.52289945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5247312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12681895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25442585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.56433237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5198386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21621194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.41982618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.5259489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.53191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.14846905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.30008584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.5659406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48989612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.4212184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.2918222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5436087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5111317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0936005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14376186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16313905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.20346265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2275743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26947865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.53134423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.505812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02788123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01840521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03423703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02623131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00868308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06686298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08122011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.03613753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02595662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01635507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00503705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00155813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01236388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.02145416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01344987], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.51441133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50140375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20763299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.5126159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5273539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.09310064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.17558269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.32123986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.608105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.45045403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.15082282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.31082132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.61654276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.46415773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.1624398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.33360496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6679969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.36159733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.23705837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.45313627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5224395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52851266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12945595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2572285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.50940263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5134471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.03881467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.09635545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.20014696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.3840254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.51058286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5327864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09273463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.16165282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.3029282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.5874055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.07744698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.21465813], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 23.0
CUMULATIVE NUM SOLVED: 23.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0]
Tasks solved: 2 / 10
Average time for successes: 1.80215 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 1.8021537034655921, 'avg_ref_cost': 7.475, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5853, 'query_cost': 0.0, 'learning_time': 462.93622003597557})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4565 datapoints
Loss: 0.00313, iter: 0/100000
Loss: 0.01101, iter: 1000/100000
Loss: 0.02529, iter: 2000/100000
Loss: 0.00482, iter: 3000/100000
Loss: 0.00592, iter: 4000/100000
Loss: 0.00309, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5720.
Loaded best model with loss: 0.00051
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9442089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45353022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25388545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9835462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.36851722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.24246621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.14329188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9598118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4557311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.26986158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98524356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.380522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23428404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17415208], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9987401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.22118713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47626126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9970967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.21284555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45333183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97060615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3584657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27767798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18058228], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9774008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.35154602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.21641031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.1765934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9814689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.36077273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.21829243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.18868257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97784716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.34813964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23444256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.140805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9401143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42018786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.29186165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10420943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.00425826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01261649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01444798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0024096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9801403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35151592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24930778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14502122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.973296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.36729956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.23520342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12253243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9787594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.3396392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2166628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.19131248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9995079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22815013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44786212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9417177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46505386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.18438789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9843482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.34721625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21925452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18684737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9987216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.22821681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4765952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9568724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44131482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.27876383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.99715596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.2197447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4552689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99500316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01548796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.21115011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47684023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9564651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46269304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.23243129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9891793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.34431967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.21580426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.1953972], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.971181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3532226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18903889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2202247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9658518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.3494149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.23550814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.17313741], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9823479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.3739684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.22454667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.14586566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99920547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2212645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4630336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9926438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.3506263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.24889037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.12695827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.97547853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.34494218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2390977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.17443684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 32.0
CUMULATIVE NUM SOLVED: 32.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0]
Tasks solved: 9 / 10
Average time for successes: 1.61790 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.6179037218842294, 'avg_ref_cost': 1.5555555555555558, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6119, 'query_cost': 0.0, 'learning_time': 489.52839358799974})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4813 datapoints
Loss: 0.01377, iter: 0/100000
Loss: 0.00309, iter: 1000/100000
Loss: 0.00423, iter: 2000/100000
Loss: 0.00612, iter: 3000/100000
Loss: 0.01442, iter: 4000/100000
Loss: 0.01259, iter: 5000/100000
Loss: 0.00498, iter: 6000/100000
Loss: 0.00366, iter: 7000/100000
Loss: 0.01632, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8648.
Loaded best model with loss: 0.00045
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99228525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2971207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39414006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0725922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.93949956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41068393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.30495512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0904758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.17764245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9812375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.39600053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.24870077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09415397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9830925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41800556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2555383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0614203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0529252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09773535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05794923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08303454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05953213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07912661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05853183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05815424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05811252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06354406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06140594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05970829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04965385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0665601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05157703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06903137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0642778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10365973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06239422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05883601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11767589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0709964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07531227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04780968], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9989355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28062096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40188363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07226311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07975198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07260912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07387351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07603683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07619784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08573127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06989408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08102189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08653745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0907463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08868483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0775119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06205111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0341761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04886347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06652197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08398609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08238449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08510371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06844346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07989533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08081064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06533476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08582305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09523339], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97213334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40028355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28395626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08624019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09417007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09424312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09288841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08668958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1109292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.087857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07884696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07878765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09780215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09645318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08554101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08335734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09052713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1269389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0813034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09184437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09657101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08336939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13738532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09997535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08048776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08918895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09061045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09335755], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9987027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.279816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38495255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09048929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9686992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4320749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.28081945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9498065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42977434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.30806756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.06918198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.22261809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.18374358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9960888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31006753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39093345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09987769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.95640725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.39944407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2903779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10127059], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9944947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.27249715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4217436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08093712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05431741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06460712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06165631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07376716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07967603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06573738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05918767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06906419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04805034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05107367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09926209], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99847263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.27017087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.40141824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07948867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.077273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09034218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07620831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06370039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07468543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07307636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10338087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09499437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08748116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08266149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07647607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0676048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08103321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08020204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0907267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07830883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07562242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.089053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07691926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07175378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07726407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09625859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08951482], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9558428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41778442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.30563197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07407312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07039137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07503691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08416246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06850465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09805421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09089509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11247429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07786153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10016667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07493345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08445945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09436139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08779158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07369731], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09821854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08869007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07794836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08368684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.076152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07589332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08694074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07537554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10529587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07810302], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9826755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40014073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26571575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05939847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08811454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10426825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08906677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08507376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08127134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07431484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08684332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08379875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07720234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08129298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07955053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08654283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09869183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08537999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07814649], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12139844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06617355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09710063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0934988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08546487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07341625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0858076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07689881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1018389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08331697], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9878944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40394497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24721244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08091536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07464834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05911574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06969474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07178736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06562133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11217575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0487771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09107074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10068331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07702428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07115497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07758558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06550854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07972456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09169161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05838199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07261224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07111741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09282931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09400669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0689301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07514035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06006321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06854969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11035805], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 33.0
CUMULATIVE NUM SOLVED: 33.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0]
Tasks solved: 1 / 10
Average time for successes: 1.86320 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 1.8631968720292207, 'avg_ref_cost': 15.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6471, 'query_cost': 0.0, 'learning_time': 522.4058116289962})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5028 datapoints
Loss: 0.01353, iter: 0/100000
Loss: 0.00334, iter: 1000/100000
Loss: 0.00234, iter: 2000/100000
Loss: 0.02265, iter: 3000/100000
Loss: 0.00550, iter: 4000/100000
Loss: 0.00204, iter: 5000/100000
Loss: 0.00458, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6003.
Loaded best model with loss: 0.00094
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99145216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39480025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.24704783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08658596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.94342715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39885205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.29417443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.085903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.1334648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98311496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42194116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.24661714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96720207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40292367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.25985178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08747663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06635661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06594086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0811097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04779463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07958823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08683641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0789834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07419834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08713599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10706502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08084179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0696813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06884971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10485279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08226013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06863314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07541314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05504207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07730336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07293995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08840592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07087318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06781719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06509972], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9965784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3918509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23085743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07498073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9651488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43796644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.28348717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.97595865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.39499888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.26648265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.09839908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97851837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.38793236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23624796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09344321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9741155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.3993381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.24641998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0933065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9879682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4008876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.2458248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.08079915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.06405349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.06633075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.06964396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.071671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.05333494], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.97591513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39686108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2716496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08205917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98904175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.39433694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.2288927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08240356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9483111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.40840334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.3190688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.09063026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.17594707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9954023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28248262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.382712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09228572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9740912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4432845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.27601156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9507643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42442778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2984666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9802486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3965925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.25637236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06967981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.98736733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40074298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.22851011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07247899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.06507275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07574902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.06994952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07642354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.0843973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.08759245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.08041091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.06826654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07739499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07944725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07671713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07368018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07536449], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99771464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.39892372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.21786843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09468579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9980255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39424527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.22102432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08854321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9965388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.39779922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.24825291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0884075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99101186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3973104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22281381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07968013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9532204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.38646668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.2841331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.09440988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9700748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4241344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2677219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.05104553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04741976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.05809183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.06968015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.03769872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.05959986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.06853824], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9526018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42551422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2852853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97220904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.40122193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.26700872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08513547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07282682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.09794982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.11650208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08984151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06312798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07681186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08358257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06719158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06942962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07745408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06811915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07181263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.05018681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.05440725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.09333389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.07895466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.08216935], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 36.0
CUMULATIVE NUM SOLVED: 36.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0]
Tasks solved: 3 / 10
Average time for successes: 1.55985 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 1.5598518996945738, 'avg_ref_cost': 4.8999999999999995, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6767, 'query_cost': 0.0, 'learning_time': 551.5635586069839})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5224 datapoints
Loss: 0.00389, iter: 0/100000
Loss: 0.00741, iter: 1000/100000
Loss: 0.00443, iter: 2000/100000
Loss: 0.00934, iter: 3000/100000
Loss: 0.01804, iter: 4000/100000
Loss: 0.00433, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5813.
Loaded best model with loss: 0.00079
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99011415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4253995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.20215094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.98842275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42814103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2385654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.98048264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4255182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.21455696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98823553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4349786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23429215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9687961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44303477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.26635826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9025836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4261188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.2993872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.08126798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9940302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4377545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22958139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9646201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44387314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.2705021], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9841136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47566175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.25396672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9970696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42335585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23689038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99473226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42274866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.23126999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9939376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42698765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.20379248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98910934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4282459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22502121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.99021417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.43907994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.23549604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9715311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43142664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.2419385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98868024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44235864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23700948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9952096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43102953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23010029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9993482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46197903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.22936814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.94070196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42891985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.27463838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.97696155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.42910916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.20010239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9960902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4308385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.20671162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9437752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4784553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.30653754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27054626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36653474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.40652412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2945096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9891635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.443125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.26140773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9937432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45404813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.23561321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9383189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42894194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28880793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09728327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.36317948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2753796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.9798299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44278473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.26891723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9929399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44848785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.23729028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99456346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45880228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24170533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.96748817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4605627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.26424274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9856061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4262817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.20453258], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 44.0
CUMULATIVE NUM SOLVED: 44.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0]
Tasks solved: 8 / 10
Average time for successes: 1.36649 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.3664932103492902, 'avg_ref_cost': 1.6812500000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7055, 'query_cost': 0.0, 'learning_time': 581.0505999559828})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5347 datapoints
Loss: 0.00827, iter: 0/100000
Loss: 0.00354, iter: 1000/100000
Loss: 0.00182, iter: 2000/100000
Loss: 0.00712, iter: 3000/100000
Loss: 0.00304, iter: 4000/100000
Loss: 0.01011, iter: 5000/100000
Loss: 0.01124, iter: 6000/100000
Loss: 0.00538, iter: 7000/100000
Loss: 0.00362, iter: 8000/100000
Loss: 0.00517, iter: 9000/100000
Loss: 0.00385, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10208.
Loaded best model with loss: 0.00080
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8829089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46119073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38037273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.35492432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.40879503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.40019006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.90731806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44804978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.34515283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.23579457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.89343315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41327736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.30420434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.09073045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.13951276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09887546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11894326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11680469], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.89206105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4119674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32690704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10031269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12040426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11867342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13606714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12249575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11366484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13111436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13372165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11463222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12460932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12723139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13827142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14829162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11585975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12432088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11354124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14143081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13186726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13404447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11591728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16816954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1730848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11650293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11545575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12104443], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.90503323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4492998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32672104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23655693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.91130644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4213461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.30445182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.10143019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9001493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.32852176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.2226808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.907772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.443538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.34335944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19123206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.91024727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44295067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.23079647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10463793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09628238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08469598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09426697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09364294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0948237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11361717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.05620408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08166361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0950536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08631563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.0787037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09776092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08609305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1273154], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8948829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44102108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34859508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23404573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8960106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44536203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.34872288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.25359446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.88848436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45145708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.30453214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.21248665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9013876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41540372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31914103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07530439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13285491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12803641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11813316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14218998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16784638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11257468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14964364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11810529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11545999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11268918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11756336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13716112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14801869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11407176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11596202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10799833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10991884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11380784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11768145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13161536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12563811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12424858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11411615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11571614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11091676], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.89788795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43917182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.31331182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.195437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9126878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.40007457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.28361908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.13307388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.5049034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.22753073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8895372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.40829322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.3268273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.08270323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.11653613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.4786944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.26493272], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8752555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4674454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39103124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.41050947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28159767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27380186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36469695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.341101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40913746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.42348555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38918534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.39800823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3815749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.38021812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37651992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.37259686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38227767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.39616618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36140454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3591964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3632666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.35709158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3790965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.36744252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9079642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4571482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33112374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2806913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4020151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34791458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.90958524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4513921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.33196828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.2412558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9031444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44567114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.30154884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.20368187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8534557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4580577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42582375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38109154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.90192366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4558581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.35630032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.2943199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9167129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43601507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.32450202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.17793944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 46.0
CUMULATIVE NUM SOLVED: 46.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0]
Tasks solved: 2 / 10
Average time for successes: 1.63678 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 2, 'num_total': 10, 'avg_suc_time': 1.6367778559651924, 'avg_ref_cost': 7.45, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7234, 'query_cost': 0.0, 'learning_time': 618.1136544290057})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5438 datapoints
Loss: 0.00331, iter: 0/100000
Loss: 0.00831, iter: 1000/100000
Loss: 0.00316, iter: 2000/100000
Loss: 0.01757, iter: 3000/100000
Loss: 0.00422, iter: 4000/100000
Loss: 0.00405, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5640.
Loaded best model with loss: 0.00115
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9196121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4109179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.31273806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13020417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9133153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44734117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.35758275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.33269978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.39166567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.3774649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3658341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.3700416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.36192456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.36493674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3812173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.372089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.38114133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.39398733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.3846391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.35069132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.44618607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.46129954], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9160908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45776525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35830316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.37065485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.29829916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3053017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.26648146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.91389656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41698694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.30895838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.14350846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.898542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45280454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.378461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.30405653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9126779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4234063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32420048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20065151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.89488155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44814408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.38263923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.35684916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.36095402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.37707603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.36416838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.3188975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.92509425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45472485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.32307667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.28922433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.38704857], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8796933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46391982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38170266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4517918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.31525835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.32458755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28437063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.90270406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4191526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.34240362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.21034703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9224783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46150824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.33555698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.32667902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.3632182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.3604026], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9014213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4636394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.380867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41969535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32429123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34141472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2982778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.886311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4562681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.35867462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.38165277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3595769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.3761283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3412607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.3294863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.35770983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.36887875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3003185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2058186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8957061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45990166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38199225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4123792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31863838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.32775205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28052524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.91865504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4551643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.30715874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.30250394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35224956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.33705223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.34694445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3436638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38788128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.40601856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36123112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.35268268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36285967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.32192698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.42801803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.44356495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.40097916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.42709932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3487187], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.88632226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41817096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36177376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.23573065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.9411192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.3983239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.2800887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.03956209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.11748873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.9131297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4570548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.3616832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.3629092], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.90524876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42906374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.31435528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19084494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9082435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44444588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36104807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3291638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4002986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3582847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.91254354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4547097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.34202114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.2910539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.4333354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.45190996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.40237075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.40728235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.39665258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.3972491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.37730795], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.92284095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40343192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.29805928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06576372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.93286103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.3941909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.27919304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.02473737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.14933403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.9132858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45573056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.34699652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.3022292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.42361546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.4658215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.3390709], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8763127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45817724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4074696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43685323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36057383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.38263848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.26780036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.92867965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4107044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.30244187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.12475573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.90799886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45915195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.37248367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.37823427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.33057445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.34533688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.33251202], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 46.0
CUMULATIVE NUM SOLVED: 46.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7375, 'query_cost': 0.0, 'learning_time': 647.8312459630251})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5568 datapoints
Loss: 0.01279, iter: 0/100000
Loss: 0.01567, iter: 1000/100000
Loss: 0.01060, iter: 2000/100000
Loss: 0.01186, iter: 3000/100000
Loss: 0.00603, iter: 4000/100000
Loss: 0.00194, iter: 5000/100000
Loss: 0.00952, iter: 6000/100000
Loss: 0.00286, iter: 7000/100000
Loss: 0.00806, iter: 8000/100000
Loss: 0.00348, iter: 9000/100000
Loss: 0.01296, iter: 10000/100000
Loss: 0.00506, iter: 11000/100000
Loss: 0.01226, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12785.
Loaded best model with loss: 0.00110
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74218607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38720635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07743213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79554105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44498405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81158036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.441731], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.811787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43881705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7942711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45795178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8078966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4501397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81172055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45025346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7845136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43927076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81321514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4456295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8081815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44390082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80838025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44509742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7985005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45407695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78659064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43259242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8026545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42058128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8085562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44167224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81162477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45461604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75684893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4081823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7989215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4607595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8093352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44657654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.81643796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4396146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8083744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44482496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81310815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4520562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81270736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4510109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8185081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.39455938], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.08851506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.816339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4584233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80519813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4415323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7950738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45809868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81901103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4213353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8204555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4303775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8127772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45420086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 56.0
CUMULATIVE NUM SOLVED: 56.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0]
Tasks solved: 10 / 10
Average time for successes: 1.05106 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.051064956971095, 'avg_ref_cost': 1.1700000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7575, 'query_cost': 0.0, 'learning_time': 690.3820303740213})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5688 datapoints
Loss: 0.00312, iter: 0/100000
Loss: 0.00386, iter: 1000/100000
Loss: 0.00799, iter: 2000/100000
Loss: 0.00618, iter: 3000/100000
Loss: 0.00392, iter: 4000/100000
Loss: 0.01227, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5253.
Loaded best model with loss: 0.00133
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7560312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.38515517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0616544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7744364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4134318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75656813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.472893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76873934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4093025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7590493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.38146245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04704052], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7561522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.3852595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.05681927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7604569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36295378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06469461], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7697185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.39684728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0376003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7614878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4009204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40191618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7671707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.40908724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7612458], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.39312255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.04079287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7428554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.36482394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06747071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75309044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.37331322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07617632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7485522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.36883262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.07545541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7559969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38896903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05606135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7600251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.38415518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0800294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7483113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3808078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04831137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75563806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.39123735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05771724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75139993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.37487254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.07277685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.766188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.40797186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7587362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3920647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04395984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74717325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.36835438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06403296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7735321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.42300534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7534101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3734834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05883256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75950176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4205848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7586972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.33951995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.09048544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7727023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4042738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75013703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4067877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76728094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.3955964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.05906855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 66.0
CUMULATIVE NUM SOLVED: 66.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0]
Tasks solved: 10 / 10
Average time for successes: 1.35893 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.3589253057405586, 'avg_ref_cost': 1.335, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7764, 'query_cost': 0.0, 'learning_time': 720.4132625990314})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5771 datapoints
Loss: 0.01872, iter: 0/100000
Loss: 0.00219, iter: 1000/100000
Loss: 0.00417, iter: 2000/100000
Loss: 0.00717, iter: 3000/100000
Loss: 0.00548, iter: 4000/100000
Loss: 0.00406, iter: 5000/100000
Loss: 0.01730, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6911.
Loaded best model with loss: 0.00086
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.86609054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.55509925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.453977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08767705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08416591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11056852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13612203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.14307663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14010029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11701498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10367467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09555101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07694768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08792698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1107754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11220986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08220734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.04585168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02067575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01123751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01144734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00513917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.01265685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.01650168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00681054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.0277455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02022348], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.87299716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.56308985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5108999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.159363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14587332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14961505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15597531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13854237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11929385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13621995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1317284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11451069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11849138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13238679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1476055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1406685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12926662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14003144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15267928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17393135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15079525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.09069575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04123693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03945732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0607187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05929608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06589993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04876935], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86465293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5457948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51348186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22612539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.205969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2046112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19481458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16039416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13037477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12842296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13575584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16969058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18732585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1797023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18075942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15872678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13395444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11310462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1028752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15169227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.18345088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15159476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08342205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06693369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02882658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02131568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02380992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04470911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04733596], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8892707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5506795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48359022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11019967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10501762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0974797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03122848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02226181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03680414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0264817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00224093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00257291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00496552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00866314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0069283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0060997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00845588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.01013085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04865616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06434675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05407628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04747968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.04839667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06235064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.06318019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06298035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.06013082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04252961], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.86776143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5509887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49800366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1817697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15717721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15077595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13828976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1272349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12932897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10203832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08629875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07563346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01819726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03261222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04727239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04599264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03028882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02425772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03822682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00911886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01521964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00050824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-9.771525e-05], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01219508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05738864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0995098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1017592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07428686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04288838], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.865456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5711321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10419309], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2337197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27405363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.86786157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5487193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47429132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13669302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12657814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.176607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.21325311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1784003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13829102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12611203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09714311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11220442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16207446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14379387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11502197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.16770601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.21389015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.18221207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14224271], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8658844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5503389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51608634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.204619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.17167482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.14998984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11400762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08917676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08292668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07005916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06195393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07566753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08666298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08014539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06295819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.06803485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08152867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.0682122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06080715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05181593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.02222121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.00685362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05138564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07416357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.08090385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09003658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.07496095], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.85717255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5419778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44915512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13403079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11956309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.09438424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.07448445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05477456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03499337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01003291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00069825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00075204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00540686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00829643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00586013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00883443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00950627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.00743977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.06231095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11629325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10950226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08940492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.07713479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0661287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05182631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03703846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.03549744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03334418], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.87546545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.557934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50501233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14570868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12035119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11072201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0907642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06222186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03294709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00864789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01960537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03521723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03190485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03680921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03503744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01898896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00609487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00674944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00845985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00084639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00813659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0304353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.049971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07569305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10099963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10386366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09655583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08285291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07629135], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8713121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52746826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48953024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.84788555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.31390002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8728808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.56827366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.09256718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.27458236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.27912608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8546489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5708461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([-0.10447283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.22433574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.26498982], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 66.0
CUMULATIVE NUM SOLVED: 66.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7900, 'query_cost': 0.0, 'learning_time': 753.3924241020286})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5876 datapoints
Loss: 0.00420, iter: 0/100000
Loss: 0.00563, iter: 1000/100000
Loss: 0.00352, iter: 2000/100000
Loss: 0.00840, iter: 3000/100000
Loss: 0.00582, iter: 4000/100000
Loss: 0.00932, iter: 5000/100000
Loss: 0.01593, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6833.
Loaded best model with loss: 0.00135
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.811549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4823407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8081698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4619999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80707026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4892928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79366875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4758849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8032749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48856202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8150567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45344213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.816899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4801589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8159573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4595897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81365937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46076658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8107097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49512526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81135696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47632262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8182148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45786062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8166679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43482587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80414057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.481482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8052067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4799348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8190723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4885205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81972796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46975413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8005623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49150285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81851286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4809053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80097127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48741767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8168296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48270825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8067191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49353263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82016695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48731947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77502304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46987098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76326936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42995748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81901014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4787102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81857896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4529533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.814407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4592664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8193948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47513548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8194619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46357477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 76.0
CUMULATIVE NUM SOLVED: 76.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0]
Tasks solved: 10 / 10
Average time for successes: 1.06131 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0613053486158606, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8062, 'query_cost': 0.0, 'learning_time': 786.7310831930081})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5939 datapoints
Loss: 0.00608, iter: 0/100000
Loss: 0.00585, iter: 1000/100000
Loss: 0.00727, iter: 2000/100000
Loss: 0.00520, iter: 3000/100000
Loss: 0.01651, iter: 4000/100000
Loss: 0.00672, iter: 5000/100000
Loss: 0.01501, iter: 6000/100000
Loss: 0.00652, iter: 7000/100000
Loss: 0.00343, iter: 8000/100000
Loss: 0.01433, iter: 9000/100000
Loss: 0.00738, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10729.
Loaded best model with loss: 0.00103
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7310304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41270483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04975202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05451034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7370659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41097778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74561536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4154699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7505046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48211932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74599856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42386964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7137197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42446533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74418664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40291208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05096003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04514211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04289224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06515763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05619232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06100971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06502203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0568806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06334884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06675109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06304295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04289822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06158021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04763498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05556971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06480084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05972594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06065924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06305365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07629816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06091713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05897205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02280191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05474316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06411793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05713758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06058056], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76692414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4143954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73927045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4118914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7483335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42090446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7502103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40735236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06580235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07399018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05565692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04773704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06042315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05992188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05907412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05742742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07693849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06788104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05321093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05932866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03847446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03671984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05652668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05560384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05369834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05645572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05885557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05169894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0583824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05615323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05366635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04533771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06499913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06244703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05755355], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7455936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40665436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05408543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05749447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08403125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04360965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07209902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05703377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03677268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06502801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06086843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05990237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06332525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05893769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06002121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05485234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04798211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04973521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07775423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74137604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4073194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06065548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06557614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04793498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04962958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02345371], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7396206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4061273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05399948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05031768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06539635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06193822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0568235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04868421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01914402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05797062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05397009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04796442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0662751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00869773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04759986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0656848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0548862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05025818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06909475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06202444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06182773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05647529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06497527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04687931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0566695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06921553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06147292], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7135205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4136787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73252314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4170319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7461709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4033459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.02364339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.03130168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05381437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0224807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05252406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.04815175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05166174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05473405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05004355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0411757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.03974765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.07150842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.0598216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.05319257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.06235271], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7200131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.40636632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04814493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07835363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06754346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06302701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06631053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07094841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06319135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06684999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05367153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05649931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06224416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06337451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05490925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06514309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02711739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05651244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07918171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06408046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0659053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06690267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06603356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06216495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05532004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0616268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05833749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11072128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06290685], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74231946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41473162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73877305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41973686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7123366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42095426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 80.0
CUMULATIVE NUM SOLVED: 80.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0]
Tasks solved: 4 / 10
Average time for successes: 1.09226 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 4, 'num_total': 10, 'avg_suc_time': 1.0922559897881001, 'avg_ref_cost': 3.4250000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8164, 'query_cost': 0.0, 'learning_time': 826.930932008021})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6009 datapoints
Loss: 0.01791, iter: 0/100000
Loss: 0.01689, iter: 1000/100000
Loss: 0.00382, iter: 2000/100000
Loss: 0.00543, iter: 3000/100000
Loss: 0.00653, iter: 4000/100000
Loss: 0.00755, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5802.
Loaded best model with loss: 0.00127
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8253208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49233317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83233804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49233943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8290481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47355303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8420806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48674762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02893319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0009801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00122298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01106348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02690658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01193833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00738083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00324807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0541268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00319911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00370928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00266055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00950002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00195656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01519508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0051062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00949811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00237166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00869608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00304062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0108669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00209078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01529776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01127207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02793479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01241539], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8693405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49014482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38582703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.54143184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27032274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83910286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48883167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.04781809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03296582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01515814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00371234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00073343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02830319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00701174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00432074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01444068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00724668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00400658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00818525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02106877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00752459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01550908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00410922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.01523676], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.83734936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4917953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03843378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01129628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.82330734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4783106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8370745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4721355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8012157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46378767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8254633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.501427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8585968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4847222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.22089301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.22936808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8162449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49227208], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84118044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4938973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00182533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00503451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00411439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02481675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01274449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0096906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00927256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03169702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01376298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03029175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00414879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04218103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01226177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00414756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01787159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00614878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05950703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01289054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02088084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01380345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02021795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03456014], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8348323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43812588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.83623445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49894068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.03145938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00671285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00321587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01169081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.03375342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01660828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02614017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.04849074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02084693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01362961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01564602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.03313021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02362441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01482656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00310484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.0505374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01508692], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8158078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5086333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82414573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49975315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.831768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47773564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8383299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4910181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02990894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00715384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00373913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0188991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01467938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00732302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0089741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00039474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01200001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02099162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00614514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01261304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02638118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00398431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01904633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00464888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01150156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00563965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02775139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00731029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01123501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01623371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06292527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00948896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00502658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.029803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01354257], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8305184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49290347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8344915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49245784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8251869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4863007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 85.0
CUMULATIVE NUM SOLVED: 85.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0]
Tasks solved: 5 / 10
Average time for successes: 1.20272 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 1.2027190168213564, 'avg_ref_cost': 2.6900000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8281, 'query_cost': 0.0, 'learning_time': 858.9981886360038})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6088 datapoints
Loss: 0.00581, iter: 0/100000
Loss: 0.00616, iter: 1000/100000
Loss: 0.01393, iter: 2000/100000
Loss: 0.00145, iter: 3000/100000
Loss: 0.00590, iter: 4000/100000
Loss: 0.00646, iter: 5000/100000
Loss: 0.01008, iter: 6000/100000
Loss: 0.00486, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7880.
Loaded best model with loss: 0.00035
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.763268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48956937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74264014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46593544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7484248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47370505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73418623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46027824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7882796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49217442], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74353373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45435658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74663186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5042485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7192215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4570378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.753553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46097007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.750744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47660023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7392099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4876303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75375104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46980098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7506226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4926509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7622681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4827058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7458642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4739974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75850123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4485099], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7602689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49136046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7539933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47666895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7651466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49392122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7266044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4502299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7185556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48944417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.732922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46827033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7419965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48685682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7343237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46714973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74274707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46363956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74771696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46257672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70330775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45836318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72908276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45970088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7315602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.488074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78133315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4869555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 95.0
CUMULATIVE NUM SOLVED: 95.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0]
Tasks solved: 10 / 10
Average time for successes: 1.05802 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0580235271801939, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8416, 'query_cost': 0.0, 'learning_time': 894.9401346509985})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6167 datapoints
Loss: 0.01789, iter: 0/100000
Loss: 0.01392, iter: 1000/100000
Loss: 0.01407, iter: 2000/100000
Loss: 0.00596, iter: 3000/100000
Loss: 0.00449, iter: 4000/100000
Loss: 0.00301, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5618.
Loaded best model with loss: 0.00129
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77673954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48438323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7850864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49949884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77513736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47338003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77822244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45110273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77675724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49468064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.83023924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49891645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7833119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4904764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7812584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4784906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77291924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4473973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76607734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4627894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77638835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45997107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7746068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47738668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7488073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44440064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79685205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47084528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76092476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4583195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77588004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4716262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77880335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49861884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78766465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48813874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81302786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4901129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.80933183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47132564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77627665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44943848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7789843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49787226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.815215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5029606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7724308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48442015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7763632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47681665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8082749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45737603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78605527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4771361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7767252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49244127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.770947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47596857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7873245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47112858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 105.0
CUMULATIVE NUM SOLVED: 105.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0]
Tasks solved: 10 / 10
Average time for successes: 1.01525 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0152518155722645, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8545, 'query_cost': 0.0, 'learning_time': 927.3835236140003})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6303 datapoints
Loss: 0.00557, iter: 0/100000
Loss: 0.00511, iter: 1000/100000
Loss: 0.01205, iter: 2000/100000
Loss: 0.01535, iter: 3000/100000
Loss: 0.01638, iter: 4000/100000
Loss: 0.02245, iter: 5000/100000
Loss: 0.00283, iter: 6000/100000
Loss: 0.00296, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7821.
Loaded best model with loss: 0.00110
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79441476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48456314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77722836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49748102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7961411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47912255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79650635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4968777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79524505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4962507], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79754156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.505365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75305104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47866097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8056369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52608943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7867905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4856033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7925391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.490647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7944823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50072145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7649886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49928272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7902918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5036247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7810233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.802116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48932934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7878249], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50187224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8128666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49531403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77983165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50307184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81654775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49202028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7985366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49705318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79612976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5042084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7751507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49251875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79547405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4616164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.789463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48370162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.83385396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49547732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7856303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50249887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7948238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4837711], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80485386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49967268], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8064527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49969566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.791666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.485114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 115.0
CUMULATIVE NUM SOLVED: 115.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0]
Tasks solved: 10 / 10
Average time for successes: 1.01565 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0156452469411306, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8739, 'query_cost': 0.0, 'learning_time': 963.8191112429777})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6371 datapoints
Loss: 0.01133, iter: 0/100000
Loss: 0.00951, iter: 1000/100000
Loss: 0.00349, iter: 2000/100000
Loss: 0.01316, iter: 3000/100000
Loss: 0.02712, iter: 4000/100000
Loss: 0.00165, iter: 5000/100000
Loss: 0.00664, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6000.
Loaded best model with loss: 0.00117
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8141563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47356707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82042956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47363454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8240048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47206342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8047675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4854402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.83012575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45857668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.804901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4716481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80033946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4888063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8170725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46839824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.800645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4758529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.811103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46271336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83287084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47384447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8187202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4466162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8171996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4562814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.83495873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46850476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8094102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47077724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79380655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46835184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80350035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48083818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81647146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4561968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79621124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48201475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.8167715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43821046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79922664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46721897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.81914973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47061458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.81975555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46772894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8190001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4676365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81279755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53276545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81900555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4891756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8000099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46462354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8137926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47140178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8004588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45914432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81158555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47417495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 125.0
CUMULATIVE NUM SOLVED: 125.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0]
Tasks solved: 10 / 10
Average time for successes: 1.01544 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.015444234770257, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8854, 'query_cost': 0.0, 'learning_time': 997.5322663669649})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6489 datapoints
Loss: 0.01286, iter: 0/100000
Loss: 0.00453, iter: 1000/100000
Loss: 0.00387, iter: 2000/100000
Loss: 0.00421, iter: 3000/100000
Loss: 0.00563, iter: 4000/100000
Loss: 0.01250, iter: 5000/100000
Loss: 0.00645, iter: 6000/100000
Loss: 0.01399, iter: 7000/100000
Loss: 0.00401, iter: 8000/100000
Loss: 0.01661, iter: 9000/100000
Loss: 0.01367, iter: 10000/100000
Loss: 0.00808, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11678.
Loaded best model with loss: 0.00119
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76242346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45831835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7700276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49263138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76355565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46012703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7902849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48360935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7591763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4911153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7692793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47881308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79225504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49498826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76926804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4568036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7632826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48898625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7795756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4679292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7692158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48399195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7628159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4551221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78475237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48617882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7724089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4892917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77979535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5026454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7567885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46286494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7746697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4660904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7783974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46129325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77990097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49030405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7635408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4726466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7666955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46795452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77778125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48233873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78905445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50474715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77313524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49004227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7623304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48022044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76697797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49484298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76628447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48308367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78178465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4701283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76936024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4881572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77178895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47373298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 135.0
CUMULATIVE NUM SOLVED: 135.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0]
Tasks solved: 10 / 10
Average time for successes: 1.02004 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0200362543400843, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9028, 'query_cost': 0.0, 'learning_time': 1041.6292868759774})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6644 datapoints
Loss: 0.01240, iter: 0/100000
Loss: 0.00322, iter: 1000/100000
Loss: 0.01081, iter: 2000/100000
Loss: 0.00400, iter: 3000/100000
Loss: 0.01312, iter: 4000/100000
Loss: 0.00505, iter: 5000/100000
Loss: 0.02245, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6408.
Loaded best model with loss: 0.00142
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72599775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43068555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72777456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4376058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7323385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4393531], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7386793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41535056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74195004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4432931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71297026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.41685197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70312554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41912404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73907155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42635107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7287844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.41700858], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7270802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4377081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7304252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.422062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7232839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4410391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75270617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4685561], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.732777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.41762543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7464165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4405256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70817435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42239997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7230101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.40381074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09806543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09542698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7241007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4364835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7298223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42159748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74924487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4315473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7371896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.41217783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72522444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42041788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7294131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.42426446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76563567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.41960418], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7314932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42768392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7803086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44171828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7478546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42993635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74318826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42304072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7066707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4185393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74694675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4422572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 145.0
CUMULATIVE NUM SOLVED: 145.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0]
Tasks solved: 10 / 10
Average time for successes: 1.04035 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0403471025143518, 'avg_ref_cost': 1.1600000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9250, 'query_cost': 0.0, 'learning_time': 1077.0466932619747})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6731 datapoints
Loss: 0.00553, iter: 0/100000
Loss: 0.00506, iter: 1000/100000
Loss: 0.01937, iter: 2000/100000
Loss: 0.00855, iter: 3000/100000
Loss: 0.02323, iter: 4000/100000
Loss: 0.01410, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5212.
Loaded best model with loss: 0.00058
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.773143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47308874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76840854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46223852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75472355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.455077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77490187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4552561], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78314626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45703286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7809065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46318474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76240534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44088155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7804616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49009773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77882385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.462506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76568896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4953239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7851394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46791023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7773086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47465172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78489244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46581227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7812161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45914608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7752964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5014258], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7852776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46924397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7693186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4479049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78116864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48869213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7498735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44858205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7823307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5049516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76872295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49321234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75563186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4590244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7868483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46314088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7900885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46683776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75267386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44497395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7851501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47404265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78387475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48483515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.784158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4716999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7543956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4850141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7853163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46766758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 155.0
CUMULATIVE NUM SOLVED: 155.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0]
Tasks solved: 10 / 10
Average time for successes: 1.06809 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0680859293963294, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9386, 'query_cost': 0.0, 'learning_time': 1110.7712859399908})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6769 datapoints
Loss: 0.01482, iter: 0/100000
Loss: 0.02619, iter: 1000/100000
Loss: 0.01527, iter: 2000/100000
Loss: 0.00554, iter: 3000/100000
Loss: 0.00341, iter: 4000/100000
Loss: 0.01392, iter: 5000/100000
Loss: 0.00978, iter: 6000/100000
Loss: 0.01396, iter: 7000/100000
Loss: 0.00667, iter: 8000/100000
Loss: 0.01118, iter: 9000/100000
Loss: 0.00953, iter: 10000/100000
Loss: 0.01324, iter: 11000/100000
Loss: 0.01499, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12277.
Loaded best model with loss: 0.00141
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77061033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45297286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77570933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45751247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7769375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44198802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7698358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4197661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7836827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46554056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79611033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5091616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7858846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48117417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77162147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4436091], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76544666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43914086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76966465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44090793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7860139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45449865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78164846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4789549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7743208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48580045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77375877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4476308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7528917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45069999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74687886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43871832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.749583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43128666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7749229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44690558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78019464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47188646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77428454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4419287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7813146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4495576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7858423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45719013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76112247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44223213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7771817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46722254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7792019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47417518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7696688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44131947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7854786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46063516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.750679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4533485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78185076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44847164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.758148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43643624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 165.0
CUMULATIVE NUM SOLVED: 165.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0]
Tasks solved: 10 / 10
Average time for successes: 1.08229 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0822866882022937, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9459, 'query_cost': 0.0, 'learning_time': 1156.8705700399878})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6856 datapoints
Loss: 0.01891, iter: 0/100000
Loss: 0.00302, iter: 1000/100000
Loss: 0.00800, iter: 2000/100000
Loss: 0.01351, iter: 3000/100000
Loss: 0.02281, iter: 4000/100000
Loss: 0.01180, iter: 5000/100000
Loss: 0.02830, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6944.
Loaded best model with loss: 0.00027
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77930075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47162428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79479045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45829916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7864005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4809745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77780086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46683085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78445375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48674524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79593295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.489634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7901092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43065116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.802168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48825902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7980943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51909983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7947449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47856665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7939914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47644645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77971065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4817666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79315585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48270848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7906079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49047226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8145005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50651217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.796431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49343094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7885073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47865885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8012386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48935068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79694617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4905204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78248453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48053333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8017214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49823073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79053503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47447446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8004133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47268298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7963586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49679983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8066667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49129212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79627556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50843483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7911229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46261007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7846811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47671437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79041755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4858401], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7649932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4668356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 175.0
CUMULATIVE NUM SOLVED: 175.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0]
Tasks solved: 10 / 10
Average time for successes: 1.01484 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0148357039375697, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9596, 'query_cost': 0.0, 'learning_time': 1194.6400435039832})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6925 datapoints
Loss: 0.01629, iter: 0/100000
Loss: 0.02036, iter: 1000/100000
Loss: 0.01500, iter: 2000/100000
Loss: 0.00242, iter: 3000/100000
Loss: 0.01188, iter: 4000/100000
Loss: 0.00962, iter: 5000/100000
Loss: 0.00857, iter: 6000/100000
Loss: 0.01093, iter: 7000/100000
Loss: 0.00492, iter: 8000/100000
Loss: 0.00615, iter: 9000/100000
Loss: 0.00361, iter: 10000/100000
Loss: 0.00250, iter: 11000/100000
Loss: 0.02203, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12630.
Loaded best model with loss: 0.00063
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7750339], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48747963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78490525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5257744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78672487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53961056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7936276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5175286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7715706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4773209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78260005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49110544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7756881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4851801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74887025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47151184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7757298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49436572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7903281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49780703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7788192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49097428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7778191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49476817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80111253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49950424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77774006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47690234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79494745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51759887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77862006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48981664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7817711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54446274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7815597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53684497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7888345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5002242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7760505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4742152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7856528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5220263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7781462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5251347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80205345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5282039], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7907849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.517517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8010879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5413449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79860675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52588016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75873256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4794427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7713154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4986548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79556286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5384973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7726667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4706667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 185.0
CUMULATIVE NUM SOLVED: 185.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0]
Tasks solved: 10 / 10
Average time for successes: 1.02411 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.024113285515341, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9715, 'query_cost': 0.0, 'learning_time': 1242.2676636209944})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7011 datapoints
Loss: 0.01255, iter: 0/100000
Loss: 0.02595, iter: 1000/100000
Loss: 0.00507, iter: 2000/100000
Loss: 0.01558, iter: 3000/100000
Loss: 0.00509, iter: 4000/100000
Loss: 0.00590, iter: 5000/100000
Loss: 0.00754, iter: 6000/100000
Loss: 0.01795, iter: 7000/100000
Loss: 0.01917, iter: 8000/100000
Loss: 0.00538, iter: 9000/100000
Loss: 0.01039, iter: 10000/100000
Loss: 0.01311, iter: 11000/100000
Loss: 0.00881, iter: 12000/100000
Loss: 0.00923, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13737.
Loaded best model with loss: 0.00144
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.739147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46199188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78804755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5572739], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7704546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45744884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.778588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47806993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77371234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47418696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79381967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48973092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7941973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49156708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.785648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46255267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77840436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46321937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7920493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51228774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.801919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50890607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7910335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4904544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7956825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48726174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.789778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45335868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78359634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4735006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7727335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47004917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79226315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45990774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78995204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45328856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7784304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45785153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.784066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49551472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7940471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.481767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.733116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45900607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7814044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4582646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7901824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4772519], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7682006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47008458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7845327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46615842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7823287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49194676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77367663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5062204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78559655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4665269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.83398104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48592743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 195.0
CUMULATIVE NUM SOLVED: 195.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0]
Tasks solved: 10 / 10
Average time for successes: 1.01442 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.014419622576679, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9859, 'query_cost': 0.0, 'learning_time': 1291.292325279006})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7064 datapoints
Loss: 0.01224, iter: 0/100000
Loss: 0.00331, iter: 1000/100000
Loss: 0.00525, iter: 2000/100000
Loss: 0.01879, iter: 3000/100000
Loss: 0.00266, iter: 4000/100000
Loss: 0.01494, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5777.
Loaded best model with loss: 0.00121
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7700174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44973382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77467734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45027307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77484787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48101786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77411026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50987834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7724221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4694841], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76562953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4507011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.772588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44617885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77685946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45393792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76657945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4501932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7612862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4662679], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7636377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47269174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77236825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48771128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8053555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5208836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77674717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4507299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7577338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48029763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8040645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5023029], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7401966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47679156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77216727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4943656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7878511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4773486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7791949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47134262], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7874411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49369368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.778228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44662213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7775086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4586387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7516176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45321542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7796625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45989594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7789046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45227405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78101254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4818163], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7719155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4540746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7719777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47374874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75833404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45504773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 205.0
CUMULATIVE NUM SOLVED: 205.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0]
Tasks solved: 10 / 10
Average time for successes: 1.01658 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0165811006416334, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9956, 'query_cost': 0.0, 'learning_time': 1327.1888477689936})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7101 datapoints
Loss: 0.00633, iter: 0/100000
Loss: 0.01204, iter: 1000/100000
Loss: 0.00603, iter: 2000/100000
Loss: 0.00472, iter: 3000/100000
Loss: 0.02056, iter: 4000/100000
Loss: 0.00548, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5340.
Loaded best model with loss: 0.00157
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7933603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46089023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78181106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45514306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7764671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46674055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7683467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44779763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76929796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45770374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76887256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45496607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.777978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44792408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7877545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45746696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78428984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47053134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.776878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45874876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78082025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45923808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7739638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45164022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7505324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.443627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7795071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.497536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7725175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44154465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77963054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47970396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76665723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47288612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74716526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45341402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.774316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44226062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78169644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4621147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7805929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45364827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7478338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4386719], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7878544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47601482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7530136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44185698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7787712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4624786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7520601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46291336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77911115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4573861], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7576273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45659536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7850487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4901843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7833429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46799415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 215.0
CUMULATIVE NUM SOLVED: 215.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0]
Tasks solved: 10 / 10
Average time for successes: 1.01494 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0149390597216552, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10027, 'query_cost': 0.0, 'learning_time': 1363.2786808469973})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7168 datapoints
Loss: 0.00603, iter: 0/100000
Loss: 0.00669, iter: 1000/100000
Loss: 0.01126, iter: 2000/100000
Loss: 0.00800, iter: 3000/100000
Loss: 0.00517, iter: 4000/100000
Loss: 0.00728, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5388.
Loaded best model with loss: 0.00184
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75729084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43802625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7683385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44791862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7793092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46246517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.80723923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4878566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7770985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4739272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7798427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46907154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7690636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4497746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74650604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45812696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76860034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45491916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.739384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5021973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7603844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44365513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7859251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47330472], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7243958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4574955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7635982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4656827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.766576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44264522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48210177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7646417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49709806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.737929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43811977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77551764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43749434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74122745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45370203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7698463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48637176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7761162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46690923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74713296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4617886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7642806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46964014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76730835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44995406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77121615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45423278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77602154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4578443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74523574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44712254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7566017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43259105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77691436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45456594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 225.0
CUMULATIVE NUM SOLVED: 225.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0]
Tasks solved: 10 / 10
Average time for successes: 1.01360 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0135964990593493, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10138, 'query_cost': 0.0, 'learning_time': 1398.929725443013})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7243 datapoints
Loss: 0.01001, iter: 0/100000
Loss: 0.00554, iter: 1000/100000
Loss: 0.00713, iter: 2000/100000
Loss: 0.00741, iter: 3000/100000
Loss: 0.00728, iter: 4000/100000
Loss: 0.00611, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5684.
Loaded best model with loss: 0.00047
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75885034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.450882], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46183985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73854685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45304805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7545143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47894192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7410211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4458164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76103455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45176446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75870454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45148087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7206789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43645462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7464142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45097786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7441748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5324417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7559758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45165703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74996954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4471584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76147354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49722117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7663795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45449975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7418344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46010992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7516574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45661536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7535362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4448783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7246978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46156108], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7605491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44480082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7377391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45978302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76133215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5103965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74036497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4493657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74872553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45126328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7512881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44606012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7632693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46850324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75792223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44159845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7438754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44487342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74724776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44610494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.762574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4763361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75764734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4428246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 235.0
CUMULATIVE NUM SOLVED: 235.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0]
Tasks solved: 10 / 10
Average time for successes: 1.01624 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0162413073936478, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10259, 'query_cost': 0.0, 'learning_time': 1435.4280397530238})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7357 datapoints
Loss: 0.01048, iter: 0/100000
Loss: 0.01650, iter: 1000/100000
Loss: 0.00613, iter: 2000/100000
Loss: 0.01574, iter: 3000/100000
Loss: 0.00903, iter: 4000/100000
Loss: 0.01337, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5421.
Loaded best model with loss: 0.00193
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75868267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46843368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7888452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46211967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77019626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48587796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75987005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44588622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74814457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4567871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76703185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48795426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7562315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46714082], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7864193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45820943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78004515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4469655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77819484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4500288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7717787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.458345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7748493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4729131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7730832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44454217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7463302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49769586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77529657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46174985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7330701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45050505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7615413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50074357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7611685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45646203], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76940936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4579822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77989453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4711861], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7900971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4684736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7905437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45659015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7740473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47284475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7773691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44453812], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77347755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4408441], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7778245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45758614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7913006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45149943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7692219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46422467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77715504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46132487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77475286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45755795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 245.0
CUMULATIVE NUM SOLVED: 245.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0]
Tasks solved: 10 / 10
Average time for successes: 1.01314 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0131353978824336, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10423, 'query_cost': 0.0, 'learning_time': 1472.0361800980463})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7397 datapoints
Loss: 0.02410, iter: 0/100000
Loss: 0.01877, iter: 1000/100000
Loss: 0.01241, iter: 2000/100000
Loss: 0.02267, iter: 3000/100000
Loss: 0.00739, iter: 4000/100000
Loss: 0.00760, iter: 5000/100000
Loss: 0.00827, iter: 6000/100000
Loss: 0.01593, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7133.
Loaded best model with loss: 0.00179
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7714094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.506823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.813839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4987106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7898211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48348618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.781775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.464173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7943047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4914743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80469817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50227493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.81350094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5145937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82384014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5454376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77987134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47110608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7558397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4708301], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78528666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47497126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7944309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49517718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7721771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45605907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79442483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4914986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7947338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45422873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7818544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4923605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78023314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4729043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7859669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47478932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7817664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46644893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7918122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49485034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7914385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4538043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79720855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48642588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80108106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49374625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78796756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47245064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7974635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49328342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.79315484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46431985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78519195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50648844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7887318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4917991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76194733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45958242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7962025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5177053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 255.0
CUMULATIVE NUM SOLVED: 255.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0]
Tasks solved: 10 / 10
Average time for successes: 1.01480 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.01480412860692, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10497, 'query_cost': 0.0, 'learning_time': 1512.31293662003})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7487 datapoints
Loss: 0.02152, iter: 0/100000
Loss: 0.01208, iter: 1000/100000
Loss: 0.01056, iter: 2000/100000
Loss: 0.01933, iter: 3000/100000
Loss: 0.02597, iter: 4000/100000
Loss: 0.02067, iter: 5000/100000
Loss: 0.01818, iter: 6000/100000
Loss: 0.02043, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7337.
Loaded best model with loss: 0.00202
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7684838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4521224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7751261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47115818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.783772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45401582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75906783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4643691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77885026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47661263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7739117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47116217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7759819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49238455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77551186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48014832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74127465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45959398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76068854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47342256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8036197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48998475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7832752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4664581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7810627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4885131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.775253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47235125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7453604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46410432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7717572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4570855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7800464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48758233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7667748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46155435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7817132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4879306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7752768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47275275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7836293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4783104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78162146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46865833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7781432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46379402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7703694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47637954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77686083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46760997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78655195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47799015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76772076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48231798], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7778229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.494242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75525695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4917598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77163523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46900517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 265.0
CUMULATIVE NUM SOLVED: 265.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0]
Tasks solved: 10 / 10
Average time for successes: 1.01626 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0162594500958222, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10640, 'query_cost': 0.0, 'learning_time': 1552.4624884830264})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7547 datapoints
Loss: 0.01111, iter: 0/100000
Loss: 0.01086, iter: 1000/100000
Loss: 0.01791, iter: 2000/100000
Loss: 0.01583, iter: 3000/100000
Loss: 0.01088, iter: 4000/100000
Loss: 0.01019, iter: 5000/100000
Loss: 0.01992, iter: 6000/100000
Loss: 0.01705, iter: 7000/100000
Loss: 0.00979, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8031.
Loaded best model with loss: 0.00182
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78107893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49652728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7934086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47278428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7615047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44728345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7721879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45304632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7629829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44569913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77867764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47748908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7824299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47406018], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7662933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46619815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7765384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4540734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7838488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4495992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78288287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44756418], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78892225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49782944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8045814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4971737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7747164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47225508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77815634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47495115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7774936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4553273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78021026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4583967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.794677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4762647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7958792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45605105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77001375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.44250157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7733589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45711616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7824703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46905014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77201915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46630365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7795667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4555896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7737438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45411822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7722012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47470632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77208966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46938196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7730893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45678297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75896925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47365534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76889586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48316136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 275.0
CUMULATIVE NUM SOLVED: 275.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0]
Tasks solved: 10 / 10
Average time for successes: 1.01582 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.015824698130018, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10741, 'query_cost': 0.0, 'learning_time': 1594.0051523060247})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7612 datapoints
Loss: 0.01290, iter: 0/100000
Loss: 0.02361, iter: 1000/100000
Loss: 0.01214, iter: 2000/100000
Loss: 0.01004, iter: 3000/100000
Loss: 0.01144, iter: 4000/100000
Loss: 0.00358, iter: 5000/100000
Loss: 0.01849, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6404.
Loaded best model with loss: 0.00198
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77297664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45535573], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78006756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45035836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7922323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47898754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7757774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4499948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7808321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47601384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7818154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47316495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7826388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46099833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7681085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42181176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7761048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46556562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.759732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42926276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78106767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45477635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78056765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46625936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7906662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47632495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7867366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48047137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7773908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.43064517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8009127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4944797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77868414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45866123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7835947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.471801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7840894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4363117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.77919567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45824224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7814788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45228392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78184396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43357664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76789004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4388699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7867556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48472497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77902865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47126853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7873644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4728617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78784597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48258758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7759363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44625756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76414275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41822875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7516822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4202002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 285.0
CUMULATIVE NUM SOLVED: 285.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0]
Tasks solved: 10 / 10
Average time for successes: 1.01257 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0125650951871648, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10849, 'query_cost': 0.0, 'learning_time': 1633.0570273080375})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7669 datapoints
Loss: 0.00424, iter: 0/100000
Loss: 0.00569, iter: 1000/100000
Loss: 0.00432, iter: 2000/100000
Loss: 0.01322, iter: 3000/100000
Loss: 0.00648, iter: 4000/100000
Loss: 0.00665, iter: 5000/100000
Loss: 0.02942, iter: 6000/100000
Loss: 0.00425, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7842.
Loaded best model with loss: 0.00194
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78097826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5314378], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77505624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46814576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8002834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48825675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78430367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45108092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.781157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4424226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74190086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43671763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7757708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4435608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7794049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42901668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78328353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42789406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7781217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44568762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7964547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46467116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79720867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45257884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79516786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44498032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78424746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48515275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7941679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44531086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77900493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43994793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7805522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44927382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8024636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4744621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7892011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45952874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7801238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4689571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7894083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46232757], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77059025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43952024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80391866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49112222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7943175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4407374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7948814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46923667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46836242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77767897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45019928], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7653569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4267685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7642947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44623125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77505934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44513488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 295.0
CUMULATIVE NUM SOLVED: 295.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0]
Tasks solved: 10 / 10
Average time for successes: 1.02052 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0205202641751385, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10947, 'query_cost': 0.0, 'learning_time': 1674.8196816250274})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7740 datapoints
Loss: 0.00459, iter: 0/100000
Loss: 0.00448, iter: 1000/100000
Loss: 0.01081, iter: 2000/100000
Loss: 0.00618, iter: 3000/100000
Loss: 0.00536, iter: 4000/100000
Loss: 0.01111, iter: 5000/100000
Loss: 0.01892, iter: 6000/100000
Loss: 0.03266, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7038.
Loaded best model with loss: 0.00147
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7772724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45084304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78810215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45158604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78505015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45386246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76397514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45902252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7644477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4534458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7733696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.471766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7831522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47221246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78958917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4782786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7787009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44875377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74820966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44893822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7696006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48114556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7875166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.442026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78195566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45532465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79295236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46348435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80697346], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4574621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7917981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4579478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77851933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45054138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7703694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46017843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7835949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45633224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.79242134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4827703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78859687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4599199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7744614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44882482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78179336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47311705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77204996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45841828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78977036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45949075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77603865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.44907528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7834944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45030254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79409426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4557322], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.805379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45635813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78563243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48315904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 305.0
CUMULATIVE NUM SOLVED: 305.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0]
Tasks solved: 10 / 10
Average time for successes: 1.01509 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.015092135508894, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11057, 'query_cost': 0.0, 'learning_time': 1715.5806176760234})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7827 datapoints
Loss: 0.00351, iter: 0/100000
Loss: 0.02662, iter: 1000/100000
Loss: 0.00898, iter: 2000/100000
Loss: 0.00575, iter: 3000/100000
Loss: 0.01999, iter: 4000/100000
Loss: 0.02276, iter: 5000/100000
Loss: 0.00648, iter: 6000/100000
Loss: 0.01005, iter: 7000/100000
Loss: 0.00594, iter: 8000/100000
Loss: 0.00761, iter: 9000/100000
Loss: 0.01189, iter: 10000/100000
Loss: 0.00904, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11273.
Loaded best model with loss: 0.00113
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72740805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44795835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75316215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43831474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72468466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46490172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7521858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42702892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7592168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4651756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7124191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45372728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7388212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.449801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47165024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74609095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47028068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7683344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44923964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74843365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44447586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74269783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47951367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75475395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43440238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75800073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4563206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7341727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46001542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74666286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43428582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7563411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4341527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7478987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43652537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7460294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46493334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75184375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45302835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7478603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45671192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7296372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46938133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76498103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43109295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74536794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.43261075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75334936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43500277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7404131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45277542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75492734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48362774], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.754751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4381555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7515985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43968296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72124296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49199218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 315.0
CUMULATIVE NUM SOLVED: 315.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0]
Tasks solved: 10 / 10
Average time for successes: 1.01842 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0184176838229178, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11195, 'query_cost': 0.0, 'learning_time': 1764.518743334018})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7932 datapoints
Loss: 0.00599, iter: 0/100000
Loss: 0.00657, iter: 1000/100000
Loss: 0.02209, iter: 2000/100000
Loss: 0.01026, iter: 3000/100000
Loss: 0.01688, iter: 4000/100000
Loss: 0.01010, iter: 5000/100000
Loss: 0.01804, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6080.
Loaded best model with loss: 0.00154
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7947525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45712772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8411374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46452585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8207733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45416176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8010976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4136984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7831329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44401395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80381054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43972206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77672726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49086756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7942842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4656701], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7739012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4496893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77130336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46105263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7897532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44751453], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7747728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4441102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7781436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4505057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79236007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44495904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7782727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.44891572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7885567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46030903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76452667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46614662], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77804214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46460903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79136044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46654266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7732215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4455684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7816527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45218545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7710512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46559116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77937746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45436242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7677116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4668329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7903581], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4426807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.762733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45434713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76652837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46857247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7898703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44560584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7791587], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4548547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78087664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4431218], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 325.0
CUMULATIVE NUM SOLVED: 325.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0]
Tasks solved: 10 / 10
Average time for successes: 1.02161 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0216129831096623, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11358, 'query_cost': 0.0, 'learning_time': 1804.3704155560408})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7973 datapoints
Loss: 0.00470, iter: 0/100000
Loss: 0.00724, iter: 1000/100000
Loss: 0.01381, iter: 2000/100000
Loss: 0.00739, iter: 3000/100000
Loss: 0.01654, iter: 4000/100000
Loss: 0.00460, iter: 5000/100000
Loss: 0.00977, iter: 6000/100000
Loss: 0.00603, iter: 7000/100000
Loss: 0.00513, iter: 8000/100000
Loss: 0.01645, iter: 9000/100000
Loss: 0.01509, iter: 10000/100000
Loss: 0.00784, iter: 11000/100000
Loss: 0.00536, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12604.
Loaded best model with loss: 0.00176
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77472717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43694186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7503717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45942524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7742907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44774598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7761373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46150565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7800313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44115925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77089775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46710452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.784844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44734645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7778022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43536124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7695876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4372145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7784211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43227708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76024777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44128263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7752023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42474723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78140086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43728498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7707156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45004362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7717696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4341349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7796295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44981086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77124727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44370678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.739313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4577351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80420506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45307684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7951961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4353883], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77154857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45342702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76612973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4476797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.775115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4532854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75999624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46504778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76158303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4394486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7780315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4534958], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7671953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4407558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79944885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46286488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7706421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7691751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45355237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 335.0
CUMULATIVE NUM SOLVED: 335.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0]
Tasks solved: 10 / 10
Average time for successes: 1.01838 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.018375934677897, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11442, 'query_cost': 0.0, 'learning_time': 1855.2207093050529})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8016 datapoints
Loss: 0.00474, iter: 0/100000
Loss: 0.01044, iter: 1000/100000
Loss: 0.01208, iter: 2000/100000
Loss: 0.01205, iter: 3000/100000
Loss: 0.02304, iter: 4000/100000
Loss: 0.01233, iter: 5000/100000
Loss: 0.00677, iter: 6000/100000
Loss: 0.01680, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7268.
Loaded best model with loss: 0.00078
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77200496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49121374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77138406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47582445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77981335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.480666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7879138], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45895392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7743554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4933744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77877647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4776657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75303465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49283952], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77822584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.485917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7605646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5076989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7249819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49012738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7544931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45743605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7654315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49660072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73184294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49413925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71989775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53124154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7712744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4862775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7834726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4764607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7734105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4678826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77555746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47281104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.786305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48842373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76963913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49599388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77994365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47613114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7777431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47817788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77277595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48680174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7630663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47052193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7748487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45315617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78685355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49334738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7801928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4827931], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76814073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46719784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76112247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45485693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78277665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46998826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 345.0
CUMULATIVE NUM SOLVED: 345.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0]
Tasks solved: 10 / 10
Average time for successes: 1.01688 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0168790371128125, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11519, 'query_cost': 0.0, 'learning_time': 1897.4755474900594})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8080 datapoints
Loss: 0.01081, iter: 0/100000
Loss: 0.01573, iter: 1000/100000
Loss: 0.00876, iter: 2000/100000
Loss: 0.00864, iter: 3000/100000
Loss: 0.01108, iter: 4000/100000
Loss: 0.01602, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5127.
Loaded best model with loss: 0.00151
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73858714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48750287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7410334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47701138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7710113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46791673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7493406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45721564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7333314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4920351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7559831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44219372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.732173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49715862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73449564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48239198], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74161315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4857484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7407516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47336164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73347723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49600837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73802125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5057471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7651866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47204152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7358154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4876686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72916245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4945966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75883853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48039263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7373296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4886854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75506794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46540135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75790554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48623943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7334951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49555525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72170293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4654977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76102567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.464536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72126424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45090532], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7366399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4789744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7355467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5095343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7315338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49237707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.730163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46700224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7491237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47829792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7340047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48529187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72365737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48341188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 355.0
CUMULATIVE NUM SOLVED: 355.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0]
Tasks solved: 10 / 10
Average time for successes: 1.01361 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0136127145931824, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11627, 'query_cost': 0.0, 'learning_time': 1936.9929852700734})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8137 datapoints
Loss: 0.01894, iter: 0/100000
Loss: 0.00582, iter: 1000/100000
Loss: 0.00974, iter: 2000/100000
Loss: 0.02066, iter: 3000/100000
Loss: 0.00760, iter: 4000/100000
Loss: 0.00356, iter: 5000/100000
Loss: 0.01491, iter: 6000/100000
Loss: 0.01626, iter: 7000/100000
Loss: 0.00802, iter: 8000/100000
Loss: 0.00766, iter: 9000/100000
Loss: 0.01106, iter: 10000/100000
Loss: 0.02050, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11016.
Loaded best model with loss: 0.00082
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7276483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4937929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72803307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47085604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7326143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47642037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73726165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4785153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.726082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4646856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73695755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5025964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7283531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4874684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74317145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48658064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7513674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50505996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73013926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4841041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7258216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49893266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74534184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48780015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7262933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48676383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74604154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47533327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73104376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46864402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7327403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49010646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7284093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48882142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7683287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5143016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74841624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52393985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7292788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47919607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77312803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48663726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7589304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49585918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73288393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4947267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7281086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4894124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7335146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5033877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73559886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48855233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73118585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4775893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72778755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48724768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7652707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5028373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77230364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46186894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 365.0
CUMULATIVE NUM SOLVED: 365.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0]
Tasks solved: 10 / 10
Average time for successes: 1.01466 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0146605364017887, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11730, 'query_cost': 0.0, 'learning_time': 1985.8674587750866})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8182 datapoints
Loss: 0.00981, iter: 0/100000
Loss: 0.02017, iter: 1000/100000
Loss: 0.01998, iter: 2000/100000
Loss: 0.01088, iter: 3000/100000
Loss: 0.00782, iter: 4000/100000
Loss: 0.00596, iter: 5000/100000
Loss: 0.00956, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6238.
Loaded best model with loss: 0.00152
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77742034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45829007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78155625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47397807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7639414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45426056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7683005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4611293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.79792553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44247213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8054811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44614667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77358544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4626645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7903508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44356096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76841974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45632672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76550794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4897782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7784897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45589077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77156883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45176256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7888807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4439683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8037431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46417433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.777942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45224753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78083944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47932562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7977129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4497037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7764639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4580599], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7795197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44697735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.82356864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45138678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77189827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4433616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7722651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45260763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7719074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47290146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.82060057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45069534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47007328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77154255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45783135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.80865294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46142963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8144854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44272855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7719944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48227155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7771924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.514362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 375.0
CUMULATIVE NUM SOLVED: 375.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0]
Tasks solved: 10 / 10
Average time for successes: 1.01417 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.014173996989848, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11817, 'query_cost': 0.0, 'learning_time': 2027.082571330102})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8258 datapoints
Loss: 0.01362, iter: 0/100000
Loss: 0.00642, iter: 1000/100000
Loss: 0.01399, iter: 2000/100000
Loss: 0.00650, iter: 3000/100000
Loss: 0.00905, iter: 4000/100000
Loss: 0.01305, iter: 5000/100000
Loss: 0.00859, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6820.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70955765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45421427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75337714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47337955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75194836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4734344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7499663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46712637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7565366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45728087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75830853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45057926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7702292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4643219], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75376475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4770544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78527147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4635693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7644999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47595838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7701058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46539336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76554126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5042995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74076927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46667707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7623471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4708403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75312555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46505216], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7431721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45662197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6843728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47161722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76355016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4792697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7578472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4643374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7858188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47602522], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75005877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4636894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68832386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4653448], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75228614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43550172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.745146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.453523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7537825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47924164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7625805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47517988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7546807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47690314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75145364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49538097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7528151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47324646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7608636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48587763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 385.0
CUMULATIVE NUM SOLVED: 385.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0]
Tasks solved: 10 / 10
Average time for successes: 1.01685 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0168465003895109, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11947, 'query_cost': 0.0, 'learning_time': 2069.4608684621053})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8325 datapoints
Loss: 0.01206, iter: 0/100000
Loss: 0.02828, iter: 1000/100000
Loss: 0.02993, iter: 2000/100000
Loss: 0.00428, iter: 3000/100000
Loss: 0.01120, iter: 4000/100000
Loss: 0.03207, iter: 5000/100000
Loss: 0.01086, iter: 6000/100000
Loss: 0.01946, iter: 7000/100000
Loss: 0.00579, iter: 8000/100000
Loss: 0.00665, iter: 9000/100000
Loss: 0.01547, iter: 10000/100000
Loss: 0.01132, iter: 11000/100000
Loss: 0.01951, iter: 12000/100000
Loss: 0.00793, iter: 13000/100000
Loss: 0.01344, iter: 14000/100000
Loss: 0.00612, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15873.
Loaded best model with loss: 0.00020
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74849564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47118717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.750996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49766845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75053304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4836435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7442386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45448217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7632892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.45981425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7562383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49159914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7847269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43561837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7508156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46359777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75502926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46607602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7558071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51198775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7464392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47951326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7527081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47481003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76575863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46106535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7576958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4753976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7520083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4643876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7523426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47639295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74605143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44740224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73378736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48270455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74433684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47629726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76692384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46746972], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7454376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45273587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7610889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48142833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75388306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50357944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75196195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47432417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7399485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49160364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7531011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47446728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74811405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4623562], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7540995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47294727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76273584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46129], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75155306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46185815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 395.0
CUMULATIVE NUM SOLVED: 395.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0]
Tasks solved: 10 / 10
Average time for successes: 1.01406 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0140572706470266, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12060, 'query_cost': 0.0, 'learning_time': 2128.0381879091146})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8361 datapoints
Loss: 0.00950, iter: 0/100000
Loss: 0.02095, iter: 1000/100000
Loss: 0.01840, iter: 2000/100000
Loss: 0.00641, iter: 3000/100000
Loss: 0.01126, iter: 4000/100000
Loss: 0.01444, iter: 5000/100000
Loss: 0.00721, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6384.
Loaded best model with loss: 0.00205
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7633485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5092902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70486534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47360495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.734304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49593204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7123769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4960048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7126784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.498058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71616894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5187534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69893557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4630575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73529553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48465556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6925237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50886786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.68840563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50954425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72567934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49214602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70000666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51270664], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70288736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5045362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7149274], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49806672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6975111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5043511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72480345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4805974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69312197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49260795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70286167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49833047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70719504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48745257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7299934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4984078], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6929184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5062475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7014016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47273424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74524605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49484256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7275445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5086978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7019481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4998275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.700559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49753013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69692355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5151097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72312915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4966257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6894423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5085326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71593547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4970326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 405.0
CUMULATIVE NUM SOLVED: 405.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0]
Tasks solved: 10 / 10
Average time for successes: 1.08946 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.089459088165313, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12133, 'query_cost': 0.0, 'learning_time': 2169.3579583581013})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8419 datapoints
Loss: 0.01351, iter: 0/100000
Loss: 0.01203, iter: 1000/100000
Loss: 0.01090, iter: 2000/100000
Loss: 0.01163, iter: 3000/100000
Loss: 0.01297, iter: 4000/100000
Loss: 0.00509, iter: 5000/100000
Loss: 0.00955, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6421.
Loaded best model with loss: 0.00214
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7337316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4614867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7421841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.465099], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71022856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47089595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7555083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46343043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74821013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.44163936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7245933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4792428], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7447842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4482252], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7298811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4510207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72756946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48040417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75764006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.744583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44720528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7488825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44605538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7366232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.474902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75831944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45951077], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7903331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47862715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7310446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47478136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.759347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43852806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7536547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46669704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7449175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45340317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71128213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48706925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7436248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49059397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.739156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45407936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74278677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46442232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7778225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5017689], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7506627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48390678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7334911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48186642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7721437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4815749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7478952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48671585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7421096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46901903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7386271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46072465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 415.0
CUMULATIVE NUM SOLVED: 415.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0]
Tasks solved: 10 / 10
Average time for successes: 1.01573 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0157306270382833, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12236, 'query_cost': 0.0, 'learning_time': 2211.7008590001205})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8500 datapoints
Loss: 0.00748, iter: 0/100000
Loss: 0.01181, iter: 1000/100000
Loss: 0.00923, iter: 2000/100000
Loss: 0.00672, iter: 3000/100000
Loss: 0.00599, iter: 4000/100000
Loss: 0.02788, iter: 5000/100000
Loss: 0.02001, iter: 6000/100000
Loss: 0.01561, iter: 7000/100000
Loss: 0.01357, iter: 8000/100000
Loss: 0.00490, iter: 9000/100000
Loss: 0.01872, iter: 10000/100000
Loss: 0.00526, iter: 11000/100000
Loss: 0.00474, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12878.
Loaded best model with loss: 0.00203
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7454667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4783343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7676646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46758276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7674589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.479102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7776875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46224126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8284888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49680388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80056906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49363285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7798752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4915676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7908836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50679857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7705829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48564926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75633335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46157396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7912422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4792987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.66910064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5131696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79363704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48283288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78379893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49165726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7522113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78535396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43674606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.807134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49238673], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79036766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48960894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7517062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47913358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7682838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4802468], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7770573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47052795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7763751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4967891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7581206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4660293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.753879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46014008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7591604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47853097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78041404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48754162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.78094757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51425445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74918574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45816514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76556623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49870503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7757936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48761854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 425.0
CUMULATIVE NUM SOLVED: 425.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0]
Tasks solved: 10 / 10
Average time for successes: 1.09651 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0965082540002187, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12360, 'query_cost': 0.0, 'learning_time': 2264.47602146212})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8549 datapoints
Loss: 0.00465, iter: 0/100000
Loss: 0.01512, iter: 1000/100000
Loss: 0.00743, iter: 2000/100000
Loss: 0.01365, iter: 3000/100000
Loss: 0.01989, iter: 4000/100000
Loss: 0.01721, iter: 5000/100000
Loss: 0.00973, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6447.
Loaded best model with loss: 0.00221
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7227648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48701286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7355724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48672086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76633376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46129376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7323227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48117116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7278525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4833086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73160934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48571813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74609566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44022605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73817754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46786815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7454509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4798902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7491563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42939246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7322579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4777655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7317726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48251274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7242047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4709817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7314747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4886332], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71522105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50778794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7132378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4950321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7457819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46497205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7403385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48174372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7373212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47587547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7289369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4802551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7434428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46228775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7379673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47660518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7378219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4726808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72182345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49191463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7443442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47179627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7413228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45914486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7350738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48119354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7339481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48203307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7418214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47242096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7618485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46578008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 435.0
CUMULATIVE NUM SOLVED: 435.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0]
Tasks solved: 10 / 10
Average time for successes: 1.18533 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.1853324884868925, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12443, 'query_cost': 0.0, 'learning_time': 2306.397630048101})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8624 datapoints
Loss: 0.01986, iter: 0/100000
Loss: 0.00842, iter: 1000/100000
Loss: 0.01854, iter: 2000/100000
Loss: 0.01323, iter: 3000/100000
Loss: 0.00875, iter: 4000/100000
Loss: 0.02279, iter: 5000/100000
Loss: 0.01144, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6363.
Loaded best model with loss: 0.00224
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.745944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.44867852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7701222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46132457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7615692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46386606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74756056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.468166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7473037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4656781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76135314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4504242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7570388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43773887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7368834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4665176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7555039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46794766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.741344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4836772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7437033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49042755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7492619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4592749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75362813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46628726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76253414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.45598376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76749676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4855655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74054796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4943629], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7519609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46391225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7395986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46945804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7418342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45389155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7525677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45432374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48902634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73159325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4816305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74720496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4645756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74930626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46188852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75712603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44800547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73762643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48874828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75352603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46653444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7443864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47888166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7566875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49268413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7368259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46809486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 445.0
CUMULATIVE NUM SOLVED: 445.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0]
Tasks solved: 10 / 10
Average time for successes: 1.08500 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0849989010923309, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12565, 'query_cost': 0.0, 'learning_time': 2350.6584022221214})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8662 datapoints
Loss: 0.01297, iter: 0/100000
Loss: 0.01574, iter: 1000/100000
Loss: 0.00608, iter: 2000/100000
Loss: 0.01290, iter: 3000/100000
Loss: 0.01422, iter: 4000/100000
Loss: 0.01677, iter: 5000/100000
Loss: 0.00642, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6496.
Loaded best model with loss: 0.00182
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7472095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.41801566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7416043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43880582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7417611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4180945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7564711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43705192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7369717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.41500974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7392352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4282145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7556509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4640469], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76310307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4252993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74538404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.39060545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.10118956], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7783614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44564214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7760641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46412572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76255393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4136225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7364066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44274995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7361279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.42904213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76790863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4296215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7611771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42214948], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7912271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.44016272], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74186474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47785926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.734804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.3993773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09658355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73355335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.43216655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7443978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43990734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7629625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42554143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7371222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4045554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.742161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45754835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7396705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41876668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75575304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46364257], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74150354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42828655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7522763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4102156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.737179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74406755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4304343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 455.0
CUMULATIVE NUM SOLVED: 455.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0]
Tasks solved: 10 / 10
Average time for successes: 1.11796 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.1179616816865745, 'avg_ref_cost': 1.1700000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12635, 'query_cost': 0.0, 'learning_time': 2394.056817325123})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8725 datapoints
Loss: 0.00768, iter: 0/100000
Loss: 0.00547, iter: 1000/100000
Loss: 0.01099, iter: 2000/100000
Loss: 0.00852, iter: 3000/100000
Loss: 0.00728, iter: 4000/100000
Loss: 0.00632, iter: 5000/100000
Loss: 0.01614, iter: 6000/100000
Loss: 0.02967, iter: 7000/100000
Loss: 0.02325, iter: 8000/100000
Loss: 0.01130, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9521.
Loaded best model with loss: 0.00180
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73979056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49577922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72897923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48648363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74543524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47231826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72620195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.42915824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71970373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48783708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7220401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4831804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72591645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45357993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72201085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48876154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70974845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46514377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7203213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48886117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7288334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48703527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7132668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49937493], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68245757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49858057], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7178413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4933996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7229092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49740317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7438144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44952202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.724966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4933991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.69634485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5111871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7273236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4779296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71650374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45691672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.744632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47493413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7253052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5010904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7347636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46976426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7267916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49014404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7124746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50262403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7316812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48194763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71461344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49630398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71947205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48887768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7293477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49018353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7309739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47531232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 465.0
CUMULATIVE NUM SOLVED: 465.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0]
Tasks solved: 10 / 10
Average time for successes: 1.00285 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0028493647871073, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12741, 'query_cost': 0.0, 'learning_time': 2442.198583837104})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8801 datapoints
Loss: 0.01990, iter: 0/100000
Loss: 0.01052, iter: 1000/100000
Loss: 0.00585, iter: 2000/100000
Loss: 0.02718, iter: 3000/100000
Loss: 0.02574, iter: 4000/100000
Loss: 0.00749, iter: 5000/100000
Loss: 0.00928, iter: 6000/100000
Loss: 0.01391, iter: 7000/100000
Loss: 0.01967, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8759.
Loaded best model with loss: 0.00180
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7589948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47323135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76727974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4621557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7782081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4492178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.764687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48856604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7695336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4657392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7585309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46249303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75530386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4699475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7532467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47124258], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.76199806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4615681], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7548693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46442464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75539654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4706922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7542473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46076238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77178544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46564385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.750485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4759377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7592021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46650591], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7597795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4919635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76871777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45771286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7584386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46690074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7615635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43922743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76069623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4692165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75690633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4841079], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7609189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45924366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75838953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46262884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75736135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46112192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.763219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46610144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76006633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46495825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76543653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4640856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76037455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48019192], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7708505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4556907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7478989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4612333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 475.0
CUMULATIVE NUM SOLVED: 475.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0]
Tasks solved: 10 / 10
Average time for successes: 1.00342 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0034200892987428, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12866, 'query_cost': 0.0, 'learning_time': 2489.289124284114})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8888 datapoints
Loss: 0.00465, iter: 0/100000
Loss: 0.01746, iter: 1000/100000
Loss: 0.00656, iter: 2000/100000
Loss: 0.02678, iter: 3000/100000
Loss: 0.01057, iter: 4000/100000
Loss: 0.01486, iter: 5000/100000
Loss: 0.00590, iter: 6000/100000
Loss: 0.01435, iter: 7000/100000
Loss: 0.01419, iter: 8000/100000
Loss: 0.01368, iter: 9000/100000
Loss: 0.01516, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10290.
Loaded best model with loss: 0.00192
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75107116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50718355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78321046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47872064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7801884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48332313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.764594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47352523], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.742204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49390733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7497859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48126543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76458097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49343765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7494073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49631697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7515057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48645955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7486503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4837829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74819076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4581027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7502941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49301106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70586383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52434593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76303244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49074176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7556647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48443124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73949915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50865704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.785464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.518617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7543467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49470213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7194519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50342494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7481563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50109273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7416197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49820113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76820403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4687302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76577824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49020863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7659487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4914871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78267974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50262374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7554265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.501601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7502986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4990287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76119095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48360345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76519305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46624452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75891936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4889036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 485.0
CUMULATIVE NUM SOLVED: 485.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0]
Tasks solved: 10 / 10
Average time for successes: 1.07892 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0789193946140585, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13006, 'query_cost': 0.0, 'learning_time': 2539.2449390731344})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8967 datapoints
Loss: 0.01935, iter: 0/100000
Loss: 0.00586, iter: 1000/100000
Loss: 0.00961, iter: 2000/100000
Loss: 0.01795, iter: 3000/100000
Loss: 0.01436, iter: 4000/100000
Loss: 0.01127, iter: 5000/100000
Loss: 0.01103, iter: 6000/100000
Loss: 0.01391, iter: 7000/100000
Loss: 0.01397, iter: 8000/100000
Loss: 0.02620, iter: 9000/100000
Loss: 0.01730, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10922.
Loaded best model with loss: 0.00048
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76568174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47493047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76477164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.459722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7401816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4780517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7630084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47446635], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74699956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4721887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7684824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4678788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7536294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53159827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7165621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49421632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7708599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5129601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7512176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46734294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7597363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4684056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7806446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46380225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74698156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7523566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46252745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7819087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48490047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7497844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45884496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75982034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4619071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7457369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45182514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7877288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4907531], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74988526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.47866717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7510841], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4680934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7512586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46106404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77185154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45756543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.80551493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48714975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74654657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47363302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7851026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47613603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7637655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48742524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7782879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.454065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7759167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46002448], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7564398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46905112], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 495.0
CUMULATIVE NUM SOLVED: 495.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0]
Tasks solved: 10 / 10
Average time for successes: 1.00218 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.002178907598136, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13136, 'query_cost': 0.0, 'learning_time': 2590.594633271132})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9013 datapoints
Loss: 0.01374, iter: 0/100000
Loss: 0.01270, iter: 1000/100000
Loss: 0.01513, iter: 2000/100000
Loss: 0.00607, iter: 3000/100000
Loss: 0.00500, iter: 4000/100000
Loss: 0.01159, iter: 5000/100000
Loss: 0.02543, iter: 6000/100000
Loss: 0.01096, iter: 7000/100000
Loss: 0.01506, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8644.
Loaded best model with loss: 0.00214
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7919355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47578496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75113916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49273056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7578634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48415065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76461184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4833028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7328459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4575729], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7503227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4884465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75675493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47124007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72223425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50833094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7230341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48514432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.764672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4823889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7662491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47109553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7716954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4570014], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7543889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43356287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75627685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48688072], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7525796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48779136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7418225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46812105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7476641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4757599], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7514808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45001715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.784835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4877606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7489242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4593583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75855106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49006116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7533412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48621392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75378233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49408185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75471383], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48404384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76644915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48483902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7803835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49430805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75146514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47404188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7561313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48180884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7406222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50788593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7778899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4838365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 505.0
CUMULATIVE NUM SOLVED: 505.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0]
Tasks solved: 10 / 10
Average time for successes: 1.00220 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0022022204328096, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13221, 'query_cost': 0.0, 'learning_time': 2638.4116406301328})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9051 datapoints
Loss: 0.00782, iter: 0/100000
Loss: 0.02075, iter: 1000/100000
Loss: 0.00855, iter: 2000/100000
Loss: 0.01855, iter: 3000/100000
Loss: 0.00714, iter: 4000/100000
Loss: 0.00927, iter: 5000/100000
Loss: 0.03440, iter: 6000/100000
Loss: 0.02002, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7330.
Loaded best model with loss: 0.00182
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74761534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.43010592], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.78440005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46905267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78855234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47257993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7578184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46078363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75436133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46127373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7402924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45185754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7641198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.45988652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7665415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46586505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.753212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45205843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7365514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45859864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7488618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46734425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7462184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4662991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7552811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4538312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75292903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.46654987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75710595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4718581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.749912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.44496095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77409846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45222098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.750762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4757464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77413964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46252263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7550061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46794006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75494236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46989113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.749934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.46951446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7522952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46788186], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7422256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46155706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7520151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47495437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7540233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49317038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7531686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48609963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7430913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47351226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.743161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.42763385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7435791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46701437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 515.0
CUMULATIVE NUM SOLVED: 515.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0]
Tasks solved: 10 / 10
Average time for successes: 1.00229 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0022920189891011, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13294, 'query_cost': 0.0, 'learning_time': 2684.3241906611365})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9118 datapoints
Loss: 0.01362, iter: 0/100000
Loss: 0.00858, iter: 1000/100000
Loss: 0.00986, iter: 2000/100000
Loss: 0.02045, iter: 3000/100000
Loss: 0.00409, iter: 4000/100000
Loss: 0.00488, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5143.
Loaded best model with loss: 0.00163
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73519206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49292302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7157726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47872645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.01729083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.01502505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.01431058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72091806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49849197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7308769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47942287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02929947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02374979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02492295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02247136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.02273038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72748804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46028993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8000929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46156248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7317671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48880637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7587639], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47263214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7295479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45549622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7446706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.38490674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08852842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03681925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7358298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48973653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7669017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44646904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7175488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47905588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01991406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.020815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01646853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72239435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49715582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7573399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49845028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72565174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49340624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73628336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48788342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7515104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47766894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.04926134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7712212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4616485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.76451916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48247945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7955111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46616426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7373975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49309403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7303993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4876567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0267481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7264331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4676412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7305045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.480992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7167948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.45268795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73834735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5000153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7317263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4915408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75334114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.43754548], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75486743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4557556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 525.0
CUMULATIVE NUM SOLVED: 525.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0]
Tasks solved: 10 / 10
Average time for successes: 1.16744 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.167438382882392, 'avg_ref_cost': 1.225, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13398, 'query_cost': 0.0, 'learning_time': 2726.749172572134})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9187 datapoints
Loss: 0.01246, iter: 0/100000
Loss: 0.00697, iter: 1000/100000
Loss: 0.01050, iter: 2000/100000
Loss: 0.01080, iter: 3000/100000
Loss: 0.00673, iter: 4000/100000
Loss: 0.02624, iter: 5000/100000
Loss: 0.00370, iter: 6000/100000
Loss: 0.02690, iter: 7000/100000
Loss: 0.01952, iter: 8000/100000
Loss: 0.02510, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9032.
Loaded best model with loss: 0.00196
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7008485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49192327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.692164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51820594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7082362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47502032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69503057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47256038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70396423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46820316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6840888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51540613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7021767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43007886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7184121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48827422], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.69286287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49400318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6948149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49327388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7132335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4648032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70835567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48944303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6965242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48609936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.703847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47510287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7014188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49523368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70201933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48476556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7026319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5063773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6896172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5126474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7030552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.486904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7054545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48577446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7105773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4714698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73199326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4778747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7000975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47200277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70485234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49471933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68767107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49943894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6991296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5029665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71498495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46430516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7052413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.501807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69094515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47361425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70988125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.481599], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 535.0
CUMULATIVE NUM SOLVED: 535.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0]
Tasks solved: 10 / 10
Average time for successes: 1.00467 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.004673630578327, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13512, 'query_cost': 0.0, 'learning_time': 2775.8286911601317})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9283 datapoints
Loss: 0.00750, iter: 0/100000
Loss: 0.00632, iter: 1000/100000
Loss: 0.01085, iter: 2000/100000
Loss: 0.02892, iter: 3000/100000
Loss: 0.01254, iter: 4000/100000
Loss: 0.00607, iter: 5000/100000
Loss: 0.01238, iter: 6000/100000
Loss: 0.02950, iter: 7000/100000
Loss: 0.01522, iter: 8000/100000
Loss: 0.00732, iter: 9000/100000
Loss: 0.01073, iter: 10000/100000
Loss: 0.01028, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11424.
Loaded best model with loss: 0.00003
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74132466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48696083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71081424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48675555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75229317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48911846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75681627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45614317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7504388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48888215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74619794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45329502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75820297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48312593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7549747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48364645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75047404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48750886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7430922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48000538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7665065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47093034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73848003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50027597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74529433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4471207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7582983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4808295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7526244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4403593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74517673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47828278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72478986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4953639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73841155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47130302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76155865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4870468], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7418015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48846966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7545296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4919043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7476553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48965478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7514869], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4765418], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70879877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49664834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4707171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7471867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.488869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7298646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48980284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73539764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48259318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7410021], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4637157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7558198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47407636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 545.0
CUMULATIVE NUM SOLVED: 545.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0]
Tasks solved: 10 / 10
Average time for successes: 1.00339 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0033905862714163, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13652, 'query_cost': 0.0, 'learning_time': 2829.235205416131})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9338 datapoints
Loss: 0.00761, iter: 0/100000
Loss: 0.01242, iter: 1000/100000
Loss: 0.00708, iter: 2000/100000
Loss: 0.00718, iter: 3000/100000
Loss: 0.00915, iter: 4000/100000
Loss: 0.01237, iter: 5000/100000
Loss: 0.01274, iter: 6000/100000
Loss: 0.01753, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7109.
Loaded best model with loss: 0.00151
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.67421544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5359684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70583487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5018667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70484465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5187976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.704626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5013625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7124828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4942229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7083878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5197488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7216401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48628268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0159683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01420716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00333468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01547437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00582181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72546005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51283085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7248724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.518583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.69911563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50908893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7155143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51681435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71988887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5198592], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7148851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5093742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73137355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51052845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7195469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49814618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.02095027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70845574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5108499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7079002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5061388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7038727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52027714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6928536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.522092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70014745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.41823894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73231316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49993166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.0291599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.028254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.02247954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.02747051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70350116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.531797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7055335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5241285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6667206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5248773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7112764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.519046], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.70887834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52126414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7148231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50984806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7058093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51155347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70866734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.521855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.70743513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.527696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 555.0
CUMULATIVE NUM SOLVED: 555.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0]
Tasks solved: 10 / 10
Average time for successes: 1.10660 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.1066024066356477, 'avg_ref_cost': 1.2000000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13744, 'query_cost': 0.0, 'learning_time': 2875.878800336126})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9406 datapoints
Loss: 0.01735, iter: 0/100000
Loss: 0.01129, iter: 1000/100000
Loss: 0.00680, iter: 2000/100000
Loss: 0.01800, iter: 3000/100000
Loss: 0.00633, iter: 4000/100000
Loss: 0.01769, iter: 5000/100000
Loss: 0.00626, iter: 6000/100000
Loss: 0.01756, iter: 7000/100000
Loss: 0.01179, iter: 8000/100000
Loss: 0.00786, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9285.
Loaded best model with loss: 0.00161
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6994951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5239516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7247883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5145862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7226073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51538044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7168562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5127064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7342441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50741464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72239435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5182648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7200048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5181231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7304756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47766277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7392016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5004772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7233945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53156555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7429238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50296426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7317481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49168032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73824733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4875881], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75418097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50300395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7209816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5064874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7212542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48628628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.72218317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5285131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75347906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49416006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71980935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4839631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73802966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5023388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7362625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5104845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7296226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50585055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7338999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5145178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7174673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49956715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7250475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5163551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72278744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4666421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7228929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49437946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7024645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5196377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7199343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52415746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71857715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51638997], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 565.0
CUMULATIVE NUM SOLVED: 565.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0]
Tasks solved: 10 / 10
Average time for successes: 1.00432 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0043221759842709, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13847, 'query_cost': 0.0, 'learning_time': 2925.2791618701303})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9453 datapoints
Loss: 0.00827, iter: 0/100000
Loss: 0.01617, iter: 1000/100000
Loss: 0.03403, iter: 2000/100000
Loss: 0.01453, iter: 3000/100000
Loss: 0.01216, iter: 4000/100000
Loss: 0.00667, iter: 5000/100000
Loss: 0.00344, iter: 6000/100000
Loss: 0.03188, iter: 7000/100000
Loss: 0.01530, iter: 8000/100000
Loss: 0.02023, iter: 9000/100000
Loss: 0.01769, iter: 10000/100000
Loss: 0.00809, iter: 11000/100000
Loss: 0.01495, iter: 12000/100000
Loss: 0.01917, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13654.
Loaded best model with loss: 0.00209
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7338597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.537766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7125237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51275235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.737877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47163707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73900133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50112283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7458488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50977844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7374453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52212846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7421805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48910758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73146546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5286346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7362013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4763983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.03375657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7724612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49441358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7328721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51421654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72649896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52554923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7411357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5016728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5174729], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7385936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5018179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.715799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5238173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7428877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5239856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7377997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49611098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.722217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.518432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7410042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50850344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7420369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49911013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7212444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50741524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7465121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50752836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7351695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49953908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73363596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5118601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.740883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49953222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74660355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49995312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7338388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5123761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7451972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51117784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73820466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50850576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 575.0
CUMULATIVE NUM SOLVED: 575.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0]
Tasks solved: 10 / 10
Average time for successes: 1.01578 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0157844585075508, 'avg_ref_cost': 1.1550000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13934, 'query_cost': 0.0, 'learning_time': 2983.098229386116})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9493 datapoints
Loss: 0.01189, iter: 0/100000
Loss: 0.01250, iter: 1000/100000
Loss: 0.00645, iter: 2000/100000
Loss: 0.01240, iter: 3000/100000
Loss: 0.00633, iter: 4000/100000
Loss: 0.00990, iter: 5000/100000
Loss: 0.01034, iter: 6000/100000
Loss: 0.01620, iter: 7000/100000
Loss: 0.00789, iter: 8000/100000
Loss: 0.01745, iter: 9000/100000
Loss: 0.02038, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10972.
Loaded best model with loss: 0.00154
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7031951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51919717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.713573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49721545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6916744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5158825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70939237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.524085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7122167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4926433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70007366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5332827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7002927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5094738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.69939804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52536166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51944023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71298045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49935564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70325094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5202343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73750454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5280864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71490514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5033642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70095485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52077323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6922563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51304275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6997962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48597172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70150214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51457226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7053882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51197994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7230811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49864098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.69381315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50245255], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.723249], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50171226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7032152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5152293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6900903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5043587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69832015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5124312], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69039285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52553433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.69054496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5329397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.66021883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5249676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.706544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5215921], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70027864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50371844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71905786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48843342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 585.0
CUMULATIVE NUM SOLVED: 585.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0]
Tasks solved: 10 / 10
Average time for successes: 1.00584 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.005841694577248, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14008, 'query_cost': 0.0, 'learning_time': 3036.6979159761104})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9537 datapoints
Loss: 0.01851, iter: 0/100000
Loss: 0.02063, iter: 1000/100000
Loss: 0.01108, iter: 2000/100000
Loss: 0.01951, iter: 3000/100000
Loss: 0.01703, iter: 4000/100000
Loss: 0.01784, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5600.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72669405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50505775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72802454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5168557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.722846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5191021], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7185106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5260018], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72940886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5131718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7160111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5075211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71437705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52785385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7486461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.514044], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.70943993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5210049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7159172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52151877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7335146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5069625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7321379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5044277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7208695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5138176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72825253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5088994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7282856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5044609], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7270918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51450115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7054248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50411254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7301278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51887655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7257804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5206815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72862023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5146524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72940135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5032235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70997196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51945895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6985331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51273704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7300374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51351875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6946889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5101023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72583115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5152282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73008114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51750505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7293952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47576416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7165085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5323615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7379904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5057992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 595.0
CUMULATIVE NUM SOLVED: 595.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0]
Tasks solved: 10 / 10
Average time for successes: 1.00452 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0045167943084379, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14095, 'query_cost': 0.0, 'learning_time': 3080.4281600610993})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9570 datapoints
Loss: 0.01838, iter: 0/100000
Loss: 0.00590, iter: 1000/100000
Loss: 0.01299, iter: 2000/100000
Loss: 0.00624, iter: 3000/100000
Loss: 0.00356, iter: 4000/100000
Loss: 0.01062, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5450.
Loaded best model with loss: 0.00220
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7454056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4971892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7499204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5124263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7472162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.503235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73056823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5356809], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7404899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5408431], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73444676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.52048737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74365777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5139792], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7376658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5161648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7511959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5216182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7483421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54210234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7537505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53316903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7250325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53155553], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7259714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5327061], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73401135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51117414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7367257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5401561], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7455071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5307945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7332901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53038347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7275039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5376135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73501194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5259195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7153657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.548618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73406893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53818166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7363471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54235375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7317445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52125293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7405108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51708835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73825914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53726286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7306986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50853086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7599056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5219728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7408578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53372455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7366048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5219527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6972139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.55343676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 605.0
CUMULATIVE NUM SOLVED: 605.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0]
Tasks solved: 10 / 10
Average time for successes: 1.00526 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0052625341835664, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14157, 'query_cost': 0.0, 'learning_time': 3125.248090337089})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9607 datapoints
Loss: 0.02024, iter: 0/100000
Loss: 0.01439, iter: 1000/100000
Loss: 0.00846, iter: 2000/100000
Loss: 0.01443, iter: 3000/100000
Loss: 0.01750, iter: 4000/100000
Loss: 0.01462, iter: 5000/100000
Loss: 0.00770, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6661.
Loaded best model with loss: 0.00058
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82185525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45781603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8215144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49513122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.81463665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4756087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8090077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47652102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81793946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46123293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.82097846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.44839752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.10552026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.10478534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.1029458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.10235281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.11255015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.09881956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.10839652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.09501828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.09103795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08633068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.10520326], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8049129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46960855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80107486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4810981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81432647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4897107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7974092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49233335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80191034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48152176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80939656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4762978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8175493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47575775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8227179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47802773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8061558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.42938396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04669847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04462471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.09193748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.04887295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.06926236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80935895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46361426], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.816372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47910887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82004803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4723653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.80840415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48248896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7467688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46501043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8207757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47960004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8038794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4855206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82176095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.46700576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.81138504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4801764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8123226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47106758], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7988024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49066776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8049974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48431027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7531267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5009487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8234064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46265844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82040304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4830205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 614.0
CUMULATIVE NUM SOLVED: 614.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0]
Tasks solved: 9 / 10
Average time for successes: 1.06407 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.0640650744381774, 'avg_ref_cost': 1.3444444444444448, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14228, 'query_cost': 0.0, 'learning_time': 3172.1531309700804})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9640 datapoints
Loss: 0.00531, iter: 0/100000
Loss: 0.02247, iter: 1000/100000
Loss: 0.01782, iter: 2000/100000
Loss: 0.01510, iter: 3000/100000
Loss: 0.01484, iter: 4000/100000
Loss: 0.00562, iter: 5000/100000
Loss: 0.00671, iter: 6000/100000
Loss: 0.02964, iter: 7000/100000
Loss: 0.02370, iter: 8000/100000
Loss: 0.01249, iter: 9000/100000
Loss: 0.02033, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10605.
Loaded best model with loss: 0.00195
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7652195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49904713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7526606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5174123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7667775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50014865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77328956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5010729], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7448772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5214875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7709241], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5163233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7725908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48398864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.74052787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51022923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.768662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49918023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.768949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50477195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7286892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5213577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7624073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5037117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77635556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49015087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7775618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4813019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7612694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5103674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77599216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49903458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7409417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.53139895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77208114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5092582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76670045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51879096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7539954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5149089], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7787096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.498464], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71255416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7557647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51119983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7605818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4982936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77797776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49156263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.74962914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51937217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76823235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.46891975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77608705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48033816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76660794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47493884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76657987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49980336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 624.0
CUMULATIVE NUM SOLVED: 624.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0]
Tasks solved: 10 / 10
Average time for successes: 1.00416 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0041556501935702, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14294, 'query_cost': 0.0, 'learning_time': 3225.6727093110676})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9679 datapoints
Loss: 0.01513, iter: 0/100000
Loss: 0.00501, iter: 1000/100000
Loss: 0.00874, iter: 2000/100000
Loss: 0.02281, iter: 3000/100000
Loss: 0.01504, iter: 4000/100000
Loss: 0.01024, iter: 5000/100000
Loss: 0.01042, iter: 6000/100000
Loss: 0.01505, iter: 7000/100000
Loss: 0.01361, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8641.
Loaded best model with loss: 0.00197
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7538231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5080934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71593094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5291089], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7499364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53294855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7200271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5218437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75311273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47756067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71689177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53028786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75707966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5171633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71251994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5245965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75038165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4739788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71787745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4724462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.760406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5132396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6895698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5363789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75686616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51166654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.745887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5142329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73955095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5012482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6982522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5337626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7545159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48827666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74976707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.507769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7543146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50842375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7405253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.510884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7128244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5294951], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73238856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5182283], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7246788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.515043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75765026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50297874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51188594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73790187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5136974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75014573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5094981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75073093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49762225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6969803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53031033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.69041866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53686726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 634.0
CUMULATIVE NUM SOLVED: 634.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0]
Tasks solved: 10 / 10
Average time for successes: 1.09755 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.097553359545418, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14365, 'query_cost': 0.0, 'learning_time': 3276.0005966380704})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9728 datapoints
Loss: 0.00640, iter: 0/100000
Loss: 0.02942, iter: 1000/100000
Loss: 0.00382, iter: 2000/100000
Loss: 0.00638, iter: 3000/100000
Loss: 0.00992, iter: 4000/100000
Loss: 0.00673, iter: 5000/100000
Loss: 0.00460, iter: 6000/100000
Loss: 0.02406, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7813.
Loaded best model with loss: 0.00197
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.82647973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45550627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08424213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0805181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8297798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49392036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79347754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5194498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8234891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5139937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82883567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46909893], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8145428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5089661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8129572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50806916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8222896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49288267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.82136655], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51116467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.82717544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50615513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8277206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4988181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.82969344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5031902], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74871725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5161389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8231428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5015339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79564035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5173037], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75470483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48670572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.821838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48780715], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.800692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5027099], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.828126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4876013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7976887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5291249], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.81232506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50940907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8206553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49226552], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8224293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48328775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8169097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49996004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82684165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5037463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8048158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50777864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7677679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5121104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.82585907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48790073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8271135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48441502], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.82288677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5088511], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 644.0
CUMULATIVE NUM SOLVED: 644.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0]
Tasks solved: 10 / 10
Average time for successes: 1.02767 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0276680611888878, 'avg_ref_cost': 1.1600000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14450, 'query_cost': 0.0, 'learning_time': 3325.424868546048})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9793 datapoints
Loss: 0.01285, iter: 0/100000
Loss: 0.01180, iter: 1000/100000
Loss: 0.01892, iter: 2000/100000
Loss: 0.00742, iter: 3000/100000
Loss: 0.00730, iter: 4000/100000
Loss: 0.01199, iter: 5000/100000
Loss: 0.01928, iter: 6000/100000
Loss: 0.01883, iter: 7000/100000
Loss: 0.00923, iter: 8000/100000
Loss: 0.01960, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9928.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76369846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5190516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7557669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51048446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7306297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5140825], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75186497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5035832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73296124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5176055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7447991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49531302], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7398322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5148724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7321159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52061903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75671005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.490903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51629806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7460373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5075409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74654037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49283788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7392788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4947179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72660303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52253306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.75343984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50685066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7442397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4806251], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7324803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5199866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7488722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49596837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7515915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48546463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.74423593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5043353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75316864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49803534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7400185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5057793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75294507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48083612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.73873484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51330024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.743585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5027932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75021535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5118221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7514452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50890726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74105877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.514414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7550333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49268582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7454163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50538874], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 654.0
CUMULATIVE NUM SOLVED: 654.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0]
Tasks solved: 10 / 10
Average time for successes: 1.09856 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0985603221226483, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14567, 'query_cost': 0.0, 'learning_time': 3378.3622699350235})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9845 datapoints
Loss: 0.01612, iter: 0/100000
Loss: 0.00844, iter: 1000/100000
Loss: 0.01643, iter: 2000/100000
Loss: 0.00732, iter: 3000/100000
Loss: 0.00602, iter: 4000/100000
Loss: 0.01470, iter: 5000/100000
Loss: 0.01264, iter: 6000/100000
Loss: 0.00459, iter: 7000/100000
Loss: 0.00687, iter: 8000/100000
Loss: 0.00590, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9493.
Loaded best model with loss: 0.00248
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7996304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4700846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7814096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48868722], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.796192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.44617823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.08335724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.06268155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.07455748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.06970866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.0878828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.07781759], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.799038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47436988], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7912751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47829404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7773808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48339304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7307202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4692761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7917885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47874048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.79153776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47766504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7882536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48268247], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.76787925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5061732], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7988278], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4536071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08182781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08162212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.09703112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.07112118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08762343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08973067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.07630587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.09730387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08647161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.08751902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.09031966], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78792053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.42902613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7764293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4758976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79226995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4759869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.80064034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4740372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78979886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48582238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79311347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4819081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79493505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49130434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7866583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48360425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6759796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49898565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78481853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45531577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45478597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0829535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7956131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.46914127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79703414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47875234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7902857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48081112], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7951065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47167584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77138263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4869451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.8001086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48111832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7973707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4844027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 663.0
CUMULATIVE NUM SOLVED: 663.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0]
Tasks solved: 9 / 10
Average time for successes: 1.08914 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.0891416435608536, 'avg_ref_cost': 1.3555555555555558, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14654, 'query_cost': 0.0, 'learning_time': 3430.875290473021})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9881 datapoints
Loss: 0.00889, iter: 0/100000
Loss: 0.00767, iter: 1000/100000
Loss: 0.02759, iter: 2000/100000
Loss: 0.01051, iter: 3000/100000
Loss: 0.02364, iter: 4000/100000
Loss: 0.00910, iter: 5000/100000
Loss: 0.01373, iter: 6000/100000
Loss: 0.00719, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7694.
Loaded best model with loss: 0.00223
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7448844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5397246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7187289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5233806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7436262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5254362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7386677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49561906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7549213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5265702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7444463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5204361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72787285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5367199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7471049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5261354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7458254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5389612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75079024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4915551], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.727803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5343224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72751516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54642993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74630225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.528636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.71367764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5059778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7493434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5429248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72184604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5339221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7498571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5317671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73014724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5293856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7361481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53053254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7256565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5254524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7319172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.54982024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73759955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5103751], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.747041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5325871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7267971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53734016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7235913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52542555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.742284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.54412985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7459985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5344115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6883969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5565964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7498143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51533335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73544705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.53453517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 673.0
CUMULATIVE NUM SOLVED: 673.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0]
Tasks solved: 10 / 10
Average time for successes: 1.09989 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0998880796862067, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14723, 'query_cost': 0.0, 'learning_time': 3479.3054619610193})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9917 datapoints
Loss: 0.01018, iter: 0/100000
Loss: 0.01301, iter: 1000/100000
Loss: 0.00934, iter: 2000/100000
Loss: 0.01644, iter: 3000/100000
Loss: 0.01009, iter: 4000/100000
Loss: 0.00777, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5755.
Loaded best model with loss: 0.00185
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7631284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49446627], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75467885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5015728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7725499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5019845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.75482345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5027567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7730618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4932342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.751401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5012277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.75461423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49134922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76972026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4890439], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77110267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49600002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7564814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4985696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7615998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49825704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7741028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5054623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72407323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50508636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77486855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.478182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7747303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49731687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7553691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4743622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76822686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5059148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7594328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.505746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7679153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4921158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7528793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.48764682], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77404106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48714158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7699619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48733127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73860353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5056475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7751153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5017644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7378255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49406362], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7678989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47080728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7377165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.503454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7473447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49860382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77155805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49498525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77224475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49316245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 683.0
CUMULATIVE NUM SOLVED: 683.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0]
Tasks solved: 10 / 10
Average time for successes: 1.00474 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0047387471800904, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14795, 'query_cost': 0.0, 'learning_time': 3525.793650562031})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9962 datapoints
Loss: 0.01528, iter: 0/100000
Loss: 0.02361, iter: 1000/100000
Loss: 0.01059, iter: 2000/100000
Loss: 0.01851, iter: 3000/100000
Loss: 0.02054, iter: 4000/100000
Loss: 0.02549, iter: 5000/100000
Loss: 0.01542, iter: 6000/100000
Loss: 0.01095, iter: 7000/100000
Loss: 0.00972, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8145.
Loaded best model with loss: 0.00228
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6944736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49685925], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7267512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49365264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.718702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48948735], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71105576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48948157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.719188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4899685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.65584147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.505335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7453206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4919645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7012281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5001139], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7274079], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5153657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7181702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.499368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7386768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51835644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.6971542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50248617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7238993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4849134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70231104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4978837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71597916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48537457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7063691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49867663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7086936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4999958], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72075987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49138853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7374373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4832767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.70232725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5001386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72135746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.45671242], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7334342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47007036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7266915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48430443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6821098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5046986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7238158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48083842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7260938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5129223], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6799422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48659763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72506046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4861319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.70719695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49008867], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7048244], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49730235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 693.0
CUMULATIVE NUM SOLVED: 693.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0]
Tasks solved: 10 / 10
Average time for successes: 1.00746 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.00745633028273, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14876, 'query_cost': 0.0, 'learning_time': 3576.4784234510444})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9997 datapoints
Loss: 0.01628, iter: 0/100000
Loss: 0.01422, iter: 1000/100000
Loss: 0.01042, iter: 2000/100000
Loss: 0.00671, iter: 3000/100000
Loss: 0.02056, iter: 4000/100000
Loss: 0.02877, iter: 5000/100000
Loss: 0.01215, iter: 6000/100000
Loss: 0.02125, iter: 7000/100000
Loss: 0.00866, iter: 8000/100000
Loss: 0.01041, iter: 9000/100000
Loss: 0.02808, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10024.
Loaded best model with loss: 0.00055
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7647588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.50084966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7843681], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5027547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75403285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49683866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7761356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49380538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7049124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5077954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78522635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47367266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7697109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.479056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.75643986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4856797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7759104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4980821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.77316815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49797606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7734114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5047704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77632594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48573035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74450815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5086549], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77286375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5071713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77979165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49078566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7452562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49420723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76780844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4342555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76932317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49361563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.77504355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49931672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.75807756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.4910151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.769428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.460419], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78101027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4976672], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.774418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51433873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.75424165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48524612], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7640371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5002463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77003056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4987814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7458381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49353284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7704929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49958518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7332007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4884851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7771862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4905592], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 703.0
CUMULATIVE NUM SOLVED: 703.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0]
Tasks solved: 10 / 10
Average time for successes: 1.00315 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0031521010125288, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14947, 'query_cost': 0.0, 'learning_time': 3629.3269495640416})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10048 datapoints
Loss: 0.01238, iter: 0/100000
Loss: 0.02238, iter: 1000/100000
Loss: 0.01537, iter: 2000/100000
Loss: 0.02108, iter: 3000/100000
Loss: 0.00825, iter: 4000/100000
Loss: 0.00983, iter: 5000/100000
Loss: 0.01684, iter: 6000/100000
Loss: 0.01323, iter: 7000/100000
Loss: 0.01734, iter: 8000/100000
Loss: 0.01458, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9305.
Loaded best model with loss: 0.00231
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75293404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5089671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7169956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4754724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7249596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48716787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7570928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5044404], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7556295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50699425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73564386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5165121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73852515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5218235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73282415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5212986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7423354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5145115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7463327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50962], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7134442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51208055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74291164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51227796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71941316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51508164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.73268163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.53161097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7429701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5187143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7427811], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48822424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71122754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5048235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75054425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5105727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7246804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5334412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.73810977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51068914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73586947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47631866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.739719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50934714], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7418672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5062544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7202918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50505656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7242603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5130132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72305787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47813508], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72159326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5167121], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7535377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50719655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7417347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49230802], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.6962317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5179568], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 713.0
CUMULATIVE NUM SOLVED: 713.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0]
Tasks solved: 10 / 10
Average time for successes: 1.00751 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.007510914039449, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15034, 'query_cost': 0.0, 'learning_time': 3680.944460973027})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10080 datapoints
Loss: 0.00673, iter: 0/100000
Loss: 0.00750, iter: 1000/100000
Loss: 0.00542, iter: 2000/100000
Loss: 0.01321, iter: 3000/100000
Loss: 0.02062, iter: 4000/100000
Loss: 0.00925, iter: 5000/100000
Loss: 0.01244, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6738.
Loaded best model with loss: 0.00238
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8123484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51882744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.80227727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5333718], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80692905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51359427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.79619265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5370699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81267875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51959723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.810735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5255807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7951265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5490984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81695884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51570135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7933595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.53720963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8060291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52168477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.818741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5197639], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8212943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50079566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8122258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5129623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.79029846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.52924895], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8152184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5186292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7978652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49731943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7968924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54430354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7823417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53708136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.79431957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5195178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.81311417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.51714826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8107866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5275777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8205984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5094045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7943306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5343582], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.796589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53173465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78355855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5122036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.77834153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5401877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.81547606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5208727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8050122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54127413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.81658554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5145878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.79940933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5398274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 723.0
CUMULATIVE NUM SOLVED: 723.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0]
Tasks solved: 10 / 10
Average time for successes: 1.00666 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0066640350065428, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15097, 'query_cost': 0.0, 'learning_time': 3728.67158640502})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10152 datapoints
Loss: 0.00627, iter: 0/100000
Loss: 0.00557, iter: 1000/100000
Loss: 0.01328, iter: 2000/100000
Loss: 0.01365, iter: 3000/100000
Loss: 0.00587, iter: 4000/100000
Loss: 0.00343, iter: 5000/100000
Loss: 0.01418, iter: 6000/100000
Loss: 0.01190, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7400.
Loaded best model with loss: 0.00200
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.783978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51678747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7844316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5091075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7701509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5055439], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7881481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4812823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.751583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52027565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.77593863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5001447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7848424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50902593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7737053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5080733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78582996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50129884], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7823772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51445085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.78065616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5180943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78719354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5089446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.774898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5177779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77930903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5241476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51449096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.78467095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52218705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7519769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5123005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7760802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5188841], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73094547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5027716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7355988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5192803], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7872637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5003557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78518444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49629885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76360327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52485317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7547944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.52509725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79433215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5095161], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7761087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5135981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7689398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5134544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7700442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5129405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7704148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50997245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7589837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49544883], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 733.0
CUMULATIVE NUM SOLVED: 733.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0]
Tasks solved: 10 / 10
Average time for successes: 1.00484 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.004839939106023, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15216, 'query_cost': 0.0, 'learning_time': 3777.578242476011})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10205 datapoints
Loss: 0.01449, iter: 0/100000
Loss: 0.00707, iter: 1000/100000
Loss: 0.00774, iter: 2000/100000
Loss: 0.00802, iter: 3000/100000
Loss: 0.01848, iter: 4000/100000
Loss: 0.01685, iter: 5000/100000
Loss: 0.01516, iter: 6000/100000
Loss: 0.01595, iter: 7000/100000
Loss: 0.01103, iter: 8000/100000
Loss: 0.01926, iter: 9000/100000
Loss: 0.00761, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10032.
Loaded best model with loss: 0.00212
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7444072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5323823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7516213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5177025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7615788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51523346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7188748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.518299], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7449177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50258785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75228035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50724936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68364066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52997917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7559609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.52400273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.753105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.522346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7498426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51787645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72729594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.51504743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7456914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5101855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7201097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52351314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7539615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5033151], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73950964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5142007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76230717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52050036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7530914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49549973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7531118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5239871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.739474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5183088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7009779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5176862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.75253314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5129901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73840886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52633995], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7581411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5095339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7530708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.51750976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7535121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52683586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7527966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5333878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7509409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5162455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7530492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5148392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7293451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51942414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74787194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5146694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 743.0
CUMULATIVE NUM SOLVED: 743.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0]
Tasks solved: 10 / 10
Average time for successes: 1.10482 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.1048231405060505, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15314, 'query_cost': 0.0, 'learning_time': 3831.3043373360124})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10249 datapoints
Loss: 0.00757, iter: 0/100000
Loss: 0.00970, iter: 1000/100000
Loss: 0.00573, iter: 2000/100000
Loss: 0.01360, iter: 3000/100000
Loss: 0.03212, iter: 4000/100000
Loss: 0.01955, iter: 5000/100000
Loss: 0.01873, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6932.
Loaded best model with loss: 0.00062
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6797835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47393918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73877454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50567615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6988054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5004291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70579517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49505943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.01022089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.00207865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0062256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7151129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51731944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7217454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5198266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.70555747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49033153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.735579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5016429], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72392315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5001251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.00500351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.01716119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.01136478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.00964582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.00084856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.0112485], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74041516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5019189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.75171685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4934499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.0395833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.04088525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.04015364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.04154313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.03627449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73074144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.50407225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73555624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49697575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02429361], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7322818], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50368834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.02089791], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7423113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.45123816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.72962797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4985483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00857602], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7356679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50051343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6911719], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5173929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7293965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.51109064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.71657264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.503177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7411374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5050285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7119861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5171335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72894675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.45302835], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7382672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.50152737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.713792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51143175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7180148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49253264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.00498726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.01201042], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7021393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5104543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7303395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.500247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01772711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02052296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01925205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01643685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72459155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49275687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00769163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.01237946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.00865057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.01773087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.0130228], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.73499316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51609063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 752.0
CUMULATIVE NUM SOLVED: 752.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0]
Tasks solved: 9 / 10
Average time for successes: 1.35770 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 1.3576964630370236, 'avg_ref_cost': 1.4222222222222223, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15392, 'query_cost': 0.0, 'learning_time': 3880.217542494036})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10334 datapoints
Loss: 0.01406, iter: 0/100000
Loss: 0.00655, iter: 1000/100000
Loss: 0.00963, iter: 2000/100000
Loss: 0.02206, iter: 3000/100000
Loss: 0.00777, iter: 4000/100000
Loss: 0.00892, iter: 5000/100000
Loss: 0.01226, iter: 6000/100000
Loss: 0.01449, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7555.
Loaded best model with loss: 0.00208
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71224254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4918811], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72360677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48775622], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.6770549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4995441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.63977593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.64152676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.6490506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.6419412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.670845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.63469094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.66005826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.66155523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.6365547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.6318558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.63667893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.6209035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.69407225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.6585599], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7312608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4798142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7179662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50030524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7280578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.48035458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.71541727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47073132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7119863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47145897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72696745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4414842], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.71458703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.480145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.70801264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47825387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.71846324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4929784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7333621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48068434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7288979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48540598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7311706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48959932], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73449475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4906647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6769758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49152327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.63098186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.63134265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6336584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6280925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6583616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6537604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.63154286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.63446325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.65054643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6298662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6327352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.62900084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6428628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6546965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.64224696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.62447494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6347573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6359742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6506604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.62904894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.61110485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.65421754], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.71261895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49354297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.72034466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49317396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7581879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4568529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7237179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47804496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72131264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.4742447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7212866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4816068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74977523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48573762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72756255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48836157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.727462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.47578084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7253809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47803298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.72934425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47803536], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7018572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5015517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 760.0
CUMULATIVE NUM SOLVED: 760.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0]
Tasks solved: 8 / 10
Average time for successes: 1.01134 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 1.0113408128563606, 'avg_ref_cost': 1.5250000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15531, 'query_cost': 0.0, 'learning_time': 3930.332151429029})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10378 datapoints
Loss: 0.01108, iter: 0/100000
Loss: 0.01571, iter: 1000/100000
Loss: 0.00641, iter: 2000/100000
Loss: 0.00933, iter: 3000/100000
Loss: 0.01006, iter: 4000/100000
Loss: 0.01372, iter: 5000/100000
Loss: 0.00602, iter: 6000/100000
Loss: 0.00620, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7282.
Loaded best model with loss: 0.00092
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.78692865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47786316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7824677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49753547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7942962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49379194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7965757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49223566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.73183364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50828487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7614701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49463254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7885982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50084615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.784972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49507388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.80181926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.43750978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76979774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49857154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.799657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4928273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7755148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5031319], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.77719176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4898191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.790849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48660862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7551186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50169104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.79415303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50050944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.78834486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49537817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7997546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49689034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7822621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.78899705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.46701565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.78027976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.42871237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7999633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4907684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7991336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47125748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78602386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.47391954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8002391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48136955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7984666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.49287614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7901267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5011263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7930234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49742958], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7635017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4888455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.71020186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50848174], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 770.0
CUMULATIVE NUM SOLVED: 770.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0]
Tasks solved: 10 / 10
Average time for successes: 1.10534 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.105338384999777, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15612, 'query_cost': 0.0, 'learning_time': 3980.146816274035})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10404 datapoints
Loss: 0.01167, iter: 0/100000
Loss: 0.00655, iter: 1000/100000
Loss: 0.01350, iter: 2000/100000
Loss: 0.01174, iter: 3000/100000
Loss: 0.01044, iter: 4000/100000
Loss: 0.00638, iter: 5000/100000
Loss: 0.00490, iter: 6000/100000
Loss: 0.02036, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7591.
Loaded best model with loss: 0.00248
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75323975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47061878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7437175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.46112335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.72178125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.47691846], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7573475], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47767305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7366309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.47377124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72077096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.4803437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73939145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.46617085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7433678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.4846777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.74243695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.46983162], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.73605365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47696176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.74002916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.48757437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7485613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49904293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.74696106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.47479373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7442863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49437484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74227136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.48687473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73355573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48796397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7286373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.4955193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.72547597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49763492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7461901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.48553193], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7380793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.45992947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7278982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.49781215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70217824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50436366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.70216715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.47754878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.6692426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5012085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6848008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49056438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.7421748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.48375526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7452409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49050564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7225665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4908015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7433412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.48679897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.72593707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.49412897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 780.0
CUMULATIVE NUM SOLVED: 780.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0]
Tasks solved: 10 / 10
Average time for successes: 1.11128 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.1112800148170208, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15670, 'query_cost': 0.0, 'learning_time': 4030.5397668120568})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10450 datapoints
Loss: 0.00774, iter: 0/100000
Loss: 0.00937, iter: 1000/100000
Loss: 0.01079, iter: 2000/100000
Loss: 0.02017, iter: 3000/100000
Loss: 0.01367, iter: 4000/100000
Loss: 0.00803, iter: 5000/100000
Loss: 0.02440, iter: 6000/100000
Loss: 0.02065, iter: 7000/100000
Loss: 0.00561, iter: 8000/100000
Loss: 0.01886, iter: 9000/100000
Loss: 0.04060, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10740.
Loaded best model with loss: 0.00102
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7178717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52591836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7427409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51139385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.741862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.49551728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7142366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45095095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7287435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.50614387], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.743393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5001841], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.69663656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5027666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7486607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5022116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.72102994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.47959957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.70706916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.500328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7204395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5049425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7260784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.516238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.736934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50100577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7321952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5107351], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.74039304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4952789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7255937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49865726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.74665695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5068047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.74036986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49127144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7466908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5326609], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7402603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.50248337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7343319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5236537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7416837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5049253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73588926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.49228847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.71873987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5067813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.73767644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.51758116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.72542894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5092499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.722493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5128269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7353852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48277107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7354044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5233905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.7338568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.513266], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 790.0
CUMULATIVE NUM SOLVED: 790.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0, 790.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0, 790.0]
Tasks solved: 10 / 10
Average time for successes: 1.00599 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0059898910054472, 'avg_ref_cost': 1.1500000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15756, 'query_cost': 0.0, 'learning_time': 4086.083862508036})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10513 datapoints
Loss: 0.01333, iter: 0/100000
Loss: 0.01121, iter: 1000/100000
Loss: 0.01994, iter: 2000/100000
Loss: 0.01047, iter: 3000/100000
Loss: 0.01771, iter: 4000/100000
Loss: 0.01156, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5330.
Loaded best model with loss: 0.00076
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.757211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.513812], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.7598638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5137543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.7702851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4894645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76793444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.48498246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.77095246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51326036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7606216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51602954], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7226961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.50136995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00497726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01891975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.71389127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5122128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.7734273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51233345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7775521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5016737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77724284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.50855744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.73312825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.51981366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7774788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5134717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.77992153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.4987125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.77327406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5121901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7719642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4937505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7592892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.47557572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.76234454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52878326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.7042787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5034617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.7806188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.49400276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.729451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5106871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7584753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5259013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.73144233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5232695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.78092927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.53768843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.76944214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4961555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.76889247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.4963269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.775615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.4958908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.7683388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.519141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.76554745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.49060237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.76287603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.50769824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 800.0
CUMULATIVE NUM SOLVED: 800.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0, 790.0, 800.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0, 1.0, 1.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0, 790.0, 800.0]
Tasks solved: 10 / 10
Average time for successes: 1.02539 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 1.0253910794941477, 'avg_ref_cost': 1.1600000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15862, 'query_cost': 0.0, 'learning_time': 4133.133463157021})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10551 datapoints
Loss: 0.00629, iter: 0/100000
Loss: 0.02430, iter: 1000/100000
Loss: 0.01858, iter: 2000/100000
Loss: 0.01779, iter: 3000/100000
Loss: 0.01655, iter: 4000/100000
Loss: 0.00482, iter: 5000/100000
Loss: 0.01947, iter: 6000/100000
Loss: 0.01783, iter: 7000/100000
Loss: 0.01573, iter: 8000/100000
Loss: 0.00857, iter: 9000/100000
Loss: 0.00624, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10206.
Loaded best model with loss: 0.00195
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8462533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.52496725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13567643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11591554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10461509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08991993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13106976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13154565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1258988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11140274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09414827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12472024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12021897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12640981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1413689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12873358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11416954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13039367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11808033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13433301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12402436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12237025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12378595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16169848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14737748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12947601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11573666], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8441355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.49744454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11786349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1322336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11022171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11626241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13181299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12676491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15599158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12442592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12220657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10951089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1009996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1172825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1149798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11683492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11946289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12939951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11381347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12300252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11808712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12303363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12196115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11422496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13173562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12237781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11013908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1173197], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8352985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.52510434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12270166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11549241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09930734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10937493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11381416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11537652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10607667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11038181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11858059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10120621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11516374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11942039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11001046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11756237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11691299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11253396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11456931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0950698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.82893646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.53387034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8317179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51733947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.80819875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.5437393], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([0.8538949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell8:cell], params=array([0.5039682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell8:cell], params=array([-0.12196775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8540965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4971828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13649043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.8248169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.54249537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8141083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5214494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8143693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5124959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.84226227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.45278785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8330851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.54708415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12258489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07895461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09200601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12516244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12180763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10424101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11852334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12623215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12388644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12454201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12299729], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11255723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07572422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09830266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0625454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06659178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11899977], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84136933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5181955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12355909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12541586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09937808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12789588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10029998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11945866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11976121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10343363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1193587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11695471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11878101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12611993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10095005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15043272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12154672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12853914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12497383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10410114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1170594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10970335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07671366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12709618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12807427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11680719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1130225], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.8574654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.51792276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10249209], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.84354234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.53852606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13459834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0960466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13378522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08974697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11652095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13199663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13331133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07540799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12797499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10523752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11334778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09764003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12195053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13340215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10090769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10614607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13218841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13580334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13338831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12127594], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8531987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4914001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11539652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.8285454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.5314871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8462717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.5022462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12856592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.1390688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12485876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.08902247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.0973478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11884588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11127681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.07244836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.13739873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.11290471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([-0.12672682], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8555067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.49153873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13101657], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.793763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.5444415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell7:cell], params=array([0.8276925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell7:cell], params=array([0.51034933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell7:cell, cell8:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell8:cell, cell9:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell9:cell, cell10:cell], params=array([], dtype=float32))test
_Option(name='TurnOnLight', objects=[robby:robot, cell10:cell, light:light], params=array([0.75], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 803.0
CUMULATIVE NUM SOLVED: 803.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0, 1.0, 1.0, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0, 790.0, 800.0, 803.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98, 0.98, 0.98][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.1, 0.0, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.8, 0.2, 0.0, 1.0, 1.0, 0.0, 1.0, 0.4, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 0.8, 1.0, 1.0, 1.0, 1.0, 0.3][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0, 10.0, 10.0, 11.0, 11.0, 12.0, 21.0, 23.0, 32.0, 33.0, 36.0, 44.0, 46.0, 46.0, 56.0, 66.0, 66.0, 76.0, 80.0, 85.0, 95.0, 105.0, 115.0, 125.0, 135.0, 145.0, 155.0, 165.0, 175.0, 185.0, 195.0, 205.0, 215.0, 225.0, 235.0, 245.0, 255.0, 265.0, 275.0, 285.0, 295.0, 305.0, 315.0, 325.0, 335.0, 345.0, 355.0, 365.0, 375.0, 385.0, 395.0, 405.0, 415.0, 425.0, 435.0, 445.0, 455.0, 465.0, 475.0, 485.0, 495.0, 505.0, 515.0, 525.0, 535.0, 545.0, 555.0, 565.0, 575.0, 585.0, 595.0, 605.0, 614.0, 624.0, 634.0, 644.0, 654.0, 663.0, 673.0, 683.0, 693.0, 703.0, 713.0, 723.0, 733.0, 743.0, 752.0, 760.0, 770.0, 780.0, 790.0, 800.0, 803.0]
Tasks solved: 3 / 10
Average time for successes: 1.09185 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 1.0918453357104834, 'avg_ref_cost': 4.7, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15938, 'query_cost': 0.0, 'learning_time': 4188.395248112007})
Wrote out test results to results/grid_row_door__rl_bridge_policy__0______RLBRIDGE_gridrowdoor-oracle__99.pkl
SMOOTH REWARDS[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98, 0.98, 0.98]


Main script terminated in 15064.29030 seconds
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
door levels 0.5 0.75
WE GOT REWARDS:  0
WE GOT REWARDS:  1
WE GOT REWARDS:  2
WE GOT REWARDS:  3
WE GOT REWARDS:  6
WE GOT REWARDS:  8
WE GOT REWARDS:  9
WE GOT REWARDS:  10
WE GOT REWARDS:  14
WE GOT REWARDS:  16
WE GOT REWARDS:  19
WE GOT REWARDS:  22
WE GOT REWARDS:  27
WE GOT REWARDS:  30
WE GOT REWARDS:  35
WE GOT REWARDS:  38
WE GOT REWARDS:  42
WE GOT REWARDS:  46
WE GOT REWARDS:  51
WE GOT REWARDS:  56
WE GOT REWARDS:  61
WE GOT REWARDS:  66
WE GOT REWARDS:  71
WE GOT REWARDS:  76
WE GOT REWARDS:  81
WE GOT REWARDS:  86
WE GOT REWARDS:  91
WE GOT REWARDS:  96
WE GOT REWARDS:  101
WE GOT REWARDS:  105
WE GOT REWARDS:  110
WE GOT REWARDS:  115
WE GOT REWARDS:  120
WE GOT REWARDS:  125
WE GOT REWARDS:  130
WE GOT REWARDS:  135
WE GOT REWARDS:  140
WE GOT REWARDS:  145
WE GOT REWARDS:  150
WE GOT REWARDS:  155
WE GOT REWARDS:  160
WE GOT REWARDS:  165
WE GOT REWARDS:  170
WE GOT REWARDS:  175
WE GOT REWARDS:  180
WE GOT REWARDS:  185
WE GOT REWARDS:  190
WE GOT REWARDS:  195
WE GOT REWARDS:  200
WE GOT REWARDS:  205
WE GOT REWARDS:  210
WE GOT REWARDS:  215
WE GOT REWARDS:  220
WE GOT REWARDS:  225
WE GOT REWARDS:  230
WE GOT REWARDS:  235
WE GOT REWARDS:  240
WE GOT REWARDS:  245
WE GOT REWARDS:  250
WE GOT REWARDS:  255
WE GOT REWARDS:  260
WE GOT REWARDS:  265
WE GOT REWARDS:  270
WE GOT REWARDS:  275
WE GOT REWARDS:  280
WE GOT REWARDS:  285
WE GOT REWARDS:  290
WE GOT REWARDS:  295
WE GOT REWARDS:  300
WE GOT REWARDS:  305
WE GOT REWARDS:  310
WE GOT REWARDS:  315
WE GOT REWARDS:  320
WE GOT REWARDS:  325
WE GOT REWARDS:  330
WE GOT REWARDS:  335
WE GOT REWARDS:  340
WE GOT REWARDS:  345
WE GOT REWARDS:  350
WE GOT REWARDS:  355
WE GOT REWARDS:  360
WE GOT REWARDS:  365
WE GOT REWARDS:  370
WE GOT REWARDS:  375
WE GOT REWARDS:  380
WE GOT REWARDS:  385
WE GOT REWARDS:  390
WE GOT REWARDS:  395
WE GOT REWARDS:  400
WE GOT REWARDS:  405
WE GOT REWARDS:  410
WE GOT REWARDS:  415
WE GOT REWARDS:  420
WE GOT REWARDS:  425
WE GOT REWARDS:  430
WE GOT REWARDS:  435
WE GOT REWARDS:  440
WE GOT REWARDS:  445
WE GOT REWARDS:  450
WE GOT REWARDS:  455
SMOOTH REWARDS [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04, 0.04, 0.04, 0.044000000000000004, 0.044000000000000004, 0.04800000000000001, 0.084, 0.09200000000000001, 0.128, 0.132, 0.14400000000000002, 0.17600000000000002, 0.18400000000000002, 0.18400000000000002, 0.22400000000000003, 0.264, 0.264, 0.30400000000000005, 0.32, 0.34, 0.38, 0.42, 0.46, 0.5, 0.54, 0.54, 0.58, 0.62, 0.6559999999999999, 0.696, 0.732, 0.736, 0.7680000000000001, 0.772, 0.8079999999999999, 0.836, 0.8440000000000001, 0.8759999999999999, 0.9159999999999999, 0.9159999999999999, 0.9159999999999999, 0.956, 0.956, 0.98, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.9919999999999999, 0.992, 0.988, 0.98, 0.98, 0.98, 0.98, 0.98]
