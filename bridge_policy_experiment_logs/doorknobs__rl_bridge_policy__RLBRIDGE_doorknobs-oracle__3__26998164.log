pybullet build time: Nov 28 2023 23:52:03
Running command: python predicators/main.py --env doorknobs --approach rl_bridge_policy --experiment_id RLBRIDGE_doorknobs-oracle --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 10 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --seed 3
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7fec8ea1f5e0>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=True, random_bridge=False, use_obj_centric=True, rl_rwd_shape=False, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7fec8ea14b20>, perceiver='trivial', horizon=200, active_sampler_learning_num_samples=10, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='doorknobs', approach='rl_bridge_policy', excluded_predicates='', included_options='', seed=3, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_doorknobs-oracle', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: b884c40ed028ad57848b984e8cb6e73a1308ed73
/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02519491], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6946079], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.86030334], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73435766], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19618371], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.87353307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08220261], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06500562], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7188407], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8660141], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0750616], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.69020116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15068543], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.857835], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24980065], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08957437], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.24595346], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.80434895], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2715151], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2462426], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.76554066], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.97298676], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8874519], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13303417], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2714617], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9658853], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45261058], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9160894], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40264168], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01869383], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3013887], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5150569], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.43260342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20742537], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8146244], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09121981], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.47727326], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6302475], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48150483], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28400302], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.68302214], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83454645], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8674247], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7068202], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3784509], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5265671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1286756], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5918485], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18059288], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 9.73499845713377e-06})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 139 datapoints
Loss: 0.04561, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7211.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62845933], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38332236], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7757586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5706204], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.90234613], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6642903], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6113273], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25633782], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19269755], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6959495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6720419], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.51169354], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10472519], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6048922], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25546238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.265955], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8654195], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20253642], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5742907], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24019878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 3.0
CUMULATIVE NUM SOLVED: 3.0
[0.0][1][0.3][3.0]
[0.0][1][0.3][3.0]
Tasks solved: 3 / 10
Average time for successes: 2.09689 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 2.096886015671771, 'avg_ref_cost': 24.433333333333334, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 225, 'query_cost': 0.0, 'learning_time': 13.31993135700759})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 393 datapoints
Loss: 0.00062, iter: 0/100000
Loss: 0.00005, iter: 1000/100000
Loss: 0.00016, iter: 2000/100000
Loss: 0.00012, iter: 3000/100000
Loss: 0.00008, iter: 4000/100000
Loss: 0.00009, iter: 5000/100000
Loss: 0.00005, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00003, iter: 8000/100000
Loss: 0.00004, iter: 9000/100000
Loss: 0.00004, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10873.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6973107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72710985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75679696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8120574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69180775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54043126], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24279836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7314742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6642095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68313414], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68498355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.47110093], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26842237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79053897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70593506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8912542], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0984538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7344574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75006783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71254367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8317862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.770529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 13.0
CUMULATIVE NUM SOLVED: 13.0
[0.0, 0.012][1, 2][0.3, 1.0][3.0, 13.0]
[0.0, 0.012][1, 2][0.3, 1.0][3.0, 13.0]
Tasks solved: 10 / 10
Average time for successes: 3.30167 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.3016667088115357, 'avg_ref_cost': 1.6450000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 571, 'query_cost': 0.0, 'learning_time': 36.63435946100799})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 485 datapoints
Loss: 0.00044, iter: 0/100000
Loss: 0.00015, iter: 1000/100000
Loss: 0.00008, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00005, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00003, iter: 8000/100000
Loss: 0.00002, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9000.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50088954], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21952459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76179713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8221086], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7857911], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80108356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5331974], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02688702], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2770748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6931624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5845634], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27601793], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19194132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74299866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8381982], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64637727], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15571308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83508646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7909492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48381522], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11626277], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13021383], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10928281], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7079338], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64489836], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16146004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63833284], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14186284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63476735], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23140378], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00458449], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07618213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7690244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 23.0
CUMULATIVE NUM SOLVED: 23.0
[0.0, 0.012, 0.052000000000000005][1, 2, 3][0.3, 1.0, 1.0][3.0, 13.0, 23.0]
[0.0, 0.012, 0.052000000000000005][1, 2, 3][0.3, 1.0, 1.0][3.0, 13.0, 23.0]
Tasks solved: 10 / 10
Average time for successes: 4.23647 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.236466695401759, 'avg_ref_cost': 1.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 739, 'query_cost': 0.0, 'learning_time': 58.232798674012884})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 570 datapoints
Loss: 0.00092, iter: 0/100000
Loss: 0.00016, iter: 1000/100000
Loss: 0.00031, iter: 2000/100000
Loss: 0.00018, iter: 3000/100000
Loss: 0.00014, iter: 4000/100000
Loss: 0.00013, iter: 5000/100000
Loss: 0.00016, iter: 6000/100000
Loss: 0.00018, iter: 7000/100000
Loss: 0.00011, iter: 8000/100000
Loss: 0.00014, iter: 9000/100000
Loss: 0.00012, iter: 10000/100000
Loss: 0.00014, iter: 11000/100000
Loss: 0.00012, iter: 12000/100000
Loss: 0.00010, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13148.
Loaded best model with loss: 0.00007
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6306495], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10878946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7731761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6561983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6450834], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00194292], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06108981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6768397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76573837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.838333], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6687127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7227944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6402004], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0221603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7702215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67737514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7751068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77163184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75104815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7490819], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6917555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6569144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70200115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 33.0
CUMULATIVE NUM SOLVED: 33.0
[0.0, 0.012, 0.052000000000000005, 0.092][1, 2, 3, 4][0.3, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0]
[0.0, 0.012, 0.052000000000000005, 0.092][1, 2, 3, 4][0.3, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0]
Tasks solved: 10 / 10
Average time for successes: 4.17110 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.171099829098966, 'avg_ref_cost': 2.4250000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 905, 'query_cost': 0.0, 'learning_time': 87.94619632401736})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 730 datapoints
Loss: 0.00369, iter: 0/100000
Loss: 0.00055, iter: 1000/100000
Loss: 0.00049, iter: 2000/100000
Loss: 0.00040, iter: 3000/100000
Loss: 0.00051, iter: 4000/100000
Loss: 0.00051, iter: 5000/100000
Loss: 0.00031, iter: 6000/100000
Loss: 0.00045, iter: 7000/100000
Loss: 0.00024, iter: 8000/100000
Loss: 0.00025, iter: 9000/100000
Loss: 0.00029, iter: 10000/100000
Loss: 0.00024, iter: 11000/100000
Loss: 0.00039, iter: 12000/100000
Loss: 0.00066, iter: 13000/100000
Loss: 0.00043, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14264.
Loaded best model with loss: 0.00006
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6125083], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05902543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6942114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6695933], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7836975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8613235], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20160496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6335543], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08340748], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80861586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67283154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7442851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73740804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7759762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81282777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74182945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6907665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84217376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6962636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71329516], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8571671], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14952032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 42.0
CUMULATIVE NUM SOLVED: 42.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132][1, 2, 3, 4, 5][0.3, 1.0, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132][1, 2, 3, 4, 5][0.3, 1.0, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0]
Tasks solved: 9 / 10
Average time for successes: 3.67133 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 3.6713307001078244, 'avg_ref_cost': 3.672222222222222, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1152, 'query_cost': 0.0, 'learning_time': 121.02337032601645})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 831 datapoints
Loss: 0.00288, iter: 0/100000
Loss: 0.00101, iter: 1000/100000
Loss: 0.00095, iter: 2000/100000
Loss: 0.00147, iter: 3000/100000
Loss: 0.00274, iter: 4000/100000
Loss: 0.00143, iter: 5000/100000
Loss: 0.00120, iter: 6000/100000
Loss: 0.00096, iter: 7000/100000
Loss: 0.00064, iter: 8000/100000
Loss: 0.00094, iter: 9000/100000
Loss: 0.00104, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10410.
Loaded best model with loss: 0.00042
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67163557], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7333497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74580413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6722591], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6539189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67683023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72914183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7687894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73165923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7620328], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7214996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7096588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7649132], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70272285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.636893], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1658957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69802034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.813466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7751317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7549126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 52.0
CUMULATIVE NUM SOLVED: 52.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168][1, 2, 3, 4, 5, 6][0.3, 1.0, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168][1, 2, 3, 4, 5, 6][0.3, 1.0, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0]
Tasks solved: 10 / 10
Average time for successes: 5.98216 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 5.982164196312079, 'avg_ref_cost': 3.9549999999999996, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1336, 'query_cost': 0.0, 'learning_time': 149.06877263101342})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 944 datapoints
Loss: 0.00247, iter: 0/100000
Loss: 0.00248, iter: 1000/100000
Loss: 0.00255, iter: 2000/100000
Loss: 0.00241, iter: 3000/100000
Loss: 0.00372, iter: 4000/100000
Loss: 0.00262, iter: 5000/100000
Loss: 0.00260, iter: 6000/100000
Loss: 0.00204, iter: 7000/100000
Loss: 0.00526, iter: 8000/100000
Loss: 0.00286, iter: 9000/100000
Loss: 0.00249, iter: 10000/100000
Loss: 0.00323, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11548.
Loaded best model with loss: 0.00067
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8271017], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8137248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6783182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6851771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8327287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6154276], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11275087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69912827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7010643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7814765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6783455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7145329], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8061113], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6148038], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20445167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7696345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71158093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7265515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8172488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68856996], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 61.0
CUMULATIVE NUM SOLVED: 61.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002][1, 2, 3, 4, 5, 6, 7][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002][1, 2, 3, 4, 5, 6, 7][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0]
Tasks solved: 9 / 10
Average time for successes: 5.06351 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 5.063505111676124, 'avg_ref_cost': 4.416666666666667, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1532, 'query_cost': 0.0, 'learning_time': 180.0809878570144})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1050 datapoints
Loss: 0.00318, iter: 0/100000
Loss: 0.00594, iter: 1000/100000
Loss: 0.00676, iter: 2000/100000
Loss: 0.00734, iter: 3000/100000
Loss: 0.00335, iter: 4000/100000
Loss: 0.00468, iter: 5000/100000
Loss: 0.00447, iter: 6000/100000
Loss: 0.00507, iter: 7000/100000
Loss: 0.00521, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8213.
Loaded best model with loss: 0.00122
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8039183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7867415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7188902], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81312364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72659874], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78167725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7615579], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70567745], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7728825], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6509581], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7162363], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7540788], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 65.0
CUMULATIVE NUM SOLVED: 65.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002][1, 2, 3, 4, 5, 6, 7, 8][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002][1, 2, 3, 4, 5, 6, 7, 8][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0]
Tasks solved: 4 / 10
Average time for successes: 5.12482 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 4, 'num_total': 10, 'avg_suc_time': 5.124823368019861, 'avg_ref_cost': 17.7875, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1717, 'query_cost': 0.0, 'learning_time': 206.6397273800103})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1191 datapoints
Loss: 0.00642, iter: 0/100000
Loss: 0.01064, iter: 1000/100000
Loss: 0.00902, iter: 2000/100000
Loss: 0.00939, iter: 3000/100000
Loss: 0.00441, iter: 4000/100000
Loss: 0.00338, iter: 5000/100000
Loss: 0.00876, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6596.
Loaded best model with loss: 0.00128
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6553845], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80008435], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7527612], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82001024], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7494577], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.707879], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73591214], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80037344], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69690365], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6492363], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11288264], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 65.0
CUMULATIVE NUM SOLVED: 65.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26][1, 2, 3, 4, 5, 6, 7, 8, 9][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26][1, 2, 3, 4, 5, 6, 7, 8, 9][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1937, 'query_cost': 0.0, 'learning_time': 232.08321179100312})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1264 datapoints
Loss: 0.00914, iter: 0/100000
Loss: 0.00779, iter: 1000/100000
Loss: 0.01605, iter: 2000/100000
Loss: 0.00774, iter: 3000/100000
Loss: 0.00474, iter: 4000/100000
Loss: 0.00818, iter: 5000/100000
Loss: 0.01014, iter: 6000/100000
Loss: 0.00977, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7520.
Loaded best model with loss: 0.00278
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8647279], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07286838], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8706353], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00952598], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.16896938], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75958264], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66670644], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75070256], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84413165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83625716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7228154], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82491475], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70460266], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7077422], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7985696], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7953972], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 68.0
CUMULATIVE NUM SOLVED: 68.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0]
Tasks solved: 3 / 10
Average time for successes: 1.49302 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 1.493020713989002, 'avg_ref_cost': 24.416666666666668, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2087, 'query_cost': 0.0, 'learning_time': 259.8224223569996})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1324 datapoints
Loss: 0.00695, iter: 0/100000
Loss: 0.00914, iter: 1000/100000
Loss: 0.00802, iter: 2000/100000
Loss: 0.01264, iter: 3000/100000
Loss: 0.01099, iter: 4000/100000
Loss: 0.01106, iter: 5000/100000
Loss: 0.01024, iter: 6000/100000
Loss: 0.01309, iter: 7000/100000
Loss: 0.00831, iter: 8000/100000
Loss: 0.01127, iter: 9000/100000
Loss: 0.00973, iter: 10000/100000
Loss: 0.00957, iter: 11000/100000
Loss: 0.01280, iter: 12000/100000
Loss: 0.01167, iter: 13000/100000
Loss: 0.00585, iter: 14000/100000
Loss did not improve after 5000 itrs, terminating at itr 14351.
Loaded best model with loss: 0.00288
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64018756], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20711327], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76314086], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6912201], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72219825], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6951658], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78938806], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7178088], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71346515], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7897545], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66232055], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70430976], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6520302], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.728182], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 68.0
CUMULATIVE NUM SOLVED: 68.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2219, 'query_cost': 0.0, 'learning_time': 299.48424014399643})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1434 datapoints
Loss: 0.01303, iter: 0/100000
Loss: 0.00938, iter: 1000/100000
Loss: 0.00909, iter: 2000/100000
Loss: 0.00781, iter: 3000/100000
Loss: 0.01222, iter: 4000/100000
Loss: 0.01083, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5207.
Loaded best model with loss: 0.00132
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7362293], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78173465], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71190476], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9619068], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5583061], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82749295], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6720846], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64591616], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4902197], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5469055], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5452495], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55416787], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6607805], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8105763], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29888895], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.855344], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.814427], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7735039], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.52445674], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5979101], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6464245], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6786868], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.51391506], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5852251], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5774147], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5705998], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6032077], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68978524], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6088981], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55501944], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71506214], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.57758147], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54235774], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.377963], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.59700257], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82123995], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6355846], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82214546], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.45822242], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8034472], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.61379325], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70642143], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.57676464], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5212543], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54107404], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7140719], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68879986], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5762104], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6023202], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.92802227], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.51075745], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7440385], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6338134], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5354339], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6545682], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6350587], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66051143], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5963457], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6035172], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6307688], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55747527], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5907908], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5366951], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50331795], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6003872], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6664649], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8405822], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8592358], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6987081], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8458442], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6279282], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6611828], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.57250047], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6638108], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5826134], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5320959], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63387346], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65583503], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6452361], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6534066], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70480776], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78206676], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69147116], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54076505], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.46821216], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50784737], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67760384], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5685899], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.797068], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54188997], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5858398], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6385876], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65137184], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.46343842], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.58475626], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5842788], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.59867674], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5961131], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7436508], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6435033], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54048425], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8294683], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5650768], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.53678715], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.60279906], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48828194], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55074626], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.58912855], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8873134], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.53823835], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55824023], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7727978], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5976131], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7124149], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.650357], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6106092], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5605565], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.89970446], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71033657], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6942981], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6752547], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.52816635], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5832321], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75561553], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4393088], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7371519], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5760765], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.60035235], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8844813], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5763746], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5148639], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5692729], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.57163954], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7421234], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.60461247], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.57112443], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64504576], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72747195], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9667399], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.57256395], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5965916], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.56184715], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6388393], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6010811], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75646544], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5701036], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5177795], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5780657], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6054491], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65873116], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77872473], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6395493], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.59013075], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69978213], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8162841], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67814106], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7461251], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.775287], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6812605], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7903949], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 68.0
CUMULATIVE NUM SOLVED: 68.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2407, 'query_cost': 0.0, 'learning_time': 325.21179354999913})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1513 datapoints
Loss: 0.00687, iter: 0/100000
Loss: 0.01194, iter: 1000/100000
Loss: 0.01345, iter: 2000/100000
Loss: 0.01487, iter: 3000/100000
Loss: 0.00921, iter: 4000/100000
Loss: 0.01620, iter: 5000/100000
Loss: 0.01839, iter: 6000/100000
Loss: 0.01387, iter: 7000/100000
Loss: 0.01119, iter: 8000/100000
Loss: 0.00884, iter: 9000/100000
Loss: 0.00726, iter: 10000/100000
Loss: 0.01727, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11320.
Loaded best model with loss: 0.00239
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81166655], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77303857], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7037791], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65747565], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7691129], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7513193], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83320904], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7150009], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77410597], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7546698], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 68.0
CUMULATIVE NUM SOLVED: 68.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2562, 'query_cost': 0.0, 'learning_time': 361.9757052740024})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1593 datapoints
Loss: 0.01338, iter: 0/100000
Loss: 0.01134, iter: 1000/100000
Loss: 0.00856, iter: 2000/100000
Loss: 0.01410, iter: 3000/100000
Loss: 0.01485, iter: 4000/100000
Loss: 0.01642, iter: 5000/100000
Loss: 0.01373, iter: 6000/100000
Loss: 0.01525, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7284.
Loaded best model with loss: 0.00225
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79581845], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81371546], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7924707], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82919073], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.650401], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76507556], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6754157], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6767805], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6729323], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70235485], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7302073], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 68.0
CUMULATIVE NUM SOLVED: 68.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2717, 'query_cost': 0.0, 'learning_time': 393.02278887000284})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1651 datapoints
Loss: 0.01195, iter: 0/100000
Loss: 0.00736, iter: 1000/100000
Loss: 0.01052, iter: 2000/100000
Loss: 0.00470, iter: 3000/100000
Loss: 0.01537, iter: 4000/100000
Loss: 0.01400, iter: 5000/100000
Loss: 0.01059, iter: 6000/100000
Loss: 0.01326, iter: 7000/100000
Loss: 0.01625, iter: 8000/100000
Loss: 0.00793, iter: 9000/100000
Loss: 0.01467, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10928.
Loaded best model with loss: 0.00182
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7892303], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7994437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.91693026], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6978949], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7166533], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6743027], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11886653], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68714345], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6763632], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19017273], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.718065], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.98032], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.754377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8416348], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7335709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9863159], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6451844], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08935809], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6548922], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72323966], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 71.0
CUMULATIVE NUM SOLVED: 71.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0]
Tasks solved: 3 / 10
Average time for successes: 3.22324 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 3.223239511348462, 'avg_ref_cost': 26.183333333333334, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2849, 'query_cost': 0.0, 'learning_time': 430.8017599290033})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1711 datapoints
Loss: 0.01822, iter: 0/100000
Loss: 0.00421, iter: 1000/100000
Loss: 0.02098, iter: 2000/100000
Loss: 0.01408, iter: 3000/100000
Loss: 0.01941, iter: 4000/100000
Loss: 0.01910, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5148.
Loaded best model with loss: 0.00244
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71304405], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7068057], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9767869], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83595866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72502494], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9902115], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69792944], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8649032], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.22254156], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02254637], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69061977], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7350966], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7633804], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8179883], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 71.0
CUMULATIVE NUM SOLVED: 71.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2982, 'query_cost': 0.0, 'learning_time': 459.42788026800554})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1816 datapoints
Loss: 0.02369, iter: 0/100000
Loss: 0.01624, iter: 1000/100000
Loss: 0.01324, iter: 2000/100000
Loss: 0.01396, iter: 3000/100000
Loss: 0.00615, iter: 4000/100000
Loss: 0.01404, iter: 5000/100000
Loss: 0.01772, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6798.
Loaded best model with loss: 0.00105
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72678286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7722381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68339294], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6572022], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75578845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85805625], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09422985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7258306], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7950443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68278354], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69845474], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64307016], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03199733], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7126329], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 75.0
CUMULATIVE NUM SOLVED: 75.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0]
Tasks solved: 4 / 10
Average time for successes: 3.19501 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 4, 'num_total': 10, 'avg_suc_time': 3.1950107447773917, 'avg_ref_cost': 17.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3170, 'query_cost': 0.0, 'learning_time': 491.85505120300513})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1867 datapoints
Loss: 0.01630, iter: 0/100000
Loss: 0.02005, iter: 1000/100000
Loss: 0.00917, iter: 2000/100000
Loss: 0.02567, iter: 3000/100000
Loss: 0.01635, iter: 4000/100000
Loss: 0.01406, iter: 5000/100000
Loss: 0.01199, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6230.
Loaded best model with loss: 0.00129
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71066904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8077047], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68421066], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71691567], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7445876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84711945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7679357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72111124], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75103503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7667164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8359263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71373534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8024828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6510344], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73479986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79528296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6622079], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7185864], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82410145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7810106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 83.0
CUMULATIVE NUM SOLVED: 83.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0]
Tasks solved: 8 / 10
Average time for successes: 3.86880 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 3.868802700608285, 'avg_ref_cost': 4.9625, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3296, 'query_cost': 0.0, 'learning_time': 523.9170338670083})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1913 datapoints
Loss: 0.02013, iter: 0/100000
Loss: 0.03067, iter: 1000/100000
Loss: 0.02216, iter: 2000/100000
Loss: 0.01672, iter: 3000/100000
Loss: 0.02290, iter: 4000/100000
Loss: 0.02180, iter: 5000/100000
Loss: 0.01771, iter: 6000/100000
Loss: 0.01518, iter: 7000/100000
Loss: 0.01223, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8393.
Loaded best model with loss: 0.00274
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7302012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7408771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7057665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7893386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.768859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8680343], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06475462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84289587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74450815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.724897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6502471], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8169606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76927423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7562827], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8484944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7909677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8033224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 91.0
CUMULATIVE NUM SOLVED: 91.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0]
Tasks solved: 8 / 10
Average time for successes: 3.67345 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 8, 'num_total': 10, 'avg_suc_time': 3.673448995630679, 'avg_ref_cost': 5.4312499999999995, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3418, 'query_cost': 0.0, 'learning_time': 560.1803599440173})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 1993 datapoints
Loss: 0.01765, iter: 0/100000
Loss: 0.02004, iter: 1000/100000
Loss: 0.02205, iter: 2000/100000
Loss: 0.01970, iter: 3000/100000
Loss: 0.01670, iter: 4000/100000
Loss: 0.02405, iter: 5000/100000
Loss: 0.01771, iter: 6000/100000
Loss: 0.01476, iter: 7000/100000
Loss: 0.01400, iter: 8000/100000
Loss: 0.02033, iter: 9000/100000
Loss: 0.04363, iter: 10000/100000
Loss: 0.01639, iter: 11000/100000
Loss: 0.01465, iter: 12000/100000
Loss: 0.01943, iter: 13000/100000
Loss: 0.01119, iter: 14000/100000
Loss: 0.01213, iter: 15000/100000
Loss: 0.02102, iter: 16000/100000
Loss: 0.01188, iter: 17000/100000
Loss: 0.01501, iter: 18000/100000
Loss: 0.01241, iter: 19000/100000
Loss did not improve after 5000 itrs, terminating at itr 19496.
Loaded best model with loss: 0.00097
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6707043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7585296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.60883445], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17212607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6777684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6917697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7535233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69659305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8030594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84759384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7080379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.778212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.679122], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7802081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.756179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8365626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82896936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8778093], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09294124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75421214], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6883347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 101.0
CUMULATIVE NUM SOLVED: 101.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0]
Tasks solved: 10 / 10
Average time for successes: 4.19691 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.196909301885171, 'avg_ref_cost': 2.42, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3574, 'query_cost': 0.0, 'learning_time': 615.7353582220094})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2047 datapoints
Loss: 0.01573, iter: 0/100000
Loss: 0.01879, iter: 1000/100000
Loss: 0.01487, iter: 2000/100000
Loss: 0.01206, iter: 3000/100000
Loss: 0.01263, iter: 4000/100000
Loss: 0.02221, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5596.
Loaded best model with loss: 0.00240
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71811473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86723703], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15017007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63929945], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07123007], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14639051], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7831929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6806957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66226596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74628085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6394614], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0904398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75845027], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7538624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8201585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6802608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70462406], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.699871], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64625126], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09927697], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6893937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6956558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7731006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8059389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 111.0
CUMULATIVE NUM SOLVED: 111.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0]
Tasks solved: 10 / 10
Average time for successes: 4.99205 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.992050290803308, 'avg_ref_cost': 3.0650000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3703, 'query_cost': 0.0, 'learning_time': 649.2169869370118})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2140 datapoints
Loss: 0.02648, iter: 0/100000
Loss: 0.00845, iter: 1000/100000
Loss: 0.01450, iter: 2000/100000
Loss: 0.01632, iter: 3000/100000
Loss: 0.01377, iter: 4000/100000
Loss: 0.00594, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5738.
Loaded best model with loss: 0.00212
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.796581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6831119], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6717615], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68545705], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7871164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75296706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87298787], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27235326], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01646938], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22291179], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7053031], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7830504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7639424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7029298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8097153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69952506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83441365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66189027], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81385297], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7750934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71022964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81670934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 120.0
CUMULATIVE NUM SOLVED: 120.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0]
Tasks solved: 9 / 10
Average time for successes: 4.52583 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 4.525825701362919, 'avg_ref_cost': 3.7277777777777774, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3876, 'query_cost': 0.0, 'learning_time': 683.7452079120121})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2188 datapoints
Loss: 0.02560, iter: 0/100000
Loss: 0.01492, iter: 1000/100000
Loss: 0.01391, iter: 2000/100000
Loss: 0.01386, iter: 3000/100000
Loss: 0.01145, iter: 4000/100000
Loss: 0.01111, iter: 5000/100000
Loss: 0.01109, iter: 6000/100000
Loss: 0.01347, iter: 7000/100000
Loss: 0.01808, iter: 8000/100000
Loss: 0.02717, iter: 9000/100000
Loss: 0.02004, iter: 10000/100000
Loss: 0.01684, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11860.
Loaded best model with loss: 0.00072
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6403702], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02730738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6691246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02484329], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6917213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06776062], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6851692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7026318], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72439814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7027733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82164073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7155165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76071304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65008855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76004684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71553105], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.696173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05877781], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6263556], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09777068], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20807804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8666525], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11546876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7570848], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65808076], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6541423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 130.0
CUMULATIVE NUM SOLVED: 130.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0]
Tasks solved: 10 / 10
Average time for successes: 3.67811 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.6781115087869694, 'avg_ref_cost': 1.8500000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4000, 'query_cost': 0.0, 'learning_time': 728.8368217140087})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2268 datapoints
Loss: 0.01565, iter: 0/100000
Loss: 0.02772, iter: 1000/100000
Loss: 0.00768, iter: 2000/100000
Loss: 0.01094, iter: 3000/100000
Loss: 0.02137, iter: 4000/100000
Loss: 0.01568, iter: 5000/100000
Loss: 0.01207, iter: 6000/100000
Loss: 0.01111, iter: 7000/100000
Loss: 0.00453, iter: 8000/100000
Loss: 0.00810, iter: 9000/100000
Loss: 0.01109, iter: 10000/100000
Loss: 0.00944, iter: 11000/100000
Loss: 0.01277, iter: 12000/100000
Loss: 0.01192, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13280.
Loaded best model with loss: 0.00084
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68955684], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75319004], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7638136], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77371013], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6622411], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77807075], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6654703], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75386304], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7507408], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8226684], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 130.0
CUMULATIVE NUM SOLVED: 130.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4159, 'query_cost': 0.0, 'learning_time': 777.0429067980149})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2341 datapoints
Loss: 0.00974, iter: 0/100000
Loss: 0.03081, iter: 1000/100000
Loss: 0.01399, iter: 2000/100000
Loss: 0.01951, iter: 3000/100000
Loss: 0.02100, iter: 4000/100000
Loss: 0.01652, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5925.
Loaded best model with loss: 0.00192
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76717544], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3818707], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23557226], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4703236], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44170183], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36926043], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06100887], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10760313], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34239113], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35631147], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35072255], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06208558], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19119065], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20705777], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3819591], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23218846], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28242946], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2756484], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43318212], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4764298], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37549368], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41321856], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35166326], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29367375], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32237533], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38455066], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38256767], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33779648], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4686483], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48428485], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36627683], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4169094], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.59107417], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26600635], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.17207226], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34197965], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42702088], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45492956], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.39076507], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.458735], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36320543], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45604327], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32174313], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48978886], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46843898], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1677862], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43249774], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4350309], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2865269], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01852245], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45285067], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41930816], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26561394], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42487502], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2283625], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04884108], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28206724], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36407557], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30491218], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33225945], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30084532], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34028056], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2145754], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40481338], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5541895], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46137127], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.065141], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34857213], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31234062], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36960566], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44540736], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43835098], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35245183], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32820505], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4339648], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45882538], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34582227], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10448939], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4365896], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.55022246], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40787807], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.22391099], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43893012], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4021945], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0843188], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4543623], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1162683], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29903802], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33713067], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19518824], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40975752], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.52078575], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.394526], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28299275], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42300028], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38234177], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4517826], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4018603], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37464198], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2160147], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42396057], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.446808], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33839026], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06260998], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.25121605], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3560109], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85594356], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6653548], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6994635], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4674993], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5098801], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08658914], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.49352938], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40242606], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35701326], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4410175], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48082018], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.49511114], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.17303534], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.39661995], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5584327], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4988397], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23391542], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48671907], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5136659], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08483643], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4726687], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27587774], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43828017], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27913383], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.39638838], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3331899], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5169418], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19892041], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5467673], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50449425], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2764832], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42310935], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29310915], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21883658], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48144016], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5664982], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.47231126], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10124077], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45766297], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50207585], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32101858], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5549117], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46018052], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40855014], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4898609], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4250965], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40703747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77969885], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62671685], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01812212], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07785609], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7337075], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67969173], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63593936], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17738926], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.89167595], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72234803], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36464012], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30127883], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29539105], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00342611], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18920831], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34835127], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21988504], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13563521], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20790459], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26297674], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20451093], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.47402158], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12245516], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37376678], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33464244], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30063087], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46244884], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41564786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8171775], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34630784], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12534457], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42685086], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20255609], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2175487], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32287145], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35573393], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37005842], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44141233], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.131157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6910243], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42398885], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35853648], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23989114], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46731776], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44914368], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76795065], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6678297], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.85403544], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7689831], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80007523], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8067314], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9727914], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6294531], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9097352], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70396596], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68951935], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8433377], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8847986], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7237679], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79257554], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 137.0
CUMULATIVE NUM SOLVED: 137.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0]
Tasks solved: 7 / 10
Average time for successes: 8.32584 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 7, 'num_total': 10, 'avg_suc_time': 8.325837207995521, 'avg_ref_cost': 9.12857142857143, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4309, 'query_cost': 0.0, 'learning_time': 813.9904485640145})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2364 datapoints
Loss: 0.01316, iter: 0/100000
Loss: 0.01246, iter: 1000/100000
Loss: 0.01630, iter: 2000/100000
Loss: 0.01074, iter: 3000/100000
Loss: 0.01457, iter: 4000/100000
Loss: 0.02000, iter: 5000/100000
Loss: 0.01283, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6186.
Loaded best model with loss: 0.00228
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84077066], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79501784], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82548875], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7357644], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8114835], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66869545], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6987103], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86050004], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2057753], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6697509], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5985264], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19305374], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7864437], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74717456], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 138.0
CUMULATIVE NUM SOLVED: 138.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0]
Tasks solved: 1 / 10
Average time for successes: 11.45129 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 1, 'num_total': 10, 'avg_suc_time': 11.451286948969937, 'avg_ref_cost': 99.0, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4404, 'query_cost': 0.0, 'learning_time': 851.073098665016})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2412 datapoints
Loss: 0.01149, iter: 0/100000
Loss: 0.01623, iter: 1000/100000
Loss: 0.01420, iter: 2000/100000
Loss: 0.01871, iter: 3000/100000
Loss: 0.01726, iter: 4000/100000
Loss: 0.02145, iter: 5000/100000
Loss: 0.02176, iter: 6000/100000
Loss: 0.00583, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7523.
Loaded best model with loss: 0.00145
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82740337], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6551563], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81055623], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6424637], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1947797], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7758295], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69809777], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68477356], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69363886], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7354114], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.45869318], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32383814], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 138.0
CUMULATIVE NUM SOLVED: 138.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4527, 'query_cost': 0.0, 'learning_time': 891.4088362140174})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2464 datapoints
Loss: 0.01376, iter: 0/100000
Loss: 0.01278, iter: 1000/100000
Loss: 0.01769, iter: 2000/100000
Loss: 0.01224, iter: 3000/100000
Loss: 0.01901, iter: 4000/100000
Loss: 0.01696, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5390.
Loaded best model with loss: 0.00173
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28768006], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39357072], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41063207], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7622283], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05475605], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5814067], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0801282], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28349394], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7410504], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2180403], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.96738684], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6855725], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41284233], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00265751], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07797142], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00270553], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17561522], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01211047], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2326082], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02964163], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22874698], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08979114], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13486443], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2726549], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19069086], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0098979], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07206008], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16609119], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04685355], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00443705], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14174254], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00799156], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0409946], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05837718], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.065009], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0431454], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20531963], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10011606], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0081098], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71303946], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10417657], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22345251], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3445585], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4073395], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6255926], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22597928], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41975805], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05343236], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33031195], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21494395], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16190356], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69192517], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8143009], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4895895], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2699365], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1659495], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37516898], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32738325], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17700623], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22941227], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24873483], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74040836], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64023215], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12606236], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25023586], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28084016], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04935944], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12441599], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5466005], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82733876], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30895132], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04511163], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13344614], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0457672], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08380792], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09004954], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15899177], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08955219], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.93755096], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25199467], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.168552], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11537151], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.90005445], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 138.0
CUMULATIVE NUM SOLVED: 138.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4651, 'query_cost': 0.0, 'learning_time': 928.7427055790176})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2561 datapoints
Loss: 0.01673, iter: 0/100000
Loss: 0.02739, iter: 1000/100000
Loss: 0.01285, iter: 2000/100000
Loss: 0.01938, iter: 3000/100000
Loss: 0.02260, iter: 4000/100000
Loss: 0.01793, iter: 5000/100000
Loss: 0.01920, iter: 6000/100000
Loss: 0.03070, iter: 7000/100000
Loss: 0.01859, iter: 8000/100000
Loss: 0.01460, iter: 9000/100000
Loss: 0.02055, iter: 10000/100000
Loss: 0.00642, iter: 11000/100000
Loss: 0.02796, iter: 12000/100000
Loss: 0.00672, iter: 13000/100000
Loss: 0.01998, iter: 14000/100000
Loss: 0.00546, iter: 15000/100000
Loss: 0.00358, iter: 16000/100000
Loss: 0.01336, iter: 17000/100000
Loss: 0.02413, iter: 18000/100000
Loss did not improve after 5000 itrs, terminating at itr 18038.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02349973], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8717218], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6403612], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03766347], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26421994], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32228586], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0167563], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01138562], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2947], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04367145], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2296114], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02866996], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18874148], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02260598], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05810808], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08636871], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11400793], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02155809], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06220537], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34649274], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6007661], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3969938], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3407211], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.56087947], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15355958], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50353783], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38683265], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08049882], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09440034], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18462405], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21191107], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31461304], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29299405], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19174795], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05259165], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01463079], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09900448], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0208588], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01287445], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2470489], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13937615], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13234232], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08560766], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11009208], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11270476], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06345386], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16422546], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05473229], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13173048], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02286989], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06764396], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1829199], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14031918], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00714569], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6752685], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02058831], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8005866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01434302], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7039794], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36833656], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2967851], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02253131], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44717035], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.976844], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4616351], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.633885], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6389789], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.62886465], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.65700644], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39771485], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11099494], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.96255666], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21016893], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6475501], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.590564], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5616444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69956887], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25462672], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02396746], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9711284], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69602776], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2847534], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11818086], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0695089], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08448184], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10138156], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00860428], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14939682], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19073944], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07316599], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14561589], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0217892], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13518533], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08202476], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13165088], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8676336], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3869951], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33347785], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6777705], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37291694], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37917554], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08455934], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01419592], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05066506], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35345256], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.54444194], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41002288], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3138568], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06550069], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43866992], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41770628], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30034667], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50270146], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30902123], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.274943], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4191168], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.56334436], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15052043], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25565177], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25412595], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01618877], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01897005], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14227374], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13898219], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02578601], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13467212], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15093996], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10981892], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07433788], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0443368], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10699514], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20920876], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14260577], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04034972], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00829342], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38200495], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35571998], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3453639], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24282472], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09349376], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.16474126], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16035263], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06894996], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00893202], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37464494], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48245624], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3929568], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41148213], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.03801981], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1387503], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02448051], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07386881], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.023873], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4613037], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33510524], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02798248], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13318777], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11217943], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15414214], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04013941], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11619167], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.347387], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.52919346], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15537833], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4025732], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36324286], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38154334], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32935607], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4209184], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35225117], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06069889], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17423065], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13089387], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11338668], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.24326836], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23917048], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.041301], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01655326], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07827127], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34175193], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20801042], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4909235], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.42366263], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30241048], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5048953], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3888632], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.34602362], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24246427], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01201124], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15175225], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15434991], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20303738], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10611679], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07484392], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19707902], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14797306], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06274351], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04771718], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.96672523], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65848225], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37449896], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17911099], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14855649], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3588982], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18873179], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3622522], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18288177], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0576526], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1683414], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76957744], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7487061], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6814375], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27043402], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04383441], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07585026], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7406262], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73863727], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36885417], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1736866], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42201582], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48513722], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35101524], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33620968], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41235703], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29831216], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19241539], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01683356], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06993888], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11601631], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32154548], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5354745], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3336367], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06310307], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1668504], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.16687246], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1828027], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0250991], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07199544], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45051354], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79873866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6372442], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6160033], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8029075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 141.0
CUMULATIVE NUM SOLVED: 141.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0]
Tasks solved: 3 / 10
Average time for successes: 7.34247 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 3, 'num_total': 10, 'avg_suc_time': 7.3424738983352045, 'avg_ref_cost': 25.75, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4828, 'query_cost': 0.0, 'learning_time': 987.9967259060213})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2619 datapoints
Loss: 0.02412, iter: 0/100000
Loss: 0.01356, iter: 1000/100000
Loss: 0.01753, iter: 2000/100000
Loss: 0.01706, iter: 3000/100000
Loss: 0.00537, iter: 4000/100000
Loss: 0.01870, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5048.
Loaded best model with loss: 0.00198
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29868865], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35337895], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41092214], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01683989], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13111667], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06944949], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11133124], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.029838], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10623947], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01313609], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04356194], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00483116], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3979517], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5096971], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6817863], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.40253264], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12169575], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.589472], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6248338], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.666981], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41327882], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25414535], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29233244], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3363315], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5627106], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41413164], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30991718], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5360962], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37641716], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11886083], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02005667], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06332768], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1672957], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41311932], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27393913], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4448771], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2189622], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.34428105], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21284412], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11399762], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1042622], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1550838], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.03907392], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17746772], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01341709], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86651427], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67040217], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9877387], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64761627], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1144794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09987289], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6740231], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7735917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76809007], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6534348], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9911924], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25969917], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40954927], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21794893], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26195294], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01872211], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00977466], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06927889], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38169587], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32006973], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9954486], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79710877], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23022564], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.66278446], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7220498], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35890186], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01763682], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08849173], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05923715], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8329996], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5059183], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.34860894], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38123897], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38452867], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46719503], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11268033], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36959425], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02615719], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4302788], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33501112], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38313928], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.425964], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3501314], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13538423], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03052278], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32166752], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4650628], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26448533], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17047858], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00209056], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41914812], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28642306], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2278779], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05568292], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02062436], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08424286], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06803385], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38730812], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50841916], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33177972], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26267457], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10322864], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08845877], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09323127], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07146924], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14505592], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38625774], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27351353], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.215935], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21067525], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22726168], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3985586], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50839585], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38347432], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33504128], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13031293], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1251046], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0082094], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12400226], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12516084], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1268855], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3250119], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45891365], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25727558], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23532595], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10042951], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10409168], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02545951], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09382569], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.35080227], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3458414], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3100112], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38903695], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30957124], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1683589], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04832733], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04488218], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12235217], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11937746], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17603695], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0613726], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15300408], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16938639], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06930721], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05120566], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27387044], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1438365], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06322204], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07869172], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10563212], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37860703], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44246095], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24938655], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3869708], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45433345], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44811916], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30733863], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31001127], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9849051], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7197899], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.42752907], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04537491], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05848178], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31884795], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1901304], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01426131], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33645272], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48020554], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15316147], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.30015627], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26478416], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2518519], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0384721], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11185361], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10319603], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06646499], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07370916], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08539999], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3936118], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7927124], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7390615], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.99919796], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68352896], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.722297], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3769596], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16740294], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1648094], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04946442], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.55133843], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2682376], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05419511], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5287522], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26328266], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1140472], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03849441], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33358258], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5432537], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.44321042], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48495862], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21597718], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32828054], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11221581], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00398894], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12205977], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27681673], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2471935], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36106932], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45900697], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08528449], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45436817], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3930065], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6633107], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2780627], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06449442], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13882308], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00280043], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08511582], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.03343376], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08191221], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05641929], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06099285], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09485399], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11342586], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31890464], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.49990743], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6198204], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.47451633], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3052441], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.16749895], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2808816], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20548283], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36290613], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45826137], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30322278], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10976657], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3155731], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75310934], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29476127], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27285218], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25870278], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41180864], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.51630765], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3676555], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11568451], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08842696], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02880586], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34958005], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 146.0
CUMULATIVE NUM SOLVED: 146.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0]
Tasks solved: 5 / 10
Average time for successes: 4.84559 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 4.8455862973816695, 'avg_ref_cost': 12.27, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4960, 'query_cost': 0.0, 'learning_time': 1025.8178684890154})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2652 datapoints
Loss: 0.02409, iter: 0/100000
Loss: 0.01701, iter: 1000/100000
Loss: 0.01208, iter: 2000/100000
Loss: 0.02709, iter: 3000/100000
Loss: 0.02426, iter: 4000/100000
Loss: 0.00910, iter: 5000/100000
Loss: 0.02225, iter: 6000/100000
Loss: 0.01503, iter: 7000/100000
Loss: 0.01719, iter: 8000/100000
Loss: 0.01456, iter: 9000/100000
Loss: 0.01985, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10250.
Loaded best model with loss: 0.00131
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6674812], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4826233], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9904496], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7968246], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30816785], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9775113], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6531369], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18226746], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04592228], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9640123], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2930304], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8610873], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6915492], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23869489], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3390771], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8337799], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22339392], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9959748], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33485666], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3784595], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4129584], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7520532], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.657148], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27536437], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27861702], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67914265], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25509965], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29998672], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.96225727], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17998996], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.527071], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.42810428], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8106003], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7682778], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31002697], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8936634], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68364143], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9633122], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78551215], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.99881124], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.266682], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9594246], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 146.0
CUMULATIVE NUM SOLVED: 146.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5066, 'query_cost': 0.0, 'learning_time': 1073.1699954350188})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2704 datapoints
Loss: 0.02341, iter: 0/100000
Loss: 0.01447, iter: 1000/100000
Loss: 0.01386, iter: 2000/100000
Loss: 0.01947, iter: 3000/100000
Loss: 0.01887, iter: 4000/100000
Loss: 0.00259, iter: 5000/100000
Loss: 0.00808, iter: 6000/100000
Loss: 0.02049, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7838.
Loaded best model with loss: 0.00124
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8915131], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6871543], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.40584388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6764274], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.58396465], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00539588], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01277511], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9775882], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31871504], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16622123], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76760566], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7821168], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39703494], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16525483], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01894479], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79545593], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37425652], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2707885], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1858411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71861935], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36923587], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.42936328], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3986016], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09861758], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0732499], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8700875], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54255164], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.90349734], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69041914], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30163765], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09204757], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10499515], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.93212736], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7240949], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09923905], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.45299813], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11665802], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01862422], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07605029], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86831576], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35065454], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13070619], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75445306], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4007126], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00615996], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00322911], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18634656], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06086338], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01118955], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01902096], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07295574], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9431579], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35163713], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09940362], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9960536], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84360445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6341141], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10255664], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.34889808], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05622483], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7213085], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7198401], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.42955065], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35144022], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4426135], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01735478], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8525928], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73483354], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7303404], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.16900547], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4480509], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08859577], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8358629], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.936471], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6590187], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72807336], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39898545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7665885], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39966697], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04133106], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04948755], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04798488], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.91748035], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 151.0
CUMULATIVE NUM SOLVED: 151.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0]
Tasks solved: 5 / 10
Average time for successes: 5.26545 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 5, 'num_total': 10, 'avg_suc_time': 5.2654516027861975, 'avg_ref_cost': 13.35, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5197, 'query_cost': 0.0, 'learning_time': 1117.2377645050292})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2811 datapoints
Loss: 0.01521, iter: 0/100000
Loss: 0.02410, iter: 1000/100000
Loss: 0.01948, iter: 2000/100000
Loss: 0.01506, iter: 3000/100000
Loss: 0.03013, iter: 4000/100000
Loss: 0.02694, iter: 5000/100000
Loss: 0.01556, iter: 6000/100000
Loss: 0.01429, iter: 7000/100000
Loss: 0.01117, iter: 8000/100000
Loss: 0.02396, iter: 9000/100000
Loss: 0.02374, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10801.
Loaded best model with loss: 0.00193
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70569235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74395794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6909396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6961939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7211175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9916262], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83377993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8946609], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04779868], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7314675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6779015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9800765], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9261672], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8416127], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8141235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65195096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8304869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7437579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7666177], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21377753], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7200098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7700797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.705343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9823087], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67384726], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71686727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 161.0
CUMULATIVE NUM SOLVED: 161.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0]
Tasks solved: 10 / 10
Average time for successes: 3.86988 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8698756598940234, 'avg_ref_cost': 1.6600000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5385, 'query_cost': 0.0, 'learning_time': 1166.6008859720314})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2852 datapoints
Loss: 0.02190, iter: 0/100000
Loss: 0.01642, iter: 1000/100000
Loss: 0.01163, iter: 2000/100000
Loss: 0.01143, iter: 3000/100000
Loss: 0.01284, iter: 4000/100000
Loss: 0.03493, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5225.
Loaded best model with loss: 0.00236
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6283293], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10599337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69352156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87829745], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18716353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5324977], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28202683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70468575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7046753], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7569137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65984166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5603243], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08929622], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06210837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8652627], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.00914234], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20627126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7773919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.49600995], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32201907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6774107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26387528], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.493167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8649645], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19339982], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73668957], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6805606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7088459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7244477], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 171.0
CUMULATIVE NUM SOLVED: 171.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0]
Tasks solved: 10 / 10
Average time for successes: 3.78469 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.7846878020005534, 'avg_ref_cost': 1.8650000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5499, 'query_cost': 0.0, 'learning_time': 1207.7950373300264})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 2924 datapoints
Loss: 0.01433, iter: 0/100000
Loss: 0.01901, iter: 1000/100000
Loss: 0.00755, iter: 2000/100000
Loss: 0.02507, iter: 3000/100000
Loss: 0.02623, iter: 4000/100000
Loss: 0.01523, iter: 5000/100000
Loss: 0.02925, iter: 6000/100000
Loss: 0.02223, iter: 7000/100000
Loss: 0.01038, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8036.
Loaded best model with loss: 0.00196
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24432388], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5716849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6892145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71871656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.94299436], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14631599], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77616227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78513217], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.99973357], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7992971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.923204], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10527438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8000295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.762538], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8120571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0239974], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69422704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8015864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8116736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05348352], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8272189], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66751814], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06671751], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.61237717], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8622138], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.17381765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.98775226], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19390728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 181.0
CUMULATIVE NUM SOLVED: 181.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0]
Tasks solved: 10 / 10
Average time for successes: 3.64529 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.6452927694044774, 'avg_ref_cost': 1.7399999999999998, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5649, 'query_cost': 0.0, 'learning_time': 1254.3939573810203})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3012 datapoints
Loss: 0.01615, iter: 0/100000
Loss: 0.02156, iter: 1000/100000
Loss: 0.02681, iter: 2000/100000
Loss: 0.01964, iter: 3000/100000
Loss: 0.01916, iter: 4000/100000
Loss: 0.01396, iter: 5000/100000
Loss: 0.02247, iter: 6000/100000
Loss: 0.01614, iter: 7000/100000
Loss: 0.00938, iter: 8000/100000
Loss: 0.02726, iter: 9000/100000
Loss: 0.01677, iter: 10000/100000
Loss: 0.02703, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11096.
Loaded best model with loss: 0.00038
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7474154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75743407], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7686171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6692924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68294245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7833437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66559225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8216992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8185239], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5930278], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29604733], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35977376], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81303525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.835797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7168668], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7083066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74319625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82818377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.592268], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40797052], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.527981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83769584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70690286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 191.0
CUMULATIVE NUM SOLVED: 191.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0]
Tasks solved: 10 / 10
Average time for successes: 3.76214 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.7621373690111795, 'avg_ref_cost': 1.7399999999999998, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5818, 'query_cost': 0.0, 'learning_time': 1306.8820531430247})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3052 datapoints
Loss: 0.01311, iter: 0/100000
Loss: 0.02000, iter: 1000/100000
Loss: 0.03091, iter: 2000/100000
Loss: 0.01629, iter: 3000/100000
Loss: 0.01970, iter: 4000/100000
Loss: 0.01422, iter: 5000/100000
Loss: 0.00963, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6564.
Loaded best model with loss: 0.00140
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81644857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3156289], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50008374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.97819394], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74462926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8069225], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7705399], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68927467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66215813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.98011583], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4232464], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14917952], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38038263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6405819], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08858519], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72894365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7888243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74630755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7162403], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75600547], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11972478], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79250795], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.22679886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.769366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8117681], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81922966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7907608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8060828], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 201.0
CUMULATIVE NUM SOLVED: 201.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0]
Tasks solved: 10 / 10
Average time for successes: 3.80513 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.805134364287369, 'avg_ref_cost': 1.6800000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5931, 'query_cost': 0.0, 'learning_time': 1352.8207458300167})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3095 datapoints
Loss: 0.02458, iter: 0/100000
Loss: 0.01873, iter: 1000/100000
Loss: 0.03019, iter: 2000/100000
Loss: 0.02146, iter: 3000/100000
Loss: 0.02530, iter: 4000/100000
Loss: 0.01722, iter: 5000/100000
Loss: 0.02494, iter: 6000/100000
Loss: 0.02208, iter: 7000/100000
Loss: 0.02440, iter: 8000/100000
Loss: 0.02026, iter: 9000/100000
Loss: 0.02494, iter: 10000/100000
Loss: 0.00903, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11321.
Loaded best model with loss: 0.00183
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82499677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68313354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7721787], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9265082], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21451099], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29801577], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25143224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.92328566], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11777339], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.24976365], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9613804], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23485085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7424256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7790705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7867998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11057583], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.953279], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.24369588], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69623595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6791699], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05480852], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41442165], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37042853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07401762], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39972356], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32238337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6418091], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06049771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7757836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6936905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74851215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7460868], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72959745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 211.0
CUMULATIVE NUM SOLVED: 211.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0]
Tasks solved: 10 / 10
Average time for successes: 4.48761 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.487610110295646, 'avg_ref_cost': 1.8399999999999999, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6051, 'query_cost': 0.0, 'learning_time': 1406.6397458920255})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3122 datapoints
Loss: 0.01606, iter: 0/100000
Loss: 0.02154, iter: 1000/100000
Loss: 0.02213, iter: 2000/100000
Loss: 0.01863, iter: 3000/100000
Loss: 0.02109, iter: 4000/100000
Loss: 0.02767, iter: 5000/100000
Loss: 0.01347, iter: 6000/100000
Loss: 0.01785, iter: 7000/100000
Loss: 0.01206, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8062.
Loaded best model with loss: 0.00192
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66342854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9200037], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9371936], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8244173], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7313512], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8385496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75522965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7319184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7125873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67764866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63699716], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13250679], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.59459877], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12248395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7384505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6686733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6651016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7982989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9963195], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85593724], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.19951986], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66610694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.93425876], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6670781], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7090107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7584772], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 221.0
CUMULATIVE NUM SOLVED: 221.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0]
Tasks solved: 10 / 10
Average time for successes: 3.75585 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.7558468406117753, 'avg_ref_cost': 1.7000000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6153, 'query_cost': 0.0, 'learning_time': 1454.9778890240268})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3203 datapoints
Loss: 0.01511, iter: 0/100000
Loss: 0.01148, iter: 1000/100000
Loss: 0.01941, iter: 2000/100000
Loss: 0.02143, iter: 3000/100000
Loss: 0.00585, iter: 4000/100000
Loss: 0.00488, iter: 5000/100000
Loss: 0.01428, iter: 6000/100000
Loss: 0.02021, iter: 7000/100000
Loss: 0.01341, iter: 8000/100000
Loss: 0.01508, iter: 9000/100000
Loss: 0.01761, iter: 10000/100000
Loss: 0.01495, iter: 11000/100000
Loss: 0.02725, iter: 12000/100000
Loss: 0.01864, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13007.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77529424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5165392], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.34884265], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07017981], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81145227], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69998074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7843102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84464633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7318698], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7781992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7340543], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65416634], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82655215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.816006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7154481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7443724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6887357], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7696629], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75354815], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.817323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.754684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 231.0
CUMULATIVE NUM SOLVED: 231.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0]
Tasks solved: 10 / 10
Average time for successes: 3.46330 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.4633006199030207, 'avg_ref_cost': 1.685, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6317, 'query_cost': 0.0, 'learning_time': 1511.8153024290223})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3257 datapoints
Loss: 0.01278, iter: 0/100000
Loss: 0.03120, iter: 1000/100000
Loss: 0.02175, iter: 2000/100000
Loss: 0.01094, iter: 3000/100000
Loss: 0.01790, iter: 4000/100000
Loss: 0.01514, iter: 5000/100000
Loss: 0.00588, iter: 6000/100000
Loss: 0.01020, iter: 7000/100000
Loss: 0.01541, iter: 8000/100000
Loss: 0.01477, iter: 9000/100000
Loss: 0.01017, iter: 10000/100000
Loss: 0.01402, iter: 11000/100000
Loss: 0.01347, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12749.
Loaded best model with loss: 0.00127
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6864831], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7723647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83466643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75455886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6947341], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7100476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8226337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7862104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8111906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6621686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75384176], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8397484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66013765], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7970023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7047832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6866433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69630766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84522486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71898013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 241.0
CUMULATIVE NUM SOLVED: 241.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0]
Tasks solved: 10 / 10
Average time for successes: 3.44131 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.441308520505845, 'avg_ref_cost': 1.6800000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6448, 'query_cost': 0.0, 'learning_time': 1569.1458854810335})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3312 datapoints
Loss: 0.02629, iter: 0/100000
Loss: 0.00813, iter: 1000/100000
Loss: 0.01733, iter: 2000/100000
Loss: 0.01796, iter: 3000/100000
Loss: 0.02155, iter: 4000/100000
Loss: 0.01378, iter: 5000/100000
Loss: 0.00620, iter: 6000/100000
Loss: 0.02031, iter: 7000/100000
Loss: 0.00708, iter: 8000/100000
Loss: 0.03071, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9889.
Loaded best model with loss: 0.00174
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5791299], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3413357], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4418702], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5336207], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1036227], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1969452], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69496304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79007727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8364201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.762919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8294618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.87439406], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70660746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8478015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7283431], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6781229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76397496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6603073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8446467], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76014763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66065425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9524651], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6437164], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09583946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7090147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.746779], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62254053], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.43709186], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.52024233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 251.0
CUMULATIVE NUM SOLVED: 251.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0]
Tasks solved: 10 / 10
Average time for successes: 4.06609 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.066092861795914, 'avg_ref_cost': 1.7450000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6579, 'query_cost': 0.0, 'learning_time': 1622.0891862650315})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3351 datapoints
Loss: 0.02144, iter: 0/100000
Loss: 0.02612, iter: 1000/100000
Loss: 0.02015, iter: 2000/100000
Loss: 0.02377, iter: 3000/100000
Loss: 0.02568, iter: 4000/100000
Loss: 0.01583, iter: 5000/100000
Loss: 0.01720, iter: 6000/100000
Loss: 0.02825, iter: 7000/100000
Loss: 0.01288, iter: 8000/100000
Loss: 0.01482, iter: 9000/100000
Loss: 0.02035, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10724.
Loaded best model with loss: 0.00194
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76581115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7602716], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6745156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6725916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77903795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80176085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7046598], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7272215], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4089461], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3929806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7851087], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.44678596], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32134473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68914115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66579187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7596102], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7972455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7066409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8018733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5352097], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8620605], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13381673], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18222949], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 260.0
CUMULATIVE NUM SOLVED: 260.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0]
Tasks solved: 9 / 10
Average time for successes: 3.02713 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 3.0271260044424304, 'avg_ref_cost': 2.6722222222222225, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6694, 'query_cost': 0.0, 'learning_time': 1676.7875667110347})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3413 datapoints
Loss: 0.01656, iter: 0/100000
Loss: 0.01333, iter: 1000/100000
Loss: 0.02560, iter: 2000/100000
Loss: 0.02004, iter: 3000/100000
Loss: 0.01777, iter: 4000/100000
Loss: 0.01622, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5918.
Loaded best model with loss: 0.00127
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81945115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70186484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.751211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8299355], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7404069], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81629074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.682979], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73351574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62405133], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15794764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67310596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68812805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67537344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83869207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70215935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7180854], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.767958], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8098459], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79722786], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6222026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21937944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 270.0
CUMULATIVE NUM SOLVED: 270.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0]
Tasks solved: 10 / 10
Average time for successes: 3.88584 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.885835447095451, 'avg_ref_cost': 1.7400000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6832, 'query_cost': 0.0, 'learning_time': 1725.3483991220273})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3477 datapoints
Loss: 0.01890, iter: 0/100000
Loss: 0.02306, iter: 1000/100000
Loss: 0.00813, iter: 2000/100000
Loss: 0.01246, iter: 3000/100000
Loss: 0.01603, iter: 4000/100000
Loss: 0.01676, iter: 5000/100000
Loss: 0.01753, iter: 6000/100000
Loss: 0.01846, iter: 7000/100000
Loss: 0.01628, iter: 8000/100000
Loss: 0.01369, iter: 9000/100000
Loss: 0.01517, iter: 10000/100000
Loss: 0.02148, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11160.
Loaded best model with loss: 0.00162
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8708386], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14524633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7429808], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72983533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8058617], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9362237], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23194999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7035374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7783935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77582794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.912381], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08995264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.91525465], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12743983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83632284], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8120923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71533805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8939201], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67071164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7470317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7701065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 279.0
CUMULATIVE NUM SOLVED: 279.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0]
Tasks solved: 9 / 10
Average time for successes: 3.31402 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 3.3140218595492317, 'avg_ref_cost': 2.583333333333334, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6975, 'query_cost': 0.0, 'learning_time': 1783.1034143820143})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3516 datapoints
Loss: 0.01130, iter: 0/100000
Loss: 0.00881, iter: 1000/100000
Loss: 0.01753, iter: 2000/100000
Loss: 0.00506, iter: 3000/100000
Loss: 0.01362, iter: 4000/100000
Loss: 0.01998, iter: 5000/100000
Loss: 0.01288, iter: 6000/100000
Loss: 0.01783, iter: 7000/100000
Loss: 0.02318, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8417.
Loaded best model with loss: 0.00124
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80025864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6195021], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9799111], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3001483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82807916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.721238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73540264], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79105514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62470645], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10935421], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.60333985], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.89043933], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.94365364], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28746504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85106766], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09677039], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7927425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65181285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.754539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71155274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63955146], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01159434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8347769], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64079463], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17508201], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6877822], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7604111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.983093], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14609358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 289.0
CUMULATIVE NUM SOLVED: 289.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0]
Tasks solved: 10 / 10
Average time for successes: 3.95849 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.958490235204226, 'avg_ref_cost': 1.7250000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7088, 'query_cost': 0.0, 'learning_time': 1837.2379132850183})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3554 datapoints
Loss: 0.02247, iter: 0/100000
Loss: 0.02152, iter: 1000/100000
Loss: 0.01191, iter: 2000/100000
Loss: 0.01590, iter: 3000/100000
Loss: 0.01442, iter: 4000/100000
Loss: 0.01717, iter: 5000/100000
Loss: 0.01800, iter: 6000/100000
Loss: 0.01229, iter: 7000/100000
Loss: 0.01328, iter: 8000/100000
Loss: 0.00922, iter: 9000/100000
Loss: 0.01271, iter: 10000/100000
Loss: 0.01932, iter: 11000/100000
Loss: 0.02216, iter: 12000/100000
Loss: 0.01516, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13430.
Loaded best model with loss: 0.00140
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5148105], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2152077], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6941143], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73520803], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7379824], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7909998], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-1-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76326275], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10133113], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5962849], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2477292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05660313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.46363875], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13085213], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54326874], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06788923], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08439373], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7845957], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72039485], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72045314], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7517191], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6909295], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7207959], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.680701], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7076285], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73007584], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7102716], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7804839], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8038168], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 299.0
CUMULATIVE NUM SOLVED: 299.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0]
Tasks solved: 10 / 10
Average time for successes: 4.55085 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.550852744423901, 'avg_ref_cost': 3.995, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7200, 'query_cost': 0.0, 'learning_time': 1899.5235814130137})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3606 datapoints
Loss: 0.01897, iter: 0/100000
Loss: 0.02182, iter: 1000/100000
Loss: 0.01624, iter: 2000/100000
Loss: 0.02587, iter: 3000/100000
Loss: 0.02538, iter: 4000/100000
Loss: 0.01678, iter: 5000/100000
Loss: 0.01627, iter: 6000/100000
Loss: 0.02273, iter: 7000/100000
Loss: 0.01848, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8933.
Loaded best model with loss: 0.00150
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9859725], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2316381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74804294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9551077], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27553278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7769006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87055904], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09935171], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75363487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70724136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9794863], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27449542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.766185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7252851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80866003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8037944], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67905366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6583154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6856488], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74927443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7612832], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67267466], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8454801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 309.0
CUMULATIVE NUM SOLVED: 309.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0]
Tasks solved: 10 / 10
Average time for successes: 3.59463 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.5946316069996103, 'avg_ref_cost': 1.7450000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7327, 'query_cost': 0.0, 'learning_time': 1954.5667180630116})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3649 datapoints
Loss: 0.02638, iter: 0/100000
Loss: 0.01709, iter: 1000/100000
Loss: 0.00966, iter: 2000/100000
Loss: 0.01983, iter: 3000/100000
Loss: 0.00749, iter: 4000/100000
Loss: 0.02201, iter: 5000/100000
Loss: 0.02207, iter: 6000/100000
Loss: 0.01974, iter: 7000/100000
Loss: 0.01208, iter: 8000/100000
Loss: 0.01752, iter: 9000/100000
Loss: 0.01655, iter: 10000/100000
Loss: 0.01216, iter: 11000/100000
Loss: 0.01372, iter: 12000/100000
Loss: 0.01773, iter: 13000/100000
Loss: 0.01277, iter: 14000/100000
Loss: 0.01854, iter: 15000/100000
Loss: 0.02115, iter: 16000/100000
Loss: 0.01196, iter: 17000/100000
Loss: 0.01345, iter: 18000/100000
Loss: 0.02205, iter: 19000/100000
Loss: 0.01394, iter: 20000/100000
Loss: 0.01959, iter: 21000/100000
Loss: 0.01888, iter: 22000/100000
Loss: 0.01519, iter: 23000/100000
Loss did not improve after 5000 itrs, terminating at itr 23386.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15500516], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62040484], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15717478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8120436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9487539], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1629579], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7796577], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3967112], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39131778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6816571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.98724854], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14337425], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3899337], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31636605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84897834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71809316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11439624], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7349164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85647744], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07304467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7409924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.721143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6728587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6945467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.946884], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18782367], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28716463], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9959405], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3242058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77276945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 319.0
CUMULATIVE NUM SOLVED: 319.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0]
Tasks solved: 10 / 10
Average time for successes: 3.57972 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.5797163603987427, 'avg_ref_cost': 1.7600000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7443, 'query_cost': 0.0, 'learning_time': 2034.0306883020094})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3691 datapoints
Loss: 0.01098, iter: 0/100000
Loss: 0.03123, iter: 1000/100000
Loss: 0.01928, iter: 2000/100000
Loss: 0.01762, iter: 3000/100000
Loss: 0.01050, iter: 4000/100000
Loss: 0.01858, iter: 5000/100000
Loss: 0.01697, iter: 6000/100000
Loss: 0.02083, iter: 7000/100000
Loss: 0.02044, iter: 8000/100000
Loss: 0.02958, iter: 9000/100000
Loss: 0.02065, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10857.
Loaded best model with loss: 0.00178
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79542136], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38020715], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28438875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62820345], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06839278], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64728075], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06688081], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7177325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71433157], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7577273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6829273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76913095], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6723071], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8017713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7573537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.46661463], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16227438], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19955638], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7018752], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86532736], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14336644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.88107264], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1331123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6895829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76514804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 329.0
CUMULATIVE NUM SOLVED: 329.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0]
Tasks solved: 10 / 10
Average time for successes: 3.88918 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8891804918734123, 'avg_ref_cost': 2.04, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7557, 'query_cost': 0.0, 'learning_time': 2093.51282267402})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3771 datapoints
Loss: 0.01626, iter: 0/100000
Loss: 0.01194, iter: 1000/100000
Loss: 0.00898, iter: 2000/100000
Loss: 0.01012, iter: 3000/100000
Loss: 0.01832, iter: 4000/100000
Loss: 0.02522, iter: 5000/100000
Loss: 0.01932, iter: 6000/100000
Loss: 0.00168, iter: 7000/100000
Loss: 0.02908, iter: 8000/100000
Loss: 0.02074, iter: 9000/100000
Loss: 0.00974, iter: 10000/100000
Loss: 0.01606, iter: 11000/100000
Loss: 0.01395, iter: 12000/100000
Loss: 0.01403, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13187.
Loaded best model with loss: 0.00112
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73425996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71447766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68467104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63846993], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08747207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7039604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7228138], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01051817], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8473795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08250897], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7131458], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7687379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75383323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.47991747], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21340196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01810987], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68938524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73124397], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.04508747], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6757778], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8438541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5961552], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18635817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03845519], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7134104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7757767], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7322525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 339.0
CUMULATIVE NUM SOLVED: 339.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0]
Tasks solved: 10 / 10
Average time for successes: 3.43075 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.430748262396082, 'avg_ref_cost': 1.9000000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7716, 'query_cost': 0.0, 'learning_time': 2157.7269288770185})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3807 datapoints
Loss: 0.01359, iter: 0/100000
Loss: 0.02983, iter: 1000/100000
Loss: 0.02031, iter: 2000/100000
Loss: 0.01919, iter: 3000/100000
Loss: 0.01831, iter: 4000/100000
Loss: 0.01788, iter: 5000/100000
Loss: 0.01326, iter: 6000/100000
Loss: 0.01470, iter: 7000/100000
Loss: 0.01305, iter: 8000/100000
Loss: 0.03088, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9560.
Loaded best model with loss: 0.00198
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6475223], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16523601], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72011334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5346498], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18864119], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7979103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7465528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8453478], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5893289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04018515], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18454385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6903708], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6704444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7681002], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71012974], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7482804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7005246], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7495677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5125273], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24095793], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8599969], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01108749], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87040085], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14346492], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74154675], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.91451514], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2401901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 349.0
CUMULATIVE NUM SOLVED: 349.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0]
Tasks solved: 10 / 10
Average time for successes: 3.60228 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.6022802482024416, 'avg_ref_cost': 1.6950000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7824, 'query_cost': 0.0, 'learning_time': 2216.7619677930197})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3863 datapoints
Loss: 0.02324, iter: 0/100000
Loss: 0.01163, iter: 1000/100000
Loss: 0.01039, iter: 2000/100000
Loss: 0.02594, iter: 3000/100000
Loss: 0.01343, iter: 4000/100000
Loss: 0.02024, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5964.
Loaded best model with loss: 0.00179
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.813776], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.93662053], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2144703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.40996364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28432417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66284674], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83370924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6905869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7027228], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7707847], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68114287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32323277], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26455438], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10219891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8652716], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18373896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6809755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8678321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08928233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8539688], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20735276], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03278304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7576372], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7192062], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9684411], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11679618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00611763], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6898286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67125887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 359.0
CUMULATIVE NUM SOLVED: 359.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0]
Tasks solved: 10 / 10
Average time for successes: 3.82426 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8242606090934714, 'avg_ref_cost': 1.7850000000000001, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7955, 'query_cost': 0.0, 'learning_time': 2270.2880260450183})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3905 datapoints
Loss: 0.01845, iter: 0/100000
Loss: 0.01726, iter: 1000/100000
Loss: 0.01988, iter: 2000/100000
Loss: 0.00682, iter: 3000/100000
Loss: 0.02495, iter: 4000/100000
Loss: 0.02824, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5062.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.43179244], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3758222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6758509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9442423], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26118308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64329606], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04977363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9008549], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.24768451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73314345], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74253005], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7819564], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6864327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8736725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06817991], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.639101], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13116607], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7288367], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.789567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.391343], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3666282], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8802699], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21192603], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9486025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1306695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7508462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.809834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 369.0
CUMULATIVE NUM SOLVED: 369.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0]
Tasks solved: 10 / 10
Average time for successes: 3.56014 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.5601426990237086, 'avg_ref_cost': 1.7900000000000005, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8071, 'query_cost': 0.0, 'learning_time': 2322.5492717590096})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3950 datapoints
Loss: 0.01793, iter: 0/100000
Loss: 0.01511, iter: 1000/100000
Loss: 0.01428, iter: 2000/100000
Loss: 0.01899, iter: 3000/100000
Loss: 0.00824, iter: 4000/100000
Loss: 0.01276, iter: 5000/100000
Loss: 0.01654, iter: 6000/100000
Loss: 0.02120, iter: 7000/100000
Loss: 0.02786, iter: 8000/100000
Loss: 0.01304, iter: 9000/100000
Loss: 0.01194, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10261.
Loaded best model with loss: 0.00166
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67558366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48377806], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2745085], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.551537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.53273], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13458647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7595354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.89320797], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05322713], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6554909], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6586363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7540501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7894349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36135143], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09168467], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29112804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69056123], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63247865], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23250137], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15517448], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29224175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5115097], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01683574], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31877592], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85658556], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.17375106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7430313], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.702706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32639208], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5151491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7424747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64760035], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00517733], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26982892], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2673099], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8630624], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.96619034], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3966621], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.22333734], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66195166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 379.0
CUMULATIVE NUM SOLVED: 379.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0]
Tasks solved: 10 / 10
Average time for successes: 5.79749 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 5.797487816184002, 'avg_ref_cost': 1.7400000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8191, 'query_cost': 0.0, 'learning_time': 2384.270360559007})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 3971 datapoints
Loss: 0.02282, iter: 0/100000
Loss: 0.02581, iter: 1000/100000
Loss: 0.01373, iter: 2000/100000
Loss: 0.01550, iter: 3000/100000
Loss: 0.00868, iter: 4000/100000
Loss: 0.01266, iter: 5000/100000
Loss: 0.01059, iter: 6000/100000
Loss: 0.01965, iter: 7000/100000
Loss: 0.00250, iter: 8000/100000
Loss: 0.01304, iter: 9000/100000
Loss: 0.00845, iter: 10000/100000
Loss: 0.02141, iter: 11000/100000
Loss: 0.02042, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12056.
Loaded best model with loss: 0.00011
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.661248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68391097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86989564], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.013806], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02490648], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7848277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72044075], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.784712], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41636494], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39462307], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6684654], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.89783317], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2672885], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04695085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67600626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36490652], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.306618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26270184], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41088438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6226577], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21482158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6607528], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7480616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7343289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7086305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7326504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76903194], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 389.0
CUMULATIVE NUM SOLVED: 389.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0]
Tasks solved: 10 / 10
Average time for successes: 3.44915 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.4491542639050747, 'avg_ref_cost': 1.6649999999999998, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8285, 'query_cost': 0.0, 'learning_time': 2448.7626563270023})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4012 datapoints
Loss: 0.00727, iter: 0/100000
Loss: 0.01982, iter: 1000/100000
Loss: 0.01049, iter: 2000/100000
Loss: 0.00965, iter: 3000/100000
Loss: 0.00922, iter: 4000/100000
Loss: 0.01316, iter: 5000/100000
Loss: 0.01977, iter: 6000/100000
Loss: 0.01427, iter: 7000/100000
Loss: 0.02100, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8502.
Loaded best model with loss: 0.00121
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76593155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6411848], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06543473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75401473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70471907], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65553766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41219574], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33770224], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73405206], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7656267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68211335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7742006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75642395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68530643], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6405409], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16790392], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8695662], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00722481], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02554311], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7159344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6959683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6651878], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8276806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7550271], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 399.0
CUMULATIVE NUM SOLVED: 399.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0]
Tasks solved: 10 / 10
Average time for successes: 3.46683 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.4668253839961833, 'avg_ref_cost': 1.73, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8401, 'query_cost': 0.0, 'learning_time': 2508.258100533989})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4058 datapoints
Loss: 0.02005, iter: 0/100000
Loss: 0.01549, iter: 1000/100000
Loss: 0.02046, iter: 2000/100000
Loss: 0.01376, iter: 3000/100000
Loss: 0.01432, iter: 4000/100000
Loss: 0.01743, iter: 5000/100000
Loss: 0.00991, iter: 6000/100000
Loss: 0.01351, iter: 7000/100000
Loss: 0.01716, iter: 8000/100000
Loss: 0.01585, iter: 9000/100000
Loss: 0.02237, iter: 10000/100000
Loss: 0.02121, iter: 11000/100000
Loss: 0.02706, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12700.
Loaded best model with loss: 0.00134
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6940686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.92998755], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09663084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6243225], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26739484], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.72029275], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6188685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7684572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68464226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6727096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7283305], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7092971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6918133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6760535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7707581], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73066497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7867317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6577649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65345067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9487433], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20197631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7831849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8629681], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05848441], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6884512], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 409.0
CUMULATIVE NUM SOLVED: 409.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0]
Tasks solved: 10 / 10
Average time for successes: 3.27041 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.27040867919859, 'avg_ref_cost': 1.7250000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8520, 'query_cost': 0.0, 'learning_time': 2573.802314756991})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4106 datapoints
Loss: 0.01534, iter: 0/100000
Loss: 0.01871, iter: 1000/100000
Loss: 0.01312, iter: 2000/100000
Loss: 0.02340, iter: 3000/100000
Loss: 0.02176, iter: 4000/100000
Loss: 0.01743, iter: 5000/100000
Loss: 0.02027, iter: 6000/100000
Loss: 0.01117, iter: 7000/100000
Loss: 0.00461, iter: 8000/100000
Loss: 0.01871, iter: 9000/100000
Loss: 0.01433, iter: 10000/100000
Loss: 0.01301, iter: 11000/100000
Loss: 0.02043, iter: 12000/100000
Loss: 0.02056, iter: 13000/100000
Loss: 0.02204, iter: 14000/100000
Loss: 0.01043, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15010.
Loaded best model with loss: 0.00086
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6401872], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.04736056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67500633], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6359682], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1627416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.709229], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87191874], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0091738], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2918684], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31941724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7569068], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35850093], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.43573335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7637969], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39122552], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29180616], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68315375], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7422775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6418125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1573222], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6749495], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7691], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69417197], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73903465], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80183166], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6620869], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8352649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 419.0
CUMULATIVE NUM SOLVED: 419.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0]
Tasks solved: 10 / 10
Average time for successes: 3.84892 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8489198208990274, 'avg_ref_cost': 1.705, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8642, 'query_cost': 0.0, 'learning_time': 2644.9249809489847})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4141 datapoints
Loss: 0.01286, iter: 0/100000
Loss: 0.03278, iter: 1000/100000
Loss: 0.02367, iter: 2000/100000
Loss: 0.03507, iter: 3000/100000
Loss: 0.01829, iter: 4000/100000
Loss: 0.01651, iter: 5000/100000
Loss: 0.02602, iter: 6000/100000
Loss: 0.00762, iter: 7000/100000
Loss: 0.01591, iter: 8000/100000
Loss: 0.02029, iter: 9000/100000
Loss: 0.00409, iter: 10000/100000
Loss: 0.01916, iter: 11000/100000
Loss: 0.00502, iter: 12000/100000
Loss: 0.01279, iter: 13000/100000
Loss: 0.01330, iter: 14000/100000
Loss: 0.02426, iter: 15000/100000
Loss did not improve after 5000 itrs, terminating at itr 15722.
Loaded best model with loss: 0.00164
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73004454], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7445706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69165736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7492939], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7004118], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7301019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.855212], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02402156], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5850095], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.52112126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79524684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77885276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8480308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74217576], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8533041], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18824987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7607646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.669597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75207156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9999522], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40319782], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20785788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-2-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9298788], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.33100265], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3761514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8024913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75205344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.664137], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 429.0
CUMULATIVE NUM SOLVED: 429.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0]
Tasks solved: 10 / 10
Average time for successes: 3.73612 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.736124391714111, 'avg_ref_cost': 1.95, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8753, 'query_cost': 0.0, 'learning_time': 2717.2575131619815})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4181 datapoints
Loss: 0.01277, iter: 0/100000
Loss: 0.02760, iter: 1000/100000
Loss: 0.01739, iter: 2000/100000
Loss: 0.01581, iter: 3000/100000
Loss: 0.01117, iter: 4000/100000
Loss: 0.02899, iter: 5000/100000
Loss: 0.01545, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6254.
Loaded best model with loss: 0.00124
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8527301], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02208596], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66534644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80461687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.940559], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12435181], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7624751], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84693813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8017559], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7753563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7021578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7242158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8530895], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05471906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7531025], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6955927], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6792433], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7410539], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7129978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72122306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7564961], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6873683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 439.0
CUMULATIVE NUM SOLVED: 439.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0]
Tasks solved: 10 / 10
Average time for successes: 3.78471 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.7847111066032086, 'avg_ref_cost': 1.7, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8868, 'query_cost': 0.0, 'learning_time': 2774.4958693789813})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4235 datapoints
Loss: 0.01427, iter: 0/100000
Loss: 0.03385, iter: 1000/100000
Loss: 0.02044, iter: 2000/100000
Loss: 0.01044, iter: 3000/100000
Loss: 0.02552, iter: 4000/100000
Loss: 0.02007, iter: 5000/100000
Loss: 0.01703, iter: 6000/100000
Loss: 0.00766, iter: 7000/100000
Loss: 0.02215, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8283.
Loaded best model with loss: 0.00086
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8101642], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7414879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81911546], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4857404], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2413236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69690496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.656382], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32085747], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36262438], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7219354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.47437477], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.27866733], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4260471], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.512706], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7409541], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71738183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77151287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7993134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81106955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8202797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4416771], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31975326], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7880696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71787965], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6677686], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 449.0
CUMULATIVE NUM SOLVED: 449.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0]
Tasks solved: 10 / 10
Average time for successes: 3.52992 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.5299152763021993, 'avg_ref_cost': 1.655, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8997, 'query_cost': 0.0, 'learning_time': 2835.900284251984})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4298 datapoints
Loss: 0.01320, iter: 0/100000
Loss: 0.00719, iter: 1000/100000
Loss: 0.02257, iter: 2000/100000
Loss: 0.01589, iter: 3000/100000
Loss: 0.01696, iter: 4000/100000
Loss: 0.01141, iter: 5000/100000
Loss: 0.01131, iter: 6000/100000
Loss: 0.02545, iter: 7000/100000
Loss: 0.01486, iter: 8000/100000
Loss: 0.01822, iter: 9000/100000
Loss: 0.00865, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10508.
Loaded best model with loss: 0.00079
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7011542], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7562569], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7058947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7264379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6572001], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7978891], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9276956], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6965946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.95700514], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6902379], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.786374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75941736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66834116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6916398], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71069795], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7192019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71585953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71939766], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9411063], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8400806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7113608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8156202], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 459.0
CUMULATIVE NUM SOLVED: 459.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0]
Tasks solved: 10 / 10
Average time for successes: 3.22477 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.2247660201945108, 'avg_ref_cost': 1.735, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9139, 'query_cost': 0.0, 'learning_time': 2900.164385825992})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4367 datapoints
Loss: 0.01645, iter: 0/100000
Loss: 0.01443, iter: 1000/100000
Loss: 0.01488, iter: 2000/100000
Loss: 0.01639, iter: 3000/100000
Loss: 0.01874, iter: 4000/100000
Loss: 0.01441, iter: 5000/100000
Loss: 0.01503, iter: 6000/100000
Loss: 0.01639, iter: 7000/100000
Loss: 0.01676, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8174.
Loaded best model with loss: 0.00140
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6687237], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7473745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6504334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80558467], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85701305], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02229109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11274115], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6061989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7245133], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19796196], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3189503], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24489966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76536983], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64509755], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06266977], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05315682], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07073713], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22460684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8208144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.150374], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48636207], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02116975], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37483582], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4020134], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26103178], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.37040934], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7123279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69826], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87785363], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05660089], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83693165], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87664336], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1627575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71285474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14179464], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77573156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 469.0
CUMULATIVE NUM SOLVED: 469.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0]
Tasks solved: 10 / 10
Average time for successes: 4.33095 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.330950717703672, 'avg_ref_cost': 1.7099999999999997, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9284, 'query_cost': 0.0, 'learning_time': 2961.431768933995})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4412 datapoints
Loss: 0.01228, iter: 0/100000
Loss: 0.01108, iter: 1000/100000
Loss: 0.02528, iter: 2000/100000
Loss: 0.02029, iter: 3000/100000
Loss: 0.02050, iter: 4000/100000
Loss: 0.00790, iter: 5000/100000
Loss: 0.02166, iter: 6000/100000
Loss: 0.01450, iter: 7000/100000
Loss: 0.02377, iter: 8000/100000
Loss: 0.01632, iter: 9000/100000
Loss: 0.04113, iter: 10000/100000
Loss: 0.03326, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11579.
Loaded best model with loss: 0.00184
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6310832], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6769756], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79100364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26941645], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48611853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08167814], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6151471], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6498304], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7319867], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6737707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77096504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7703761], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72754115], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.757455], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4048889], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9586703], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.799693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7719411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66791904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35207397], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3373261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80057985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6718742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33691815], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5023156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6500524], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7873073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7830012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6647004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 479.0
CUMULATIVE NUM SOLVED: 479.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0]
Tasks solved: 10 / 10
Average time for successes: 3.76288 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.7628834092829493, 'avg_ref_cost': 1.725, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9407, 'query_cost': 0.0, 'learning_time': 3030.5695046159963})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4443 datapoints
Loss: 0.03526, iter: 0/100000
Loss: 0.01682, iter: 1000/100000
Loss: 0.02011, iter: 2000/100000
Loss: 0.02338, iter: 3000/100000
Loss: 0.02123, iter: 4000/100000
Loss: 0.01718, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5820.
Loaded best model with loss: 0.00153
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80770594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8710734], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4254805], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4660771], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12194449], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7391185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6975692], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00094449], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8186366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7950773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7133462], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41036293], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29612008], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70339537], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74939513], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7475574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.44672245], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.40481025], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.51891965], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48776647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81917125], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82497823], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76911926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7110365], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7120269], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79234993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75949687], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 489.0
CUMULATIVE NUM SOLVED: 489.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0]
Tasks solved: 10 / 10
Average time for successes: 3.74207 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.7420697170164203, 'avg_ref_cost': 1.7050000000000005, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9512, 'query_cost': 0.0, 'learning_time': 3088.7331040409917})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4477 datapoints
Loss: 0.02457, iter: 0/100000
Loss: 0.01150, iter: 1000/100000
Loss: 0.02611, iter: 2000/100000
Loss: 0.01172, iter: 3000/100000
Loss: 0.01508, iter: 4000/100000
Loss: 0.02819, iter: 5000/100000
Loss: 0.02256, iter: 6000/100000
Loss: 0.01943, iter: 7000/100000
Loss: 0.01774, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8693.
Loaded best model with loss: 0.00173
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41806787], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23032188], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.07032238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6223723], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21991353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6802056], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.812908], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6759073], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6826153], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7878684], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7298391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55637413], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20283976], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09074129], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12745821], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.26286945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.707019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6778288], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83254147], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81213146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.736704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.00913345], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09257309], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71604055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7193236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.0539775], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8203483], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73188955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6806678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6882356], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 499.0
CUMULATIVE NUM SOLVED: 499.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0]
Tasks solved: 10 / 10
Average time for successes: 4.08530 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.085299300888437, 'avg_ref_cost': 1.8050000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9620, 'query_cost': 0.0, 'learning_time': 3151.933096428984})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4506 datapoints
Loss: 0.01290, iter: 0/100000
Loss: 0.02034, iter: 1000/100000
Loss: 0.02125, iter: 2000/100000
Loss: 0.01265, iter: 3000/100000
Loss: 0.02135, iter: 4000/100000
Loss: 0.01677, iter: 5000/100000
Loss: 0.01642, iter: 6000/100000
Loss: 0.01781, iter: 7000/100000
Loss: 0.01536, iter: 8000/100000
Loss: 0.02027, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9402.
Loaded best model with loss: 0.00119
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38302115], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19304983], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18155344], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7073088], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65895647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65917856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7954535], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6205351], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.12888491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66955906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70040625], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73030436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81640667], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.90069014], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.722843], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72992665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9607036], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.384544], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35064837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35007316], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26442477], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21487512], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6863892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7568386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76795286], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87559533], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5887066], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39732525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82464117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 509.0
CUMULATIVE NUM SOLVED: 509.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0]
Tasks solved: 10 / 10
Average time for successes: 3.96412 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.9641178356163436, 'avg_ref_cost': 1.685, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9721, 'query_cost': 0.0, 'learning_time': 3216.5676366199914})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4526 datapoints
Loss: 0.01748, iter: 0/100000
Loss: 0.01101, iter: 1000/100000
Loss: 0.01591, iter: 2000/100000
Loss: 0.02462, iter: 3000/100000
Loss: 0.01990, iter: 4000/100000
Loss: 0.02400, iter: 5000/100000
Loss: 0.01442, iter: 6000/100000
Loss: 0.02336, iter: 7000/100000
Loss: 0.02420, iter: 8000/100000
Loss: 0.01582, iter: 9000/100000
Loss: 0.01378, iter: 10000/100000
Loss: 0.01967, iter: 11000/100000
Loss: 0.01972, iter: 12000/100000
Loss: 0.03273, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13712.
Loaded best model with loss: 0.00187
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8301109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.52759993], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26441678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7856306], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31262523], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50065917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6864599], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6893199], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35626245], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41214913], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6682104], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66380394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66243637], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.41407704], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38561597], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66946036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77020514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7837746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6340841], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20722066], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7241038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7108586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4179006], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8250306], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2818416], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7618738], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 519.0
CUMULATIVE NUM SOLVED: 519.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0]
Tasks solved: 10 / 10
Average time for successes: 3.97368 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.973678824491799, 'avg_ref_cost': 1.685, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9811, 'query_cost': 0.0, 'learning_time': 3289.596071772976})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4575 datapoints
Loss: 0.01996, iter: 0/100000
Loss: 0.02141, iter: 1000/100000
Loss: 0.03304, iter: 2000/100000
Loss: 0.00934, iter: 3000/100000
Loss: 0.02763, iter: 4000/100000
Loss: 0.02312, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5576.
Loaded best model with loss: 0.00139
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6703613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6637337], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82432], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6681358], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6613866], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.809154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8249021], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76062363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65818924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77267677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7242587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8094514], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6280979], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17451783], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72422993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77742225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6607586], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6755646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82204366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.685109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 529.0
CUMULATIVE NUM SOLVED: 529.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0]
Tasks solved: 10 / 10
Average time for successes: 3.89190 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8918978791218253, 'avg_ref_cost': 1.7300000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9937, 'query_cost': 0.0, 'learning_time': 3350.006577734981})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4616 datapoints
Loss: 0.00683, iter: 0/100000
Loss: 0.01064, iter: 1000/100000
Loss: 0.01320, iter: 2000/100000
Loss: 0.01646, iter: 3000/100000
Loss: 0.00955, iter: 4000/100000
Loss: 0.01489, iter: 5000/100000
Loss: 0.01322, iter: 6000/100000
Loss: 0.02084, iter: 7000/100000
Loss: 0.02422, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8066.
Loaded best model with loss: 0.00094
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20004825], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.515106], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6662015], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7218889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7825211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7491415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8073271], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73896253], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.40170917], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31017295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8344063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75719285], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7509583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8090011], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.681128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22525679], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.59720963], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.686964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.38465634], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2934728], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8061287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8475149], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78719175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 539.0
CUMULATIVE NUM SOLVED: 539.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0]
Tasks solved: 10 / 10
Average time for successes: 3.12141 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.121412571586552, 'avg_ref_cost': 1.7150000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10053, 'query_cost': 0.0, 'learning_time': 3413.8996139719966})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4661 datapoints
Loss: 0.01726, iter: 0/100000
Loss: 0.01326, iter: 1000/100000
Loss: 0.02127, iter: 2000/100000
Loss: 0.00932, iter: 3000/100000
Loss: 0.01600, iter: 4000/100000
Loss: 0.00806, iter: 5000/100000
Loss: 0.01300, iter: 6000/100000
Loss: 0.00792, iter: 7000/100000
Loss: 0.01441, iter: 8000/100000
Loss: 0.01906, iter: 9000/100000
Loss: 0.01843, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10455.
Loaded best model with loss: 0.00155
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68922234], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69563377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6708833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7060818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.80373615], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7800998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7458097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66873914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74768394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74748886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81849587], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5979944], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.817141], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7721911], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6949768], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.74224454], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78843373], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7466435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.658693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6680888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8734284], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18492849], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86160886], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15720525], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81034094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 549.0
CUMULATIVE NUM SOLVED: 549.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0]
Tasks solved: 10 / 10
Average time for successes: 3.42980 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.429797534897807, 'avg_ref_cost': 1.7250000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10169, 'query_cost': 0.0, 'learning_time': 3483.175773482013})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4708 datapoints
Loss: 0.01677, iter: 0/100000
Loss: 0.01590, iter: 1000/100000
Loss: 0.01636, iter: 2000/100000
Loss: 0.01153, iter: 3000/100000
Loss: 0.00863, iter: 4000/100000
Loss: 0.02835, iter: 5000/100000
Loss: 0.00983, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6480.
Loaded best model with loss: 0.00153
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.633006], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14162388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81629187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69239473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66409296], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71832204], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77354175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7885185], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7068484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76746655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6982243], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70763606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83231497], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6985631], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7357402], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7326363], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6797205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80059534], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8420889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.716817], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (72,)
CUMULATIVE NUM SOLVED: 559.0
CUMULATIVE NUM SOLVED: 559.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0]
Tasks solved: 10 / 10
Average time for successes: 3.82910 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8290972588089063, 'avg_ref_cost': 2.04, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10293, 'query_cost': 0.0, 'learning_time': 3546.34265525901})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__72.pkl


ONLINE LEARNING CYCLE 73

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 370 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4738 datapoints
Loss: 0.01766, iter: 0/100000
Loss: 0.00952, iter: 1000/100000
Loss: 0.01639, iter: 2000/100000
Loss: 0.01728, iter: 3000/100000
Loss: 0.02233, iter: 4000/100000
Loss: 0.01303, iter: 5000/100000
Loss: 0.03162, iter: 6000/100000
Loss: 0.02675, iter: 7000/100000
Loss: 0.00975, iter: 8000/100000
Loss: 0.00391, iter: 9000/100000
Loss: 0.01515, iter: 10000/100000
Loss: 0.01508, iter: 11000/100000
Loss: 0.01860, iter: 12000/100000
Loss: 0.01674, iter: 13000/100000
Loss: 0.01229, iter: 14000/100000
Loss: 0.01186, iter: 15000/100000
Loss: 0.01909, iter: 16000/100000
Loss: 0.01464, iter: 17000/100000
Loss: 0.01218, iter: 18000/100000
Loss: 0.01010, iter: 19000/100000
Loss did not improve after 5000 itrs, terminating at itr 19325.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6182213], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.03164886], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20242316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67834437], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7997558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7128703], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6655977], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8296146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7268244], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2601428], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48865172], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.281162], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8195852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76721996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8323743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7516655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7700585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78916836], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7146275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.735533], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4212115], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.02688586], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7478563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05410846], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6530276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70610505], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (73,)
CUMULATIVE NUM SOLVED: 569.0
CUMULATIVE NUM SOLVED: 569.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0]
Tasks solved: 10 / 10
Average time for successes: 3.70253 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.702534288406605, 'avg_ref_cost': 1.6700000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10397, 'query_cost': 0.0, 'learning_time': 3630.8253558129945})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__73.pkl


ONLINE LEARNING CYCLE 74

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 375 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4780 datapoints
Loss: 0.01637, iter: 0/100000
Loss: 0.01531, iter: 1000/100000
Loss: 0.00281, iter: 2000/100000
Loss: 0.01196, iter: 3000/100000
Loss: 0.00985, iter: 4000/100000
Loss: 0.01826, iter: 5000/100000
Loss: 0.01544, iter: 6000/100000
Loss: 0.01401, iter: 7000/100000
Loss: 0.02110, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8167.
Loaded best model with loss: 0.00156
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7691806], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7268178], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7303887], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7241889], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77089036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6291946], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68200225], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.54203594], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79771304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6367739], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.121291], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6958256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73381805], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67475003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7825709], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7952108], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77993006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81130004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8906934], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01584144], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06149164], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7335211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48479292], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.825906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.47523445], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7046041], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (74,)
CUMULATIVE NUM SOLVED: 579.0
CUMULATIVE NUM SOLVED: 579.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0]
Tasks solved: 10 / 10
Average time for successes: 3.51741 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.5174131080362714, 'avg_ref_cost': 1.7100000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10512, 'query_cost': 0.0, 'learning_time': 3698.206028829998})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__74.pkl


ONLINE LEARNING CYCLE 75

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 380 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4840 datapoints
Loss: 0.03610, iter: 0/100000
Loss: 0.01294, iter: 1000/100000
Loss: 0.01625, iter: 2000/100000
Loss: 0.01583, iter: 3000/100000
Loss: 0.01246, iter: 4000/100000
Loss: 0.02066, iter: 5000/100000
Loss: 0.02087, iter: 6000/100000
Loss: 0.01291, iter: 7000/100000
Loss: 0.02059, iter: 8000/100000
Loss: 0.01837, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9484.
Loaded best model with loss: 0.00154
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6675685], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74487096], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6739777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6445358], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11515646], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3254354], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.16620134], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8259813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7891829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6858182], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7715169], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.805556], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67867744], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8049605], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79574335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77820855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6488921], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03026775], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6766499], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.786901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8602262], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11196886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8396012], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79827034], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (75,)
CUMULATIVE NUM SOLVED: 589.0
CUMULATIVE NUM SOLVED: 589.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0]
Tasks solved: 10 / 10
Average time for successes: 3.99101 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.991005929777748, 'avg_ref_cost': 1.8200000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10648, 'query_cost': 0.0, 'learning_time': 3768.1770237559977})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__75.pkl


ONLINE LEARNING CYCLE 76

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 385 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4886 datapoints
Loss: 0.01396, iter: 0/100000
Loss: 0.00841, iter: 1000/100000
Loss: 0.01457, iter: 2000/100000
Loss: 0.01285, iter: 3000/100000
Loss: 0.02553, iter: 4000/100000
Loss: 0.02095, iter: 5000/100000
Loss: 0.01774, iter: 6000/100000
Loss: 0.01759, iter: 7000/100000
Loss: 0.01494, iter: 8000/100000
Loss: 0.01731, iter: 9000/100000
Loss: 0.01266, iter: 10000/100000
Loss: 0.02201, iter: 11000/100000
Loss: 0.02241, iter: 12000/100000
Loss: 0.00453, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13393.
Loaded best model with loss: 0.00140
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82161987], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20909397], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7972589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79198045], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73418885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.18318772], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.25506347], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.06545065], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7284859], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1775595], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8240754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.15937857], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7552024], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12970491], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82266736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08064373], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70802116], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82833207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6872487], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67339236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7857855], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78140336], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.29478005], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8002263], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72886324], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68819267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74492353], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76398563], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (76,)
CUMULATIVE NUM SOLVED: 599.0
CUMULATIVE NUM SOLVED: 599.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0]
Tasks solved: 10 / 10
Average time for successes: 3.39491 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.3949075451295356, 'avg_ref_cost': 1.8050000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10771, 'query_cost': 0.0, 'learning_time': 3844.917958945007})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__76.pkl


ONLINE LEARNING CYCLE 77

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 390 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4923 datapoints
Loss: 0.02449, iter: 0/100000
Loss: 0.01311, iter: 1000/100000
Loss: 0.01986, iter: 2000/100000
Loss: 0.01194, iter: 3000/100000
Loss: 0.01379, iter: 4000/100000
Loss: 0.01327, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5259.
Loaded best model with loss: 0.00110
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7554694], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.825063], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5357025], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.03309369], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05924701], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.23763973], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08505898], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7303327], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67750144], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69434834], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6569693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.759794], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66238254], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6822578], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20751655], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7237813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.87744087], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3599102], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.21997337], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3111989], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78917205], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7216736], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69298613], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8635193], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20601256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6851671], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6808785], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71431035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79626626], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7049501], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (77,)
CUMULATIVE NUM SOLVED: 609.0
CUMULATIVE NUM SOLVED: 609.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0]
Tasks solved: 10 / 10
Average time for successes: 4.50344 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.503440594891435, 'avg_ref_cost': 2.9899999999999998, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10881, 'query_cost': 0.0, 'learning_time': 3907.662133245991})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__77.pkl


ONLINE LEARNING CYCLE 78

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 395 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4952 datapoints
Loss: 0.01563, iter: 0/100000
Loss: 0.01263, iter: 1000/100000
Loss: 0.02400, iter: 2000/100000
Loss: 0.01348, iter: 3000/100000
Loss: 0.01763, iter: 4000/100000
Loss: 0.01108, iter: 5000/100000
Loss: 0.02060, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6491.
Loaded best model with loss: 0.00143
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16835026], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6105978], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6869482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67832875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7028801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6978415], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70644003], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6803837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9430687], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69620967], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.13099276], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69481033], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80063856], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.08696063], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9738078], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7153665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8394875], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7611839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79842085], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73968107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20189391], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6077649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15342122], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.61443067], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8188473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9616924], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69697624], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (78,)
CUMULATIVE NUM SOLVED: 619.0
CUMULATIVE NUM SOLVED: 619.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0]
Tasks solved: 10 / 10
Average time for successes: 3.70665 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.706647124286974, 'avg_ref_cost': 1.735, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10983, 'query_cost': 0.0, 'learning_time': 3973.523270466976})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__78.pkl


ONLINE LEARNING CYCLE 79

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 400 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 4989 datapoints
Loss: 0.02753, iter: 0/100000
Loss: 0.02789, iter: 1000/100000
Loss: 0.01008, iter: 2000/100000
Loss: 0.01274, iter: 3000/100000
Loss: 0.00988, iter: 4000/100000
Loss: 0.01017, iter: 5000/100000
Loss: 0.01491, iter: 6000/100000
Loss: 0.01318, iter: 7000/100000
Loss: 0.01705, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8965.
Loaded best model with loss: 0.00133
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4604624], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.25143212], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6547304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.49275216], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18242575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69991946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6795413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.43227202], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8050366], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6579873], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80623335], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67595565], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4860276], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.381855], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.17595342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71448314], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73857594], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6973491], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71578705], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32587034], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.729649], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6463637], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10072788], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66722876], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6727885], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.951453], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7427159], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72474575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (79,)
CUMULATIVE NUM SOLVED: 629.0
CUMULATIVE NUM SOLVED: 629.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0]
Tasks solved: 10 / 10
Average time for successes: 3.64924 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.6492403252224905, 'avg_ref_cost': 1.6700000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11094, 'query_cost': 0.0, 'learning_time': 4043.9057301299763})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__79.pkl


ONLINE LEARNING CYCLE 80

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 405 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5022 datapoints
Loss: 0.01551, iter: 0/100000
Loss: 0.01971, iter: 1000/100000
Loss: 0.00430, iter: 2000/100000
Loss: 0.01896, iter: 3000/100000
Loss: 0.01103, iter: 4000/100000
Loss: 0.01590, iter: 5000/100000
Loss: 0.01938, iter: 6000/100000
Loss: 0.01727, iter: 7000/100000
Loss: 0.01909, iter: 8000/100000
Loss: 0.01197, iter: 9000/100000
Loss: 0.01716, iter: 10000/100000
Loss: 0.01909, iter: 11000/100000
Loss: 0.00898, iter: 12000/100000
Loss: 0.02615, iter: 13000/100000
Loss did not improve after 5000 itrs, terminating at itr 13295.
Loaded best model with loss: 0.00137
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5458992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23511304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6511131], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7185323], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7552857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6430419], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09823782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6910801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.61380327], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1605862], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8433107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7899734], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5824969], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.20644645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.05799307], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.13341342], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6424761], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.082315], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1829687], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54333955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8186023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48804188], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.31360114], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26943183], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.52932656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80482274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5223882], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.36203128], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14411287], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.643439], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9059659], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28927618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48919106], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2065896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (80,)
CUMULATIVE NUM SOLVED: 639.0
CUMULATIVE NUM SOLVED: 639.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0]
Tasks solved: 10 / 10
Average time for successes: 4.68024 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.680244180580485, 'avg_ref_cost': 1.985, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11199, 'query_cost': 0.0, 'learning_time': 4121.631202015968})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__80.pkl


ONLINE LEARNING CYCLE 81

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 410 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5058 datapoints
Loss: 0.00923, iter: 0/100000
Loss: 0.01648, iter: 1000/100000
Loss: 0.01153, iter: 2000/100000
Loss: 0.02351, iter: 3000/100000
Loss: 0.02176, iter: 4000/100000
Loss: 0.02138, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5160.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6358355], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8319938], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9083065], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-4-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9289188], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6509745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.32367754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7509968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74714595], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6987797], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66099644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7701584], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7042608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71831036], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79734993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75293833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24492879], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.47472504], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3278459], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17157897], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.2655248], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.0230398], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6638026], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7121457], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7656184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7794747], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.17021325], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.39192963], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.14890575], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6730833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1878167], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6426737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (81,)
CUMULATIVE NUM SOLVED: 649.0
CUMULATIVE NUM SOLVED: 649.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0]
Tasks solved: 10 / 10
Average time for successes: 3.81358 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.8135844779200854, 'avg_ref_cost': 1.9950000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11311, 'query_cost': 0.0, 'learning_time': 4187.063765265979})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__81.pkl


ONLINE LEARNING CYCLE 82

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 415 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5106 datapoints
Loss: 0.01473, iter: 0/100000
Loss: 0.01313, iter: 1000/100000
Loss: 0.01224, iter: 2000/100000
Loss: 0.01946, iter: 3000/100000
Loss: 0.01885, iter: 4000/100000
Loss: 0.01318, iter: 5000/100000
Loss: 0.01480, iter: 6000/100000
Loss: 0.00976, iter: 7000/100000
Loss: 0.01124, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8989.
Loaded best model with loss: 0.00133
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67543405], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70336777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7383013], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73650503], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6303148], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.10799745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7188451], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78436446], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8679691], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20927256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8275481], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6836853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7460412], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6732745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7622413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66810614], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.54158336], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.58508563], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65176046], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.28688905], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86119556], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2148925], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1544935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6358707], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19742006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.58089834], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15460308], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64012736], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23434064], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2015294], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (82,)
CUMULATIVE NUM SOLVED: 659.0
CUMULATIVE NUM SOLVED: 659.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0]
Tasks solved: 10 / 10
Average time for successes: 4.91475 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.914747407077812, 'avg_ref_cost': 2.035, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11434, 'query_cost': 0.0, 'learning_time': 4259.343769673986})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__82.pkl


ONLINE LEARNING CYCLE 83

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 420 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5154 datapoints
Loss: 0.01757, iter: 0/100000
Loss: 0.00871, iter: 1000/100000
Loss: 0.00468, iter: 2000/100000
Loss: 0.01284, iter: 3000/100000
Loss: 0.02075, iter: 4000/100000
Loss: 0.01940, iter: 5000/100000
Loss: 0.01007, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6112.
Loaded best model with loss: 0.00122
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74163395], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6527737], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30301088], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.35789517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5942453], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.01195598], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.28570956], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14447585], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6689377], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32671294], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3251226], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.33895236], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5403006], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05352444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65378267], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6465275], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.08160017], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1888109], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7296604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6571207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.32810226], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.30816022], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01915486], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7869821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75256807], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7751729], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.59488034], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.18791364], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70786256], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72202325], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70584863], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (83,)
CUMULATIVE NUM SOLVED: 669.0
CUMULATIVE NUM SOLVED: 669.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0]
Tasks solved: 10 / 10
Average time for successes: 4.27497 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.274966671300353, 'avg_ref_cost': 1.7449999999999999, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11557, 'query_cost': 0.0, 'learning_time': 4326.8486300270015})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__83.pkl


ONLINE LEARNING CYCLE 84

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 425 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5204 datapoints
Loss: 0.01892, iter: 0/100000
Loss: 0.01068, iter: 1000/100000
Loss: 0.02426, iter: 2000/100000
Loss: 0.02619, iter: 3000/100000
Loss: 0.01026, iter: 4000/100000
Loss: 0.02085, iter: 5000/100000
Loss: 0.01577, iter: 6000/100000
Loss: 0.01654, iter: 7000/100000
Loss: 0.02147, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8772.
Loaded best model with loss: 0.00133
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68267745], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7100999], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6696274], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77127755], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9541986], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9201545], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6935347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7768935], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9376939], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.86859673], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76931894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7689304], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7066334], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67570055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.80644655], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7197764], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72407824], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6578417], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7754678], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8454779], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68541896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70709443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69539434], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72527474], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7850043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (84,)
CUMULATIVE NUM SOLVED: 679.0
CUMULATIVE NUM SOLVED: 679.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0]
Tasks solved: 10 / 10
Average time for successes: 3.58301 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.583007593540242, 'avg_ref_cost': 1.7049999999999996, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11683, 'query_cost': 0.0, 'learning_time': 4399.177816942014})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__84.pkl


ONLINE LEARNING CYCLE 85

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 430 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5251 datapoints
Loss: 0.01661, iter: 0/100000
Loss: 0.01401, iter: 1000/100000
Loss: 0.01426, iter: 2000/100000
Loss: 0.00737, iter: 3000/100000
Loss: 0.03604, iter: 4000/100000
Loss: 0.01123, iter: 5000/100000
Loss: 0.02602, iter: 6000/100000
Loss: 0.01734, iter: 7000/100000
Loss: 0.02760, iter: 8000/100000
Loss: 0.01549, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9565.
Loaded best model with loss: 0.00006
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6422239], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.03198993], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.57136756], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7809777], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7703409], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6902249], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7469663], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.61704445], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7020053], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8281762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6892845], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7446724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83435696], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.67338336], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.696589], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68590444], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8155293], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7140558], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7156411], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6866606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7531941], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6731864], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.71034294], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86035097], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07998191], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84019727], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (85,)
CUMULATIVE NUM SOLVED: 689.0
CUMULATIVE NUM SOLVED: 689.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0]
Tasks solved: 10 / 10
Average time for successes: 3.49162 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.4916179843916324, 'avg_ref_cost': 1.73, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11805, 'query_cost': 0.0, 'learning_time': 4473.448339372})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__85.pkl


ONLINE LEARNING CYCLE 86

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 435 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5292 datapoints
Loss: 0.01822, iter: 0/100000
Loss: 0.01730, iter: 1000/100000
Loss: 0.01642, iter: 2000/100000
Loss: 0.01804, iter: 3000/100000
Loss: 0.02295, iter: 4000/100000
Loss: 0.00845, iter: 5000/100000
Loss: 0.02128, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6958.
Loaded best model with loss: 0.00183
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68772984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73583984], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7469023], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6396542], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.11198916], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48894545], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.29418236], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65437394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7357583], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6854396], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77267754], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6829388], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7980693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5250085], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.22885506], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76708704], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7466953], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6354638], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.36063746], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3587062], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83047915], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7811391], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7256661], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8605046], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1266821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78064746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (86,)
CUMULATIVE NUM SOLVED: 699.0
CUMULATIVE NUM SOLVED: 699.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0]
Tasks solved: 10 / 10
Average time for successes: 3.97028 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.970282794092782, 'avg_ref_cost': 1.725, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11922, 'query_cost': 0.0, 'learning_time': 4542.919520530006})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__86.pkl


ONLINE LEARNING CYCLE 87

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 440 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5338 datapoints
Loss: 0.01767, iter: 0/100000
Loss: 0.00641, iter: 1000/100000
Loss: 0.01588, iter: 2000/100000
Loss: 0.01562, iter: 3000/100000
Loss: 0.00779, iter: 4000/100000
Loss: 0.01045, iter: 5000/100000
Loss: 0.01461, iter: 6000/100000
Loss: 0.03057, iter: 7000/100000
Loss: 0.01164, iter: 8000/100000
Loss: 0.02229, iter: 9000/100000
Loss: 0.02124, iter: 10000/100000
Loss: 0.01829, iter: 11000/100000
Loss: 0.00930, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12473.
Loaded best model with loss: 0.00124
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7028959], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69832677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8065509], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.689906], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6778892], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.55439305], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.21855384], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.728721], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.63679767], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.44692537], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27279386], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7117028], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5798903], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09891636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6623117], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6805097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72827476], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7429644], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7089833], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7670706], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69250184], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74002653], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7836126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (87,)
CUMULATIVE NUM SOLVED: 709.0
CUMULATIVE NUM SOLVED: 709.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0]
Tasks solved: 10 / 10
Average time for successes: 3.46534 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.4653423818963347, 'avg_ref_cost': 1.9550000000000005, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12044, 'query_cost': 0.0, 'learning_time': 4623.388026342989})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__87.pkl


ONLINE LEARNING CYCLE 88

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 445 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5406 datapoints
Loss: 0.03075, iter: 0/100000
Loss: 0.01133, iter: 1000/100000
Loss: 0.02016, iter: 2000/100000
Loss: 0.01131, iter: 3000/100000
Loss: 0.01396, iter: 4000/100000
Loss: 0.03355, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5730.
Loaded best model with loss: 0.00139
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8021844], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6669888], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7698119], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6584574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7243035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71641207], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80053693], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3425033], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7660006], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7146035], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6748572], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78078574], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65573484], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75604], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7292879], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67957896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68391126], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6593107], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8001998], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67302555], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (88,)
CUMULATIVE NUM SOLVED: 719.0
CUMULATIVE NUM SOLVED: 719.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0]
Tasks solved: 10 / 10
Average time for successes: 3.55126 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.5512596767075593, 'avg_ref_cost': 1.6300000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12189, 'query_cost': 0.0, 'learning_time': 4691.617455442989})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__88.pkl


ONLINE LEARNING CYCLE 89

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 450 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5437 datapoints
Loss: 0.02157, iter: 0/100000
Loss: 0.00745, iter: 1000/100000
Loss: 0.01889, iter: 2000/100000
Loss: 0.02466, iter: 3000/100000
Loss: 0.02289, iter: 4000/100000
Loss: 0.02253, iter: 5000/100000
Loss: 0.01215, iter: 6000/100000
Loss: 0.01293, iter: 7000/100000
Loss: 0.01087, iter: 8000/100000
Loss: 0.02139, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9045.
Loaded best model with loss: 0.00190
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71808094], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6471483], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.01811156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6528801], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6489716], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.23968862], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.20183992], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7318821], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7352399], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67940235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-0-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73850155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.50425196], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67116666], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67571896], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8760391], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3483778], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.25601837], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6922724], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8102994], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65390277], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86290354], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.11952496], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.48851365], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6369933], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.16744621], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6928097], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6962839], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82116926], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (89,)
CUMULATIVE NUM SOLVED: 729.0
CUMULATIVE NUM SOLVED: 729.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0]
Tasks solved: 10 / 10
Average time for successes: 3.87417 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.874167425787891, 'avg_ref_cost': 2.0250000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12292, 'query_cost': 0.0, 'learning_time': 4767.083142699994})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__89.pkl


ONLINE LEARNING CYCLE 90

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 455 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5466 datapoints
Loss: 0.00839, iter: 0/100000
Loss: 0.01549, iter: 1000/100000
Loss: 0.00750, iter: 2000/100000
Loss: 0.01019, iter: 3000/100000
Loss: 0.01807, iter: 4000/100000
Loss: 0.01644, iter: 5000/100000
Loss: 0.01105, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6391.
Loaded best model with loss: 0.00138
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7173901], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75801146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71232593], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8258618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6614606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8451146], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6933771], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74105936], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83645964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.5632111], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.62617886], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50600743], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14714493], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.90130407], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14869128], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6956647], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6545152], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8388221], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7544158], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65562904], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6782188], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66270804], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7642529], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86729676], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.05754211], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (90,)
CUMULATIVE NUM SOLVED: 739.0
CUMULATIVE NUM SOLVED: 739.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0]
Tasks solved: 10 / 10
Average time for successes: 4.64999 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.649991099504405, 'avg_ref_cost': 1.8500000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12393, 'query_cost': 0.0, 'learning_time': 4836.995898878988})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__90.pkl


ONLINE LEARNING CYCLE 91

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 460 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5497 datapoints
Loss: 0.02115, iter: 0/100000
Loss: 0.01955, iter: 1000/100000
Loss: 0.01980, iter: 2000/100000
Loss: 0.02576, iter: 3000/100000
Loss: 0.01520, iter: 4000/100000
Loss: 0.01732, iter: 5000/100000
Loss: 0.02433, iter: 6000/100000
Loss: 0.01273, iter: 7000/100000
Loss: 0.00840, iter: 8000/100000
Loss: 0.02133, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9902.
Loaded best model with loss: 0.00186
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6540004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73538756], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.40621176], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66847235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.41454], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8118049], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8261677], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6952606], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.59460074], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.443592], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7494971], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.650092], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.31401747], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74747187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8185473], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7184937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37701184], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.49097866], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.56271636], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6667976], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6882608], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.728816], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.57347697], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7392074], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66629636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.27885512], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.826518], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7128385], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.45607743], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7970043], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (91,)
CUMULATIVE NUM SOLVED: 749.0
CUMULATIVE NUM SOLVED: 749.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0]
Tasks solved: 10 / 10
Average time for successes: 3.81081 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.810806939765462, 'avg_ref_cost': 1.8250000000000004, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12497, 'query_cost': 0.0, 'learning_time': 4914.464578214975})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__91.pkl


ONLINE LEARNING CYCLE 92

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 465 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5531 datapoints
Loss: 0.01767, iter: 0/100000
Loss: 0.01314, iter: 1000/100000
Loss: 0.00995, iter: 2000/100000
Loss: 0.01305, iter: 3000/100000
Loss: 0.01591, iter: 4000/100000
Loss: 0.01691, iter: 5000/100000
Loss: 0.01904, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6843.
Loaded best model with loss: 0.00151
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8242273], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76996374], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6266073], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1607195], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8288058], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.85234654], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.10105482], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6702413], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6826321], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7267479], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8082517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8160187], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7651742], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8299289], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66548973], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78517175], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7418394], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7002851], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.782947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (92,)
CUMULATIVE NUM SOLVED: 758.0
CUMULATIVE NUM SOLVED: 758.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0]
Tasks solved: 9 / 10
Average time for successes: 3.15545 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 9, 'num_total': 10, 'avg_suc_time': 3.155446894787019, 'avg_ref_cost': 3.127777777777778, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12606, 'query_cost': 0.0, 'learning_time': 4986.324256923981})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__92.pkl


ONLINE LEARNING CYCLE 93

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 470 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5567 datapoints
Loss: 0.00984, iter: 0/100000
Loss: 0.01826, iter: 1000/100000
Loss: 0.01192, iter: 2000/100000
Loss: 0.01541, iter: 3000/100000
Loss: 0.01596, iter: 4000/100000
Loss: 0.01519, iter: 5000/100000
Loss: 0.02195, iter: 6000/100000
Loss: 0.01085, iter: 7000/100000
Loss: 0.01077, iter: 8000/100000
Loss: 0.01608, iter: 9000/100000
Loss: 0.01284, iter: 10000/100000
Loss: 0.01651, iter: 11000/100000
Loss: 0.01971, iter: 12000/100000
Loss: 0.02106, iter: 13000/100000
Loss: 0.02109, iter: 14000/100000
Loss: 0.02814, iter: 15000/100000
Loss: 0.01935, iter: 16000/100000
Loss: 0.01024, iter: 17000/100000
Loss: 0.01468, iter: 18000/100000
Loss did not improve after 5000 itrs, terminating at itr 18017.
Loaded best model with loss: 0.00152
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84018743], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.84950554], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76445], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75668275], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6923571], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8222746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8050346], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7252658], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7558818], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8447142], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82026494], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8127723], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7013436], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7985069], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80926347], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7121665], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8336366], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77103645], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7055853], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (93,)
CUMULATIVE NUM SOLVED: 768.0
CUMULATIVE NUM SOLVED: 768.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0]
Tasks solved: 10 / 10
Average time for successes: 3.51926 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.519262886120123, 'avg_ref_cost': 1.9450000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12714, 'query_cost': 0.0, 'learning_time': 5078.355842485995})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__93.pkl


ONLINE LEARNING CYCLE 94

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 475 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5638 datapoints
Loss: 0.01529, iter: 0/100000
Loss: 0.01549, iter: 1000/100000
Loss: 0.01982, iter: 2000/100000
Loss: 0.01415, iter: 3000/100000
Loss: 0.01526, iter: 4000/100000
Loss: 0.01437, iter: 5000/100000
Loss: 0.01339, iter: 6000/100000
Loss: 0.01899, iter: 7000/100000
Loss: 0.01365, iter: 8000/100000
Loss: 0.01921, iter: 9000/100000
Loss: 0.01509, iter: 10000/100000
Loss did not improve after 5000 itrs, terminating at itr 10785.
Loaded best model with loss: 0.00086
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7393646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8613496], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.1497381], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66693443], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8593221], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6820829], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50541115], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15778796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7325135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.77892494], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.781183], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6790782], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.8740516], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.14384447], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7177919], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7655317], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6849646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.86252487], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.935639], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79475707], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7699038], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6883918], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8043343], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7346232], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7911348], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.9734796], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72753143], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8513884], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.97200084], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6874019], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (94,)
CUMULATIVE NUM SOLVED: 778.0
CUMULATIVE NUM SOLVED: 778.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0]
Tasks solved: 10 / 10
Average time for successes: 3.90773 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.907730386618641, 'avg_ref_cost': 1.6900000000000002, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12861, 'query_cost': 0.0, 'learning_time': 5158.68699801201})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__94.pkl


ONLINE LEARNING CYCLE 95

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 480 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5665 datapoints
Loss: 0.01925, iter: 0/100000
Loss: 0.00180, iter: 1000/100000
Loss: 0.01038, iter: 2000/100000
Loss: 0.01331, iter: 3000/100000
Loss: 0.00754, iter: 4000/100000
Loss: 0.01849, iter: 5000/100000
Loss: 0.02533, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6377.
Loaded best model with loss: 0.00144
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80076295], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.3772233], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7713022], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.71218455], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74946964], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7123292], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6685877], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38482538], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7330852], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.46346986], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7115261], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34371987], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79418784], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.69769835], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.37660408], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6802167], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8314857], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7490493], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.709096], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.34010243], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.38892835], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6602955], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.74570644], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8519043], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.07230929], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7022098], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.74992734], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75490427], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.70924526], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.769762], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8589063], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.12239917], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74767196], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7637055], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8180032], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4619427], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75831103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (95,)
CUMULATIVE NUM SOLVED: 788.0
CUMULATIVE NUM SOLVED: 788.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0]
Tasks solved: 10 / 10
Average time for successes: 4.10949 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.109491770382737, 'avg_ref_cost': 1.7150000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12961, 'query_cost': 0.0, 'learning_time': 5232.119682721997})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__95.pkl


ONLINE LEARNING CYCLE 96

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 485 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5696 datapoints
Loss: 0.00763, iter: 0/100000
Loss: 0.00807, iter: 1000/100000
Loss: 0.02329, iter: 2000/100000
Loss: 0.02183, iter: 3000/100000
Loss: 0.02790, iter: 4000/100000
Loss: 0.00499, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5611.
Loaded best model with loss: 0.00154
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.75698316], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7849789], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.68678683], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.51096725], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.15611966], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81576985], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.58494884], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6801423], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7036408], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.669632], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.7017868], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5310716], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1193924], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73407656], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7913235], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6920646], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.48065493], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.3316923], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.50373286], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.6926017], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69006103], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7009943], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.716241], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6799389], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6854886], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80501676], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7473233], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (96,)
CUMULATIVE NUM SOLVED: 798.0
CUMULATIVE NUM SOLVED: 798.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0]
Tasks solved: 10 / 10
Average time for successes: 3.65301 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.6530113942339084, 'avg_ref_cost': 1.6649999999999998, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13068, 'query_cost': 0.0, 'learning_time': 5303.083069797984})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__96.pkl


ONLINE LEARNING CYCLE 97

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 490 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5735 datapoints
Loss: 0.01257, iter: 0/100000
Loss: 0.01116, iter: 1000/100000
Loss: 0.00980, iter: 2000/100000
Loss: 0.01857, iter: 3000/100000
Loss: 0.01646, iter: 4000/100000
Loss: 0.01306, iter: 5000/100000
Loss: 0.02210, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6710.
Loaded best model with loss: 0.00098
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6842135], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6675447], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7879628], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67258996], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69680566], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.66978276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67880154], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7424652], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.74927914], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5330224], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.26731545], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5635111], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.19097424], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82196796], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.53350204], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1151912], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.09454527], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.79783946], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.49942213], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.24000773], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.51909345], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.4057183], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09289279], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.81269145], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.71724975], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6617435], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (97,)
CUMULATIVE NUM SOLVED: 808.0
CUMULATIVE NUM SOLVED: 808.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0, 808.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0, 808.0]
Tasks solved: 10 / 10
Average time for successes: 4.79314 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 4.793138905425439, 'avg_ref_cost': 2.04, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13185, 'query_cost': 0.0, 'learning_time': 5376.897619719995})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__97.pkl


ONLINE LEARNING CYCLE 98

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 495 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5807 datapoints
Loss: 0.00445, iter: 0/100000
Loss: 0.02145, iter: 1000/100000
Loss: 0.01804, iter: 2000/100000
Loss: 0.02120, iter: 3000/100000
Loss: 0.02125, iter: 4000/100000
Loss: 0.02546, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5372.
Loaded best model with loss: 0.00179
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8520034], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09335947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.80654055], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.69958746], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.83542156], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7985084], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.72635245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.77596354], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7202618], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6457781], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.02490894], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7656968], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7555276], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.82802945], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9621248], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.17632265], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.65932155], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-4-left-door:door], params=array([], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.9173631], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.2790573], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.06757567], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7787083], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.78885245], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.73800695], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8354064], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (98,)
CUMULATIVE NUM SOLVED: 818.0
CUMULATIVE NUM SOLVED: 818.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0, 808.0, 818.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0, 808.0, 818.0]
Tasks solved: 10 / 10
Average time for successes: 3.90983 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.9098254823766183, 'avg_ref_cost': 1.875, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13337, 'query_cost': 0.0, 'learning_time': 5451.1161713929905})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__98.pkl


ONLINE LEARNING CYCLE 99

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 500 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-MoveThroughDoor:
    Parameters: [?robot:robot, ?start_room:room, ?door:door, ?end_room:room]
    Preconditions: [DoorInRoom(?door:door, ?end_room:room), DoorInRoom(?door:door, ?start_room:room), InDoorway(?robot:robot, ?door:door), InRoom(?robot:robot, ?start_room:room)]
    Add Effects: [InRoom(?robot:robot, ?end_room:room)]
    Delete Effects: [InRoom(?robot:robot, ?start_room:room)]
    Ignore Effects: []
    Option Spec: MoveThroughDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromMainRoom:
    Parameters: [?robot:robot, ?room:room, ?door:door]
    Preconditions: [DoorInRoom(?door:door, ?room:room), InMainRoom(?robot:robot, ?room:room), InRoom(?robot:robot, ?room:room)]
    Add Effects: [InDoorway(?robot:robot, ?door:door)]
    Delete Effects: [InMainRoom(?robot:robot, ?room:room)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?door:door)
NSRT-MoveToDoorFromDoorWay:
    Parameters: [?robot:robot, ?start_door:door, ?end_door:door]
    Preconditions: [DoorsShareRoom(?start_door:door, ?end_door:door), InDoorway(?robot:robot, ?start_door:door)]
    Add Effects: [InDoorway(?robot:robot, ?end_door:door)]
    Delete Effects: [InDoorway(?robot:robot, ?start_door:door)]
    Ignore Effects: []
    Option Spec: MoveToDoor(?robot:robot, ?end_door:door)
NSRT-OpenDoor:
    Parameters: [?robot:robot]
    Preconditions: []
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: OpenDoor(?robot:robot)

Training MapleQFunction on 5835 datapoints
Loss: 0.02059, iter: 0/100000
Loss: 0.01275, iter: 1000/100000
Loss: 0.01505, iter: 2000/100000
Loss: 0.01646, iter: 3000/100000
Loss: 0.01313, iter: 4000/100000
Loss: 0.01471, iter: 5000/100000
Loss: 0.02069, iter: 6000/100000
Loss: 0.01758, iter: 7000/100000
Loss: 0.01402, iter: 8000/100000
Loss: 0.01672, iter: 9000/100000
Loss: 0.02252, iter: 10000/100000
Loss: 0.01564, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11900.
Loaded best model with loss: 0.00105
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7187016], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-3-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6539544], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room2-2-1-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.8167517], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room3-0-0-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.60956734], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1471865], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6323957], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4993479], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.5592942], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room5-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.64816254], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.1156937], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room6-2-2-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6638298], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room8-1-2-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7712636], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.87624496], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6648048], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room11-1-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6780111], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room12-3-1-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6568819], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-3-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7267641], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room14-4-4-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.76881725], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.67773813], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-3-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7098004], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-2-4-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7172238], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room15-1-4-bottom-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: SOLVED
[CogMan] Reset called.
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.42621544], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.883606], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.09643623], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-1-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([-0.4551898], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.6966349], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-2-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveToDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
_Option(name='OpenDoor', objects=[robby:robot], params=array([0.7133947], dtype=float32))test
_Option(name='CallPlanner', objects=[], params=array([], dtype=float32))test
_Option(name='MoveThroughDoor', objects=[robby:robot, room16-3-3-left-door:door], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: SOLVED
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (99,)
CUMULATIVE NUM SOLVED: 828.0
CUMULATIVE NUM SOLVED: 828.0
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0, 808.0, 818.0, 828.0]
[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100][0.3, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 0.4, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.3, 0.0, 0.4, 0.8, 0.8, 1.0, 1.0, 0.9, 1.0, 0.0, 0.7, 0.1, 0.0, 0.0, 0.3, 0.5, 0.0, 0.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0][3.0, 13.0, 23.0, 33.0, 42.0, 52.0, 61.0, 65.0, 65.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.0, 71.0, 75.0, 83.0, 91.0, 101.0, 111.0, 120.0, 130.0, 130.0, 137.0, 138.0, 138.0, 138.0, 141.0, 146.0, 146.0, 151.0, 161.0, 171.0, 181.0, 191.0, 201.0, 211.0, 221.0, 231.0, 241.0, 251.0, 260.0, 270.0, 279.0, 289.0, 299.0, 309.0, 319.0, 329.0, 339.0, 349.0, 359.0, 369.0, 379.0, 389.0, 399.0, 409.0, 419.0, 429.0, 439.0, 449.0, 459.0, 469.0, 479.0, 489.0, 499.0, 509.0, 519.0, 529.0, 539.0, 549.0, 559.0, 569.0, 579.0, 589.0, 599.0, 609.0, 619.0, 629.0, 639.0, 649.0, 659.0, 669.0, 679.0, 689.0, 699.0, 709.0, 719.0, 729.0, 739.0, 749.0, 758.0, 768.0, 778.0, 788.0, 798.0, 808.0, 818.0, 828.0]
Tasks solved: 10 / 10
Average time for successes: 3.36524 seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 10, 'num_total': 10, 'avg_suc_time': 3.365242178787594, 'avg_ref_cost': 1.6650000000000003, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13439, 'query_cost': 0.0, 'learning_time': 5536.182649397})
Wrote out test results to results/doorknobs__rl_bridge_policy__3______RLBRIDGE_doorknobs-oracle__99.pkl
SMOOTH REWARDS[0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996]


Main script terminated in 21117.75186 seconds
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
GETTING TASK
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  5
BAD DOOR
predicted q value [0.]
actual q value -0.00027064607
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996276
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  9
BAD DOOR
predicted q value [0.13382828]
actual q value 0.13604549
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.16728535
BAD DOOR
predicted q value [0.13702507]
actual q value 0.13796636
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.17128134
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025989
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039018
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500744
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  14
BAD DOOR
predicted q value [0.23203984]
actual q value 0.23535535
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.2900498
BAD DOOR
predicted q value [0.2356811]
actual q value 0.23494843
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.29460138
BAD DOOR
predicted q value [0.22739208]
actual q value 0.22593066
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.2842401
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498748
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979945
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4971055
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985095
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975781
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  19
BAD DOOR
predicted q value [0.33307698]
actual q value 0.32855394
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.41634622
BAD DOOR
predicted q value [0.33786687]
actual q value 0.33215126
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.4223336
BAD DOOR
predicted q value [0.3285638]
actual q value 0.32726598
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.41070476
BAD DOOR
predicted q value [0.33547297]
actual q value 0.32664064
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.4193412
BAD DOOR
predicted q value [0.33547297]
actual q value 0.33059555
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.4193412
BAD DOOR
predicted q value [0.33296353]
actual q value 0.32094854
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.41620442
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5062555
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054994
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.506934
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5058473
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5052822
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5063146
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5065957
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  24
BAD DOOR
predicted q value [0.5800923]
actual q value 0.5701458
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.72511536
BAD DOOR
predicted q value [0.58300096]
actual q value 0.57260406
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.7287512
BAD DOOR
predicted q value [0.57113457]
actual q value 0.5657929
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.7139182
BAD DOOR
predicted q value [0.58179843]
actual q value 0.56905663
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.727248
BAD DOOR
predicted q value [0.58179843]
actual q value 0.5766896
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.727248
BAD DOOR
predicted q value [0.5799706]
actual q value 0.5676003
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.72496325
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4865216
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4888097
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4844683
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4877563
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4894662
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4863431
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4854927
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  29
BAD DOOR
predicted q value [0.6877998]
actual q value 0.69285226
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.8597498
BAD DOOR
predicted q value [0.6937736]
actual q value 0.68209684
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.86721706
BAD DOOR
predicted q value [0.6793777]
actual q value 0.6768336
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.84922206
BAD DOOR
predicted q value [0.69123065]
actual q value 0.68632567
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.8640383
BAD DOOR
predicted q value [0.69123065]
actual q value 0.69918656
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.8640383
BAD DOOR
predicted q value [0.6875708]
actual q value 0.6831304
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.8594635
BAD DOOR
predicted q value [0.68547934]
actual q value 0.6851403
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.8568492
BAD DOOR
predicted q value [0.68396586]
actual q value 0.6623974
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.85495734
BAD DOOR
predicted q value [0.6879745]
actual q value 0.6858569
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.8599681
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.527846
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5270241
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5285835
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5274025
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5267882
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.52791
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5282155
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5261006
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5281326
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  34
BAD DOOR
predicted q value [0.80464685]
actual q value 0.7555301
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0058086
BAD DOOR
predicted q value [0.81073207]
actual q value 0.795739
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0134151
BAD DOOR
predicted q value [0.79271734]
actual q value 0.7355477
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.99089664
BAD DOOR
predicted q value [0.8084221]
actual q value 0.74741125
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0105276
BAD DOOR
predicted q value [0.8084221]
actual q value 0.79069746
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0105276
BAD DOOR
predicted q value [0.8043969]
actual q value 0.7411466
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0054961
BAD DOOR
predicted q value [0.8014636]
actual q value 0.7504631
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0018295
BAD DOOR
predicted q value [0.79929423]
actual q value 0.7547942
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.9991178
BAD DOOR
predicted q value [0.8048376]
actual q value 0.74814516
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.006047
BAD DOOR
predicted q value [0.7910157]
actual q value 0.7647408
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.9887696
BAD DOOR
predicted q value [0.7910157]
actual q value 0.7363376
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  0.9887696
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4705316
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4654801
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4750644
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4678057
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4640307
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4709256
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4728028
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4598053
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4722924
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4627479
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
WE GOT REWARDS:  39
BAD DOOR
predicted q value [0.87257355]
actual q value 0.8806499
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.090717
BAD DOOR
predicted q value [0.88009155]
actual q value 0.90118
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1001145
BAD DOOR
predicted q value [0.86245805]
actual q value 0.8999325
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0780725
BAD DOOR
predicted q value [0.87655956]
actual q value 0.89456874
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0956994
BAD DOOR
predicted q value [0.87655956]
actual q value 0.89556026
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0956994
BAD DOOR
predicted q value [0.87233704]
actual q value 0.90326846
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0904213
BAD DOOR
predicted q value [0.87037313]
actual q value 0.89171267
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0879664
BAD DOOR
predicted q value [0.86872166]
actual q value 0.8670291
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0859021
BAD DOOR
predicted q value [0.8727539]
actual q value 0.8811374
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0909424
BAD DOOR
predicted q value [0.8610929]
actual q value 0.8736201
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0763662
BAD DOOR
predicted q value [0.8610929]
actual q value 0.90340674
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0763662
BAD DOOR
predicted q value [0.86856496]
actual q value 0.8781195
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0857062
BAD DOOR
predicted q value [0.8650392]
actual q value 0.9061385
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.0812991
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018609
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007154
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028887
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012428
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003867
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019504
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023758
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994285
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022603
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000957
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014832
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996356
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
WE GOT REWARDS:  44
BAD DOOR
predicted q value [0.95041496]
actual q value 0.9321505
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1880187
BAD DOOR
predicted q value [0.951146]
actual q value 0.9752416
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1889325
BAD DOOR
predicted q value [0.94460166]
actual q value 0.9254875
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.180752
BAD DOOR
predicted q value [0.9508025]
actual q value 0.94311416
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1885031
BAD DOOR
predicted q value [0.9508025]
actual q value 0.95243376
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1885031
BAD DOOR
predicted q value [0.95039195]
actual q value 0.9410488
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.18799
BAD DOOR
predicted q value [0.95018196]
actual q value 0.9450946
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1877275
BAD DOOR
predicted q value [0.94970405]
actual q value 0.92578065
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1871301
BAD DOOR
predicted q value [0.9504326]
actual q value 0.9308376
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1880407
BAD DOOR
predicted q value [0.9427215]
actual q value 0.9210826
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1784018
BAD DOOR
predicted q value [0.9427215]
actual q value 0.9283546
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1784018
BAD DOOR
predicted q value [0.9495777]
actual q value 0.9495991
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1869721
BAD DOOR
predicted q value [0.9467376]
actual q value 0.9438874
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.183422
BAD DOOR
predicted q value [0.9447144]
actual q value 0.9093204
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.1808931
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036914
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026332
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046412
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031204
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023293
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503774
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041674
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014441
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040605
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020605
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033424
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016354
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5047042
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5049566
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  49
BAD DOOR
predicted q value [0.9775402]
actual q value 0.99640465
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2219253
BAD DOOR
predicted q value [0.97852576]
actual q value 1.0067136
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2231572
BAD DOOR
predicted q value [0.9764002]
actual q value 1.0233827
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2205002
BAD DOOR
predicted q value [0.97806275]
actual q value 0.998291
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2225784
BAD DOOR
predicted q value [0.97806275]
actual q value 1.0041806
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2225784
BAD DOOR
predicted q value [0.9775093]
actual q value 1.026528
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2218866
BAD DOOR
predicted q value [0.9772261]
actual q value 0.97692215
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2215326
BAD DOOR
predicted q value [0.9770212]
actual q value 0.99473417
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2212765
BAD DOOR
predicted q value [0.97756386]
actual q value 0.99450827
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2219548
BAD DOOR
predicted q value [0.9762019]
actual q value 0.9955828
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2202524
BAD DOOR
predicted q value [0.9762019]
actual q value 1.0302687
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2202524
BAD DOOR
predicted q value [0.97700584]
actual q value 0.97300816
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2212573
BAD DOOR
predicted q value [0.97666013]
actual q value 1.0459272
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2208252
BAD DOOR
predicted q value [0.9764139]
actual q value 0.9917816
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2205174
BAD DOOR
predicted q value [0.97812927]
actual q value 1.0060253
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2226616
BAD DOOR
predicted q value [0.97812927]
actual q value 1.0000247
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2226616
BAD DOOR
predicted q value [0.97812927]
actual q value 1.0013077
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2226616
BAD DOOR
predicted q value [0.97812927]
actual q value 1.0377865
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2226616
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054934
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034618
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073166
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043972
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023462
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5056521
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5064071
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4961092
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5062017
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500453
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5048237
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974577
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074377
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.507922
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999671
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5072225
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
WE GOT REWARDS:  54
BAD DOOR
predicted q value [0.99509525]
actual q value 0.99621135
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2438691
BAD DOOR
predicted q value [0.9960753]
actual q value 0.98764163
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2450941
BAD DOOR
predicted q value [0.99396145]
actual q value 0.99079937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2424518
BAD DOOR
predicted q value [0.9956148]
actual q value 0.9959863
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2445185
BAD DOOR
predicted q value [0.9956148]
actual q value 0.9908785
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2445185
BAD DOOR
predicted q value [0.9950644]
actual q value 0.9870058
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2438304
BAD DOOR
predicted q value [0.99478275]
actual q value 0.97729474
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2434784
BAD DOOR
predicted q value [0.99457896]
actual q value 0.9916163
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2432237
BAD DOOR
predicted q value [0.9951186]
actual q value 0.99694496
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2438983
BAD DOOR
predicted q value [0.9938016]
actual q value 0.9894946
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.242252
BAD DOOR
predicted q value [0.9938016]
actual q value 0.99156815
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.242252
BAD DOOR
predicted q value [0.9945637]
actual q value 0.9775755
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2432046
BAD DOOR
predicted q value [0.99421996]
actual q value 0.9888825
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.242775
BAD DOOR
predicted q value [0.99397504]
actual q value 0.99453396
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2424688
BAD DOOR
predicted q value [0.9956811]
actual q value 0.99203867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2446014
BAD DOOR
predicted q value [0.9956811]
actual q value 0.98736817
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2446014
BAD DOOR
predicted q value [0.9956811]
actual q value 0.99438864
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2446014
BAD DOOR
predicted q value [0.9956811]
actual q value 0.99157935
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2446014
BAD DOOR
predicted q value [0.9946187]
actual q value 0.97717696
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2432734
BAD DOOR
predicted q value [0.9937706]
actual q value 0.9971785
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2422132
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4827931
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4812919
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4841403
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.481983
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.480861
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4829103
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4834683
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4796052
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4833164
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4804797
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4822981
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4798766
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4842298
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4845877
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4803821
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4840708
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4842906
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
WE GOT REWARDS:  59
BAD DOOR
predicted q value [1.0019238]
actual q value 0.9787937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524047
BAD DOOR
predicted q value [1.0019871]
actual q value 0.9704389
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524838
BAD DOOR
predicted q value [1.0018506]
actual q value 0.97072893
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523133
BAD DOOR
predicted q value [1.0019573]
actual q value 0.9784232
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524467
BAD DOOR
predicted q value [1.0019573]
actual q value 0.97955805
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524467
BAD DOOR
predicted q value [1.0019219]
actual q value 0.97567683
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524023
BAD DOOR
predicted q value [1.0019035]
actual q value 0.98162955
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523794
BAD DOOR
predicted q value [1.0018904]
actual q value 0.9761868
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.252363
BAD DOOR
predicted q value [1.0019253]
actual q value 0.9785337
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524067
BAD DOOR
predicted q value [1.0018402]
actual q value 0.96930975
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523003
BAD DOOR
predicted q value [1.0018402]
actual q value 0.9729058
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523003
BAD DOOR
predicted q value [1.0018895]
actual q value 0.9798003
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523619
BAD DOOR
predicted q value [1.0018672]
actual q value 0.9781707
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.252334
BAD DOOR
predicted q value [1.0018513]
actual q value 0.9788986
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523142
BAD DOOR
predicted q value [1.0019617]
actual q value 0.9796801
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524521
BAD DOOR
predicted q value [1.0019617]
actual q value 0.9722493
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524521
BAD DOOR
predicted q value [1.0019617]
actual q value 0.97890943
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524521
BAD DOOR
predicted q value [1.0019617]
actual q value 0.9778343
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2524521
BAD DOOR
predicted q value [1.001893]
actual q value 0.98005646
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2523663
BAD DOOR
predicted q value [1.0018382]
actual q value 0.97886425
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2522978
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.482532
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4816679
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4814541
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4820656
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.48142
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4825993
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4829204
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4806973
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.482833
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4812006
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.482247
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4808536
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4809368
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4788646
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4811442
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4818567
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4805845
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  64
BAD DOOR
predicted q value [1.0272691]
actual q value 1.0166796
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2840865
BAD DOOR
predicted q value [1.0271934]
actual q value 1.0031364
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2839918
BAD DOOR
predicted q value [1.0258691]
actual q value 1.0185115
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2823364
BAD DOOR
predicted q value [1.0275437]
actual q value 1.0161195
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2844296
BAD DOOR
predicted q value [1.0275437]
actual q value 1.0066565
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2844296
BAD DOOR
predicted q value [1.0272312]
actual q value 1.0141655
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.284039
BAD DOOR
predicted q value [1.0268834]
actual q value 1.0092852
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2836043
BAD DOOR
predicted q value [1.0266318]
actual q value 1.0096142
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2832898
BAD DOOR
predicted q value [1.0272982]
actual q value 1.0193764
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2841228
BAD DOOR
predicted q value [1.0256717]
actual q value 1.0080075
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2820897
BAD DOOR
predicted q value [1.0256717]
actual q value 1.0199199
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2820897
BAD DOOR
predicted q value [1.026613]
actual q value 1.0171336
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2832663
BAD DOOR
predicted q value [1.0261885]
actual q value 1.019806
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2827356
BAD DOOR
predicted q value [1.0258858]
actual q value 1.0174677
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2823573
BAD DOOR
predicted q value [1.0274932]
actual q value 1.0075345
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2843666
BAD DOOR
predicted q value [1.0274932]
actual q value 1.0081134
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2843666
BAD DOOR
predicted q value [1.0274932]
actual q value 1.011674
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2843666
BAD DOOR
predicted q value [1.0274932]
actual q value 1.012798
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2843666
BAD DOOR
predicted q value [1.0266807]
actual q value 1.0017995
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.283351
BAD DOOR
predicted q value [1.0256335]
actual q value 1.0239295
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.2820418
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4904069
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4907539
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4836541
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4905941
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4908537
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4903799
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.487409
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4911437
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4882565
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4909415
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4905213
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.491081
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4831548
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4811548
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4909642
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4840429
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4828147
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4909612
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4905505
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  69
BAD DOOR
predicted q value [1.0482887]
actual q value 1.0380306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3103609
BAD DOOR
predicted q value [1.0499718]
actual q value 1.0395135
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3124647
BAD DOOR
predicted q value [1.0463417]
actual q value 1.033327
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3079271
BAD DOOR
predicted q value [1.0491811]
actual q value 1.0396619
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3114763
BAD DOOR
predicted q value [1.0491811]
actual q value 1.0395551
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3114763
BAD DOOR
predicted q value [1.0482358]
actual q value 1.0302719
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3102947
BAD DOOR
predicted q value [1.0477524]
actual q value 1.0372479
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3096905
BAD DOOR
predicted q value [1.0474025]
actual q value 1.0363122
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3092531
BAD DOOR
predicted q value [1.0483291]
actual q value 1.03812
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3104113
BAD DOOR
predicted q value [1.0460675]
actual q value 1.0338229
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3075843
BAD DOOR
predicted q value [1.0460675]
actual q value 1.0360801
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3075843
BAD DOOR
predicted q value [1.0473762]
actual q value 1.0423075
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3092202
BAD DOOR
predicted q value [1.0467858]
actual q value 1.0374306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3084823
BAD DOOR
predicted q value [1.0463653]
actual q value 1.0344728
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3079566
BAD DOOR
predicted q value [1.0492948]
actual q value 1.0397875
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3116186
BAD DOOR
predicted q value [1.0492948]
actual q value 1.0396668
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3116186
BAD DOOR
predicted q value [1.0492948]
actual q value 1.0398359
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3116186
BAD DOOR
predicted q value [1.0492948]
actual q value 1.0362376
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3116186
BAD DOOR
predicted q value [1.0474706]
actual q value 1.0317371
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3093382
BAD DOOR
predicted q value [1.0460142]
actual q value 1.0415287
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3075178
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4830923
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4841827
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4821138
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4836807
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4844956
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4830071
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.482602
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4854077
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.482712
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4847726
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4834517
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4852104
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4820487
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4817886
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4848435
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4821641
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4820046
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4848342
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4835432
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4846816
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  74
BAD DOOR
predicted q value [1.0576237]
actual q value 1.0615842
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3220297
BAD DOOR
predicted q value [1.0594057]
actual q value 1.0662948
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3242571
BAD DOOR
predicted q value [1.0555626]
actual q value 1.0451615
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3194532
BAD DOOR
predicted q value [1.0585686]
actual q value 1.0601177
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3232107
BAD DOOR
predicted q value [1.0585686]
actual q value 1.0554777
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3232107
BAD DOOR
predicted q value [1.0575677]
actual q value 1.0541669
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3219596
BAD DOOR
predicted q value [1.057056]
actual q value 1.0576516
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3213199
BAD DOOR
predicted q value [1.0566854]
actual q value 1.056857
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3208568
BAD DOOR
predicted q value [1.0576665]
actual q value 1.0620553
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3220832
BAD DOOR
predicted q value [1.0552722]
actual q value 1.0658495
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3190902
BAD DOOR
predicted q value [1.0552722]
actual q value 1.0465248
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3190902
BAD DOOR
predicted q value [1.0566578]
actual q value 1.0601541
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3208222
BAD DOOR
predicted q value [1.0560328]
actual q value 1.0538747
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.320041
BAD DOOR
predicted q value [1.0555875]
actual q value 1.0570807
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3194844
BAD DOOR
predicted q value [1.0586889]
actual q value 1.055108
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3233612
BAD DOOR
predicted q value [1.0586889]
actual q value 1.0696876
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3233612
BAD DOOR
predicted q value [1.0586889]
actual q value 1.0576485
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3233612
BAD DOOR
predicted q value [1.0586889]
actual q value 1.0611281
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3233612
BAD DOOR
predicted q value [1.0567577]
actual q value 1.0531969
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.320947
BAD DOOR
predicted q value [1.055216]
actual q value 1.0589744
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3190199
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5225049
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5255086
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5206938
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5238725
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5266614
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5223072
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5213655
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5271455
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5216213
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5276816
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5233405
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5265216
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5206331
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5203909
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5273772
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5207407
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5205921
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5274273
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5235529
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.527347
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  79
BAD DOOR
predicted q value [1.0643804]
actual q value 1.0653396
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3304754
BAD DOOR
predicted q value [1.0668511]
actual q value 1.0451996
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3335639
BAD DOOR
predicted q value [1.0615222]
actual q value 1.060052
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3269027
BAD DOOR
predicted q value [1.0656904]
actual q value 1.0637307
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.332113
BAD DOOR
predicted q value [1.0656904]
actual q value 1.0579237
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.332113
BAD DOOR
predicted q value [1.0643027]
actual q value 1.0611348
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3303783
BAD DOOR
predicted q value [1.0635928]
actual q value 1.0554819
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.329491
BAD DOOR
predicted q value [1.0630794]
actual q value 1.0601853
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3288492
BAD DOOR
predicted q value [1.0644395]
actual q value 1.0667306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3305495
BAD DOOR
predicted q value [1.0611193]
actual q value 1.0580125
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3263992
BAD DOOR
predicted q value [1.0611193]
actual q value 1.0617402
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3263992
BAD DOOR
predicted q value [1.0630409]
actual q value 1.0560658
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.328801
BAD DOOR
predicted q value [1.0621741]
actual q value 1.0622411
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3277175
BAD DOOR
predicted q value [1.0615566]
actual q value 1.0643425
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3269458
BAD DOOR
predicted q value [1.0658572]
actual q value 1.0591565
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3323215
BAD DOOR
predicted q value [1.0658572]
actual q value 1.0514933
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3323215
BAD DOOR
predicted q value [1.0658572]
actual q value 1.0618383
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3323215
BAD DOOR
predicted q value [1.0658572]
actual q value 1.0667865
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3323215
BAD DOOR
predicted q value [1.0631793]
actual q value 1.0567594
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.328974
BAD DOOR
predicted q value [1.0610412]
actual q value 1.0669957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3263016
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073565
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074939
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5072331
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074307
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5075605
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073457
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5072947
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5079335
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073084
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5064229
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074017
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073563
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5072248
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.507192
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5062822
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5072396
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5072194
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5062543
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074133
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.507114
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  84
BAD DOOR
predicted q value [1.0833632]
actual q value 1.0729756
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3542039
BAD DOOR
predicted q value [1.0864575]
actual q value 1.0704608
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3580718
BAD DOOR
predicted q value [1.0797839]
actual q value 1.0778806
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3497299
BAD DOOR
predicted q value [1.0850037]
actual q value 1.0711292
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3562547
BAD DOOR
predicted q value [1.0850037]
actual q value 1.0770249
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3562547
BAD DOOR
predicted q value [1.0832658]
actual q value 1.0760391
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3540822
BAD DOOR
predicted q value [1.082377]
actual q value 1.0700146
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3529712
BAD DOOR
predicted q value [1.0817338]
actual q value 1.0727353
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3521672
BAD DOOR
predicted q value [1.0834373]
actual q value 1.073451
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3542967
BAD DOOR
predicted q value [1.0792817]
actual q value 1.0728304
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3491021
BAD DOOR
predicted q value [1.0792817]
actual q value 1.0800833
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3491021
BAD DOOR
predicted q value [1.0816855]
actual q value 1.0772717
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3521069
BAD DOOR
predicted q value [1.0806]
actual q value 1.0797925
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.35075
BAD DOOR
predicted q value [1.079827]
actual q value 1.0755918
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3497837
BAD DOOR
predicted q value [1.0852127]
actual q value 1.0724502
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3565159
BAD DOOR
predicted q value [1.0852127]
actual q value 1.0690507
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3565159
BAD DOOR
predicted q value [1.0852127]
actual q value 1.0720415
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3565159
BAD DOOR
predicted q value [1.0852127]
actual q value 1.0721393
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3565159
BAD DOOR
predicted q value [1.081859]
actual q value 1.0595822
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3523238
BAD DOOR
predicted q value [1.0791873]
actual q value 1.0813179
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3489841
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5130831
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5151751
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5076722
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5163368
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5141699
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5126126
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103717
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.514384
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.510981
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5133846
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5150709
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5147045
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073131
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5061322
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5135987
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5079515
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5070686
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5135702
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5155764
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5135722
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  89
BAD DOOR
predicted q value [1.0936722]
actual q value 1.0803405
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3670902
BAD DOOR
predicted q value [1.096693]
actual q value 1.0770874
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3708663
BAD DOOR
predicted q value [1.0902954]
actual q value 1.0745169
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3628693
BAD DOOR
predicted q value [1.0952737]
actual q value 1.079259
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3690922
BAD DOOR
predicted q value [1.0952737]
actual q value 1.0766902
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3690922
BAD DOOR
predicted q value [1.0935771]
actual q value 1.0757425
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3669715
BAD DOOR
predicted q value [1.0927353]
actual q value 1.0834272
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3659191
BAD DOOR
predicted q value [1.0921301]
actual q value 1.079756
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3651626
BAD DOOR
predicted q value [1.0937446]
actual q value 1.0829709
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3671808
BAD DOOR
predicted q value [1.0898206]
actual q value 1.0828011
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3622758
BAD DOOR
predicted q value [1.0898206]
actual q value 1.0754089
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3622758
BAD DOOR
predicted q value [1.0920848]
actual q value 1.0958116
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.365106
BAD DOOR
predicted q value [1.0910635]
actual q value 1.0779709
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3638294
BAD DOOR
predicted q value [1.090336]
actual q value 1.0834091
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3629199
BAD DOOR
predicted q value [1.0954778]
actual q value 1.0753849
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3693473
BAD DOOR
predicted q value [1.0954778]
actual q value 1.077782
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3693473
BAD DOOR
predicted q value [1.0954778]
actual q value 1.0735803
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3693473
BAD DOOR
predicted q value [1.0954778]
actual q value 1.0828674
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3693473
BAD DOOR
predicted q value [1.092248]
actual q value 1.0688705
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.36531
BAD DOOR
predicted q value [1.0897286]
actual q value 1.0827239
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3621608
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028412
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030658
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027635
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032246
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037682
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028346
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028024
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.505816
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028112
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043899
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028698
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5053732
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027584
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027376
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5045493
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027676
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027548
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504528
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5029509
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041859
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  94
BAD DOOR
predicted q value [1.100406]
actual q value 1.0802364
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3755076
BAD DOOR
predicted q value [1.1038351]
actual q value 1.0697833
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3797939
BAD DOOR
predicted q value [1.0964605]
actual q value 1.079754
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3705755
BAD DOOR
predicted q value [1.1022146]
actual q value 1.0814505
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3777683
BAD DOOR
predicted q value [1.1022146]
actual q value 1.0745497
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3777683
BAD DOOR
predicted q value [1.1002988]
actual q value 1.0797713
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3753735
BAD DOOR
predicted q value [1.0993191]
actual q value 1.0768487
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3741488
BAD DOOR
predicted q value [1.0986099]
actual q value 1.0733845
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3732624
BAD DOOR
predicted q value [1.100488]
actual q value 1.0849711
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3756099
BAD DOOR
predicted q value [1.0959042]
actual q value 1.0673472
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3698803
BAD DOOR
predicted q value [1.0959042]
actual q value 1.0799496
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3698803
BAD DOOR
predicted q value [1.0985568]
actual q value 1.0907423
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3731959
BAD DOOR
predicted q value [1.0973603]
actual q value 1.0817795
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3717003
BAD DOOR
predicted q value [1.0965079]
actual q value 1.0811613
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3706349
BAD DOOR
predicted q value [1.102445]
actual q value 1.0787289
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3780563
BAD DOOR
predicted q value [1.102445]
actual q value 1.0696888
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3780563
BAD DOOR
predicted q value [1.102445]
actual q value 1.0777962
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3780563
BAD DOOR
predicted q value [1.102445]
actual q value 1.081846
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3780563
BAD DOOR
predicted q value [1.098748]
actual q value 1.0595236
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.373435
BAD DOOR
predicted q value [1.0957963]
actual q value 1.0866094
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3697455
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5061057
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021453
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5063282
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5006132
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031002
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.506904
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5071129
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5058837
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073103
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039451
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027316
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5052818
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.506264
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5060067
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041621
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5063783
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5062202
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041331
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018737
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036681
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  99
BAD DOOR
predicted q value [1.1163815]
actual q value 1.1033905
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3954769
BAD DOOR
predicted q value [1.1204207]
actual q value 1.1035298
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4005258
BAD DOOR
predicted q value [1.1117092]
actual q value 1.0840213
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3896365
BAD DOOR
predicted q value [1.118523]
actual q value 1.0977004
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3981538
BAD DOOR
predicted q value [1.118523]
actual q value 1.1737815
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3981538
BAD DOOR
predicted q value [1.1162546]
actual q value 1.1098254
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3953183
BAD DOOR
predicted q value [1.1150943]
actual q value 1.1039033
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3938679
BAD DOOR
predicted q value [1.1142547]
actual q value 1.149965
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3928185
BAD DOOR
predicted q value [1.1164784]
actual q value 1.1019413
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.395598
BAD DOOR
predicted q value [1.1110508]
actual q value 1.1077864
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3888135
BAD DOOR
predicted q value [1.1110508]
actual q value 1.0782061
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3888135
BAD DOOR
predicted q value [1.1141918]
actual q value 1.1071577
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3927398
BAD DOOR
predicted q value [1.1127748]
actual q value 1.1038902
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3909686
BAD DOOR
predicted q value [1.1117655]
actual q value 1.1131728
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3897069
BAD DOOR
predicted q value [1.118796]
actual q value 1.142956
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.398495
BAD DOOR
predicted q value [1.118796]
actual q value 1.1027569
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.398495
BAD DOOR
predicted q value [1.118796]
actual q value 1.0980583
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.398495
BAD DOOR
predicted q value [1.118796]
actual q value 1.0940853
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.398495
BAD DOOR
predicted q value [1.1144181]
actual q value 1.10379
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3930227
BAD DOOR
predicted q value [1.110923]
actual q value 1.1091568
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3886538
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5131409
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5136056
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103345
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5133917
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5137389
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5131047
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5127966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5141274
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.512979
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5138566
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5132941
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5140436
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5101085
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5097337
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.513887
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5105894
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5100448
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5138829
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5133331
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.513818
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  104
BAD DOOR
predicted q value [1.1254909]
actual q value 1.1204263
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4068636
BAD DOOR
predicted q value [1.1300845]
actual q value 1.1158952
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4126056
BAD DOOR
predicted q value [1.1201773]
actual q value 1.108556
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4002216
BAD DOOR
predicted q value [1.1279265]
actual q value 1.1152148
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.409908
BAD DOOR
predicted q value [1.1279265]
actual q value 1.1103928
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.409908
BAD DOOR
predicted q value [1.1253464]
actual q value 1.1157306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4066831
BAD DOOR
predicted q value [1.1240269]
actual q value 1.1235946
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4050336
BAD DOOR
predicted q value [1.123072]
actual q value 1.119071
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4038401
BAD DOOR
predicted q value [1.125601]
actual q value 1.1195159
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4070014
BAD DOOR
predicted q value [1.1194376]
actual q value 1.1166213
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.399297
BAD DOOR
predicted q value [1.1194376]
actual q value 1.1033509
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.399297
BAD DOOR
predicted q value [1.1230004]
actual q value 1.1274195
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4037505
BAD DOOR
predicted q value [1.1213892]
actual q value 1.1231802
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4017364
BAD DOOR
predicted q value [1.1202412]
actual q value 1.1326735
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4003015
BAD DOOR
predicted q value [1.1282368]
actual q value 1.1155113
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.410296
BAD DOOR
predicted q value [1.1282368]
actual q value 1.108958
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.410296
BAD DOOR
predicted q value [1.1282368]
actual q value 1.116018
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.410296
BAD DOOR
predicted q value [1.1282368]
actual q value 1.1130481
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.410296
BAD DOOR
predicted q value [1.1232579]
actual q value 1.1238346
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4040724
BAD DOOR
predicted q value [1.1193417]
actual q value 1.1276995
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.3991772
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.511502
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.510251
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5109595
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.510186
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5102918
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.511455
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5112302
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5104102
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5112914
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103278
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5111587
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103846
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5109234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5107796
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103369
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5109878
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5108991
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103358
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5106008
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103158
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  109
BAD DOOR
predicted q value [1.14323]
actual q value 1.1327813
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4290375
BAD DOOR
predicted q value [1.1484954]
actual q value 1.1395321
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4356194
BAD DOOR
predicted q value [1.1377418]
actual q value 1.1195222
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4221772
BAD DOOR
predicted q value [1.145787]
actual q value 1.1286497
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4322337
BAD DOOR
predicted q value [1.145787]
actual q value 1.1167436
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4322337
BAD DOOR
predicted q value [1.1430807]
actual q value 1.1309775
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4288509
BAD DOOR
predicted q value [1.1417179]
actual q value 1.1357884
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4271474
BAD DOOR
predicted q value [1.1407316]
actual q value 1.1259475
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4259145
BAD DOOR
predicted q value [1.1433437]
actual q value 1.1324468
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4291797
BAD DOOR
predicted q value [1.1369684]
actual q value 1.13641
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4212104
BAD DOOR
predicted q value [1.1369684]
actual q value 1.1175306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4212104
BAD DOOR
predicted q value [1.1406577]
actual q value 1.1395051
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4258221
BAD DOOR
predicted q value [1.1389934]
actual q value 1.1372719
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4237417
BAD DOOR
predicted q value [1.1378078]
actual q value 1.1372879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4222598
BAD DOOR
predicted q value [1.1461763]
actual q value 1.125655
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4327204
BAD DOOR
predicted q value [1.1461763]
actual q value 1.1353035
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4327204
BAD DOOR
predicted q value [1.1461763]
actual q value 1.1270362
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4327204
BAD DOOR
predicted q value [1.1461763]
actual q value 1.1275576
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4327204
BAD DOOR
predicted q value [1.1409237]
actual q value 1.1362581
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4261546
BAD DOOR
predicted q value [1.1368182]
actual q value 1.1411014
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4210228
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4743847
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4786706
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.467381
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4776871
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4770708
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4737757
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4708753
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.472408
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.471664
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4756553
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4767629
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4734162
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.46721
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.467096
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4752921
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4677426
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4671906
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4753406
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4771317
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4761196
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  114
BAD DOOR
predicted q value [1.1455293]
actual q value 1.1416832
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4319116
BAD DOOR
predicted q value [1.1514237]
actual q value 1.1362321
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4392796
BAD DOOR
predicted q value [1.1387112]
actual q value 1.1287411
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.423389
BAD DOOR
predicted q value [1.1486546]
actual q value 1.150178
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4358182
BAD DOOR
predicted q value [1.1486546]
actual q value 1.1369543
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4358182
BAD DOOR
predicted q value [1.145344]
actual q value 1.1324937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.43168
BAD DOOR
predicted q value [1.1436508]
actual q value 1.1334338
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4295635
BAD DOOR
predicted q value [1.1424257]
actual q value 1.1382043
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.428032
BAD DOOR
predicted q value [1.1456707]
actual q value 1.1437774
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4320884
BAD DOOR
predicted q value [1.1377503]
actual q value 1.131573
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4221878
BAD DOOR
predicted q value [1.1377503]
actual q value 1.1292026
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4221878
BAD DOOR
predicted q value [1.1423336]
actual q value 1.1347766
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.427917
BAD DOOR
predicted q value [1.1402662]
actual q value 1.1307395
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4253327
BAD DOOR
predicted q value [1.1387932]
actual q value 1.1295502
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4234916
BAD DOOR
predicted q value [1.1490527]
actual q value 1.1340493
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4363159
BAD DOOR
predicted q value [1.1490527]
actual q value 1.1400695
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4363159
BAD DOOR
predicted q value [1.1490527]
actual q value 1.1485604
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4363159
BAD DOOR
predicted q value [1.1490527]
actual q value 1.1373395
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4363159
BAD DOOR
predicted q value [1.1426642]
actual q value 1.1316718
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4283302
BAD DOOR
predicted q value [1.1375637]
actual q value 1.1312585
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4219546
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031518
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046012
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018513
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039339
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5050172
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030388
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025002
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5062295
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026464
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5053852
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036297
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5059676
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017649
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014193
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054798
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019183
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017061
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.505467
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037512
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5052645
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  119
BAD DOOR
predicted q value [1.1468737]
actual q value 1.1455141
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4335922
BAD DOOR
predicted q value [1.1560408]
actual q value 1.1485646
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.445051
BAD DOOR
predicted q value [1.1395357]
actual q value 1.1243919
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4244196
BAD DOOR
predicted q value [1.1517341]
actual q value 1.1494904
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4396676
BAD DOOR
predicted q value [1.1517341]
actual q value 1.1488887
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4396676
BAD DOOR
predicted q value [1.1465855]
actual q value 1.131758
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4332318
BAD DOOR
predicted q value [1.1439521]
actual q value 1.1353737
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4299401
BAD DOOR
predicted q value [1.1420467]
actual q value 1.1401851
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4275583
BAD DOOR
predicted q value [1.1470935]
actual q value 1.146647
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.433867
BAD DOOR
predicted q value [1.1396737]
actual q value 1.133215
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4245921
BAD DOOR
predicted q value [1.1396737]
actual q value 1.1241086
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4245921
BAD DOOR
predicted q value [1.1419036]
actual q value 1.132314
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4273796
BAD DOOR
predicted q value [1.1393124]
actual q value 1.1284467
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4241405
BAD DOOR
predicted q value [1.1395239]
actual q value 1.1339586
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4244049
BAD DOOR
predicted q value [1.1523533]
actual q value 1.1453795
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4404416
BAD DOOR
predicted q value [1.1523533]
actual q value 1.1493139
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4404416
BAD DOOR
predicted q value [1.1523533]
actual q value 1.1445057
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4404416
BAD DOOR
predicted q value [1.1523533]
actual q value 1.1369456
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4404416
BAD DOOR
predicted q value [1.1424176]
actual q value 1.133707
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4280219
BAD DOOR
predicted q value [1.1397007]
actual q value 1.1278133
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4246258
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994756
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499378
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995633
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994228
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.49935
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994833
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995196
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4964582
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995097
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499325
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994434
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979475
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995692
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995925
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993186
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995588
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995731
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993196
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994352
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993331
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  124
BAD DOOR
predicted q value [1.1535274]
actual q value 1.1779777
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4419092
BAD DOOR
predicted q value [1.1706222]
actual q value 1.1820762
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4632778
BAD DOOR
predicted q value [1.1483718]
actual q value 1.1582947
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4354647
BAD DOOR
predicted q value [1.162591]
actual q value 1.1792533
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4532387
BAD DOOR
predicted q value [1.162591]
actual q value 1.1709777
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4532387
BAD DOOR
predicted q value [1.1529897]
actual q value 1.1699826
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4412372
BAD DOOR
predicted q value [1.1499398]
actual q value 1.1551682
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4374248
BAD DOOR
predicted q value [1.1489649]
actual q value 1.1612903
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4362061
BAD DOOR
predicted q value [1.1539376]
actual q value 1.1766298
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.442422
BAD DOOR
predicted q value [1.1485542]
actual q value 1.1570346
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4356928
BAD DOOR
predicted q value [1.1485542]
actual q value 1.1584384
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4356928
BAD DOOR
predicted q value [1.1488919]
actual q value 1.1567492
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4361149
BAD DOOR
predicted q value [1.1480767]
actual q value 1.1654071
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4350958
BAD DOOR
predicted q value [1.1483562]
actual q value 1.1585337
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4354453
BAD DOOR
predicted q value [1.1637459]
actual q value 1.1864583
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4546824
BAD DOOR
predicted q value [1.1637459]
actual q value 1.1760131
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4546824
BAD DOOR
predicted q value [1.1637459]
actual q value 1.1808681
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4546824
BAD DOOR
predicted q value [1.1637459]
actual q value 1.1759684
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4546824
BAD DOOR
predicted q value [1.1491548]
actual q value 1.152446
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4364434
BAD DOOR
predicted q value [1.1485897]
actual q value 1.1640072
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4357371
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5115294
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5116596
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5114123
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5115995
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5116969
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.511519
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5114708
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.511806
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5114838
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.51173
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5115721
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5117824
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5114045
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5113735
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5117385
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5114183
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5113994
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5117373
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5115832
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5117191
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  129
BAD DOOR
predicted q value [1.1539494]
actual q value 1.1627998
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4424367
BAD DOOR
predicted q value [1.1714875]
actual q value 1.1749159
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4643593
BAD DOOR
predicted q value [1.1537582]
actual q value 1.1296961
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4421977
BAD DOOR
predicted q value [1.1636178]
actual q value 1.1832715
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4545224
BAD DOOR
predicted q value [1.1636178]
actual q value 1.1586846
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4545224
BAD DOOR
predicted q value [1.1537545]
actual q value 1.1506265
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.442193
BAD DOOR
predicted q value [1.1536196]
actual q value 1.1548293
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4420246
BAD DOOR
predicted q value [1.153654]
actual q value 1.1515735
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4420675
BAD DOOR
predicted q value [1.1540983]
actual q value 1.1636063
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4426229
BAD DOOR
predicted q value [1.153785]
actual q value 1.1534575
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4422312
BAD DOOR
predicted q value [1.153785]
actual q value 1.1293628
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4422312
BAD DOOR
predicted q value [1.1536566]
actual q value 1.1545243
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4420707
BAD DOOR
predicted q value [1.1537145]
actual q value 1.1366928
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4421432
BAD DOOR
predicted q value [1.1537558]
actual q value 1.1407137
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4421947
BAD DOOR
predicted q value [1.164902]
actual q value 1.1537597
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4561274
BAD DOOR
predicted q value [1.164902]
actual q value 1.1716393
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4561274
BAD DOOR
predicted q value [1.164902]
actual q value 1.1706412
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4561274
BAD DOOR
predicted q value [1.164902]
actual q value 1.1672394
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4561274
BAD DOOR
predicted q value [1.1536472]
actual q value 1.1529523
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.442059
BAD DOOR
predicted q value [1.1537902]
actual q value 1.136049
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4422377
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4928063
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4925218
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4930619
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4926528
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.49244
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4928286
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4929343
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4922018
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4929057
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4923677
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4927125
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4922533
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.493079
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4931468
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4923491
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4930487
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4930903
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4923515
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4926887
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4923915
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  134
BAD DOOR
predicted q value [1.1619927]
actual q value 1.1366227
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4524908
BAD DOOR
predicted q value [1.1649618]
actual q value 1.1477127
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4562023
BAD DOOR
predicted q value [1.1600914]
actual q value 1.1201216
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4501143
BAD DOOR
predicted q value [1.1626399]
actual q value 1.1378508
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4532998
BAD DOOR
predicted q value [1.1626399]
actual q value 1.1432457
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4532998
BAD DOOR
predicted q value [1.1619409]
actual q value 1.1287134
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4524262
BAD DOOR
predicted q value [1.1614687]
actual q value 1.1403762
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4518359
BAD DOOR
predicted q value [1.1611271]
actual q value 1.1374669
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4514089
BAD DOOR
predicted q value [1.1620321]
actual q value 1.1351955
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4525402
BAD DOOR
predicted q value [1.1598235]
actual q value 1.1339314
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4497794
BAD DOOR
predicted q value [1.1598235]
actual q value 1.1197467
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4497794
BAD DOOR
predicted q value [1.1611016]
actual q value 1.1391246
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4513769
BAD DOOR
predicted q value [1.1605251]
actual q value 1.1247194
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4506563
BAD DOOR
predicted q value [1.1601143]
actual q value 1.1337249
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4501429
BAD DOOR
predicted q value [1.1628225]
actual q value 1.1432531
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4535282
BAD DOOR
predicted q value [1.1628225]
actual q value 1.1450036
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4535282
BAD DOOR
predicted q value [1.1628225]
actual q value 1.1474679
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4535282
BAD DOOR
predicted q value [1.1628225]
actual q value 1.1347039
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4535282
BAD DOOR
predicted q value [1.1611936]
actual q value 1.139185
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4514921
BAD DOOR
predicted q value [1.1597714]
actual q value 1.1238465
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4497143
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027618
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030804
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502476
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5029337
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031719
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502737
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026188
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034386
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502651
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032527
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502867
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503381
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024569
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023808
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032737
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024908
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502444
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032709
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028936
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032263
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  139
BAD DOOR
predicted q value [1.1677034]
actual q value 1.1769563
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4596293
BAD DOOR
predicted q value [1.1653264]
actual q value 1.1762307
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4566579
BAD DOOR
predicted q value [1.1652691]
actual q value 1.1687527
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4565864
BAD DOOR
predicted q value [1.1667719]
actual q value 1.1764727
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4584649
BAD DOOR
predicted q value [1.1667719]
actual q value 1.1704408
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4584649
BAD DOOR
predicted q value [1.1676205]
actual q value 1.1717356
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4595257
BAD DOOR
predicted q value [1.1668646]
actual q value 1.1709667
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4585807
BAD DOOR
predicted q value [1.1663178]
actual q value 1.1664999
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4578973
BAD DOOR
predicted q value [1.1677665]
actual q value 1.175941
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4597081
BAD DOOR
predicted q value [1.1651287]
actual q value 1.1652484
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4564109
BAD DOOR
predicted q value [1.1651287]
actual q value 1.1689032
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4564109
BAD DOOR
predicted q value [1.1662767]
actual q value 1.1726207
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4578458
BAD DOOR
predicted q value [1.1654963]
actual q value 1.1711825
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4568704
BAD DOOR
predicted q value [1.165281]
actual q value 1.1626154
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4566014
BAD DOOR
predicted q value [1.166564]
actual q value 1.1699227
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.458205
BAD DOOR
predicted q value [1.166564]
actual q value 1.1736468
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.458205
BAD DOOR
predicted q value [1.166564]
actual q value 1.1801018
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.458205
BAD DOOR
predicted q value [1.166564]
actual q value 1.1741983
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.458205
BAD DOOR
predicted q value [1.1664243]
actual q value 1.1695701
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4580303
BAD DOOR
predicted q value [1.1651014]
actual q value 1.1717273
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4563768
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018249
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022993
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013987
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020809
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024354
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017877
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016112
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028328
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016592
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025561
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501981
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027468
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013704
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012574
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025871
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014207
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013514
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502583
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502021
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025166
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  144
BAD DOOR
predicted q value [1.1784545]
actual q value 1.1862957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4730681
BAD DOOR
predicted q value [1.175679]
actual q value 1.1822529
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4695987
BAD DOOR
predicted q value [1.1779331]
actual q value 1.1793656
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4724164
BAD DOOR
predicted q value [1.1769828]
actual q value 1.1881945
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4712285
BAD DOOR
predicted q value [1.1769828]
actual q value 1.1843295
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4712285
BAD DOOR
predicted q value [1.1785418]
actual q value 1.1896089
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4731772
BAD DOOR
predicted q value [1.1793392]
actual q value 1.175328
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4741739
BAD DOOR
predicted q value [1.1792457]
actual q value 1.1807505
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4740572
BAD DOOR
predicted q value [1.1783879]
actual q value 1.1884965
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4729848
BAD DOOR
predicted q value [1.1775945]
actual q value 1.1765139
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719932
BAD DOOR
predicted q value [1.1775945]
actual q value 1.1801925
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719932
BAD DOOR
predicted q value [1.1792133]
actual q value 1.175085
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4740167
BAD DOOR
predicted q value [1.1784827]
actual q value 1.188631
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4731033
BAD DOOR
predicted q value [1.1779622]
actual q value 1.1801046
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4724528
BAD DOOR
predicted q value [1.1767954]
actual q value 1.1852579
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709942
BAD DOOR
predicted q value [1.1767954]
actual q value 1.1818749
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709942
BAD DOOR
predicted q value [1.1767954]
actual q value 1.1866195
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709942
BAD DOOR
predicted q value [1.1767954]
actual q value 1.1931477
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709942
BAD DOOR
predicted q value [1.1793301]
actual q value 1.174651
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4741626
BAD DOOR
predicted q value [1.1775309]
actual q value 1.1914386
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719136
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999202
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985703
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011318
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991919
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498183
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000257
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005274
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4970536
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003908
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4978402
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994752
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497298
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012121
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015339
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977522
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5010691
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012667
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977639
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499362
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979526
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  149
BAD DOOR
predicted q value [1.1713282]
actual q value 1.1725199
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4641602
BAD DOOR
predicted q value [1.1693753]
actual q value 1.1746755
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4617192
BAD DOOR
predicted q value [1.1706325]
actual q value 1.1642306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4632906
BAD DOOR
predicted q value [1.1702927]
actual q value 1.1742008
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.462866
BAD DOOR
predicted q value [1.1702927]
actual q value 1.173752
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.462866
BAD DOOR
predicted q value [1.1713896]
actual q value 1.1746573
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.464237
BAD DOOR
predicted q value [1.1719506]
actual q value 1.1701677
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4649382
BAD DOOR
predicted q value [1.1723564]
actual q value 1.1704355
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4654455
BAD DOOR
predicted q value [1.1712812]
actual q value 1.1743189
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4641016
BAD DOOR
predicted q value [1.1694977]
actual q value 1.1677134
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4618721
BAD DOOR
predicted q value [1.1694977]
actual q value 1.1650712
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4618721
BAD DOOR
predicted q value [1.1723869]
actual q value 1.1695435
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4654837
BAD DOOR
predicted q value [1.1724758]
actual q value 1.1736591
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4655948
BAD DOOR
predicted q value [1.1707293]
actual q value 1.1687181
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4634116
BAD DOOR
predicted q value [1.1701609]
actual q value 1.1740689
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627011
BAD DOOR
predicted q value [1.1701609]
actual q value 1.1735609
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627011
BAD DOOR
predicted q value [1.1701609]
actual q value 1.1742735
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627011
BAD DOOR
predicted q value [1.1701609]
actual q value 1.1783271
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627011
BAD DOOR
predicted q value [1.1722775]
actual q value 1.1696258
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4653468
BAD DOOR
predicted q value [1.1692774]
actual q value 1.1765144
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4615968
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5128145
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5116833
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5138295
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5122042
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.511359
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5129027
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5133231
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5104127
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5132086
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5110718
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5124415
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5106173
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5138967
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5141664
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5109981
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5137769
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5139425
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5110078
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5123467
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5111659
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  154
BAD DOOR
predicted q value [1.1675946]
actual q value 1.1620432
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4594932
BAD DOOR
predicted q value [1.1660408]
actual q value 1.1679314
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.457551
BAD DOOR
predicted q value [1.1688426]
actual q value 1.1556032
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4610531
BAD DOOR
predicted q value [1.1667707]
actual q value 1.163567
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4584634
BAD DOOR
predicted q value [1.1667707]
actual q value 1.1649001
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4584634
BAD DOOR
predicted q value [1.1676433]
actual q value 1.1638262
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4595542
BAD DOOR
predicted q value [1.1680896]
actual q value 1.1661704
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4601121
BAD DOOR
predicted q value [1.1684124]
actual q value 1.1617621
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4605156
BAD DOOR
predicted q value [1.167557]
actual q value 1.1619204
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4594463
BAD DOOR
predicted q value [1.1680677]
actual q value 1.1600982
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4600847
BAD DOOR
predicted q value [1.1680677]
actual q value 1.1562729
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4600847
BAD DOOR
predicted q value [1.1684368]
actual q value 1.1669664
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4605459
BAD DOOR
predicted q value [1.1689906]
actual q value 1.1616814
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4612383
BAD DOOR
predicted q value [1.1689086]
actual q value 1.1592894
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611357
BAD DOOR
predicted q value [1.1666658]
actual q value 1.1647887
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4583323
BAD DOOR
predicted q value [1.1666658]
actual q value 1.1662978
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4583323
BAD DOOR
predicted q value [1.1666658]
actual q value 1.1641814
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4583323
BAD DOOR
predicted q value [1.1666658]
actual q value 1.163334
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4583323
BAD DOOR
predicted q value [1.1683495]
actual q value 1.1649996
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4604369
BAD DOOR
predicted q value [1.1679174]
actual q value 1.1569128
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4598967
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994403
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4964974
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502081
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4978522
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4956529
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996699
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007635
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4931911
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004661
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4949056
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984701
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4937234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022563
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502958
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4947138
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019448
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023757
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4947393
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4951506
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  159
BAD DOOR
predicted q value [1.1684704]
actual q value 1.1917843
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.460588
BAD DOOR
predicted q value [1.169275]
actual q value 1.1986912
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4615939
BAD DOOR
predicted q value [1.1810571]
actual q value 1.1914393
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4763213
BAD DOOR
predicted q value [1.1688969]
actual q value 1.1929381
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611212
BAD DOOR
predicted q value [1.1688969]
actual q value 1.1950305
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611212
BAD DOOR
predicted q value [1.168445]
actual q value 1.1968622
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4605563
BAD DOOR
predicted q value [1.1707062]
actual q value 1.1857201
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4633827
BAD DOOR
predicted q value [1.1731663]
actual q value 1.1925718
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4664578
BAD DOOR
predicted q value [1.1684896]
actual q value 1.1915356
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4606119
BAD DOOR
predicted q value [1.1831076]
actual q value 1.1918112
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4788845
BAD DOOR
predicted q value [1.1831076]
actual q value 1.1921536
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4788845
BAD DOOR
predicted q value [1.1733508]
actual q value 1.1896225
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4666885
BAD DOOR
predicted q value [1.1777393]
actual q value 1.197166
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.472174
BAD DOOR
predicted q value [1.1808821]
actual q value 1.190129
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4761026
BAD DOOR
predicted q value [1.1689513]
actual q value 1.1946981
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611892
BAD DOOR
predicted q value [1.1689513]
actual q value 1.1970661
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611892
BAD DOOR
predicted q value [1.1689513]
actual q value 1.193745
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611892
BAD DOOR
predicted q value [1.1689513]
actual q value 1.1981841
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611892
BAD DOOR
predicted q value [1.1726873]
actual q value 1.183234
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4658592
BAD DOOR
predicted q value [1.1835055]
actual q value 1.1994879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4793819
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032978
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011916
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.505188
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021613
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005872
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034621
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5042448
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988254
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040321
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000526
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026033
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992063
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5053133
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5058154
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999151
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5050902
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5053988
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999335
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024271
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002279
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  164
BAD DOOR
predicted q value [1.1794357]
actual q value 1.1989253
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4742947
BAD DOOR
predicted q value [1.1753719]
actual q value 1.1914216
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4692148
BAD DOOR
predicted q value [1.1816293]
actual q value 1.1918302
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4770366
BAD DOOR
predicted q value [1.1786667]
actual q value 1.196375
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733334
BAD DOOR
predicted q value [1.1786667]
actual q value 1.191775
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733334
BAD DOOR
predicted q value [1.1794813]
actual q value 1.1910938
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743516
BAD DOOR
predicted q value [1.1799703]
actual q value 1.1869028
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4749628
BAD DOOR
predicted q value [1.1803818]
actual q value 1.1890051
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4754772
BAD DOOR
predicted q value [1.1794009]
actual q value 1.1950996
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4742512
BAD DOOR
predicted q value [1.1819519]
actual q value 1.1862563
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4774399
BAD DOOR
predicted q value [1.1819519]
actual q value 1.1917692
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4774399
BAD DOOR
predicted q value [1.1804125]
actual q value 1.1865392
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4755157
BAD DOOR
predicted q value [1.181107]
actual q value 1.1911598
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4763838
BAD DOOR
predicted q value [1.1816018]
actual q value 1.1880126
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4770021
BAD DOOR
predicted q value [1.1785686]
actual q value 1.1922543
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4732108
BAD DOOR
predicted q value [1.1785686]
actual q value 1.1907927
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4732108
BAD DOOR
predicted q value [1.1785686]
actual q value 1.1947306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4732108
BAD DOOR
predicted q value [1.1785686]
actual q value 1.1904534
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4732108
BAD DOOR
predicted q value [1.1803017]
actual q value 1.1853491
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4753771
BAD DOOR
predicted q value [1.1820147]
actual q value 1.1909535
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4775183
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000905
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977483
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021923
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988266
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4970763
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002732
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011437
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.495117
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500907
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4964814
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993185
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4955405
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023317
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028903
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4963288
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020839
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024269
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4963491
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991221
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4966764
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  169
BAD DOOR
predicted q value [1.1796579]
actual q value 1.1521502
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4745724
BAD DOOR
predicted q value [1.1785352]
actual q value 1.1517999
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473169
BAD DOOR
predicted q value [1.1815431]
actual q value 1.1157675
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.476929
BAD DOOR
predicted q value [1.1790626]
actual q value 1.1531026
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4738283
BAD DOOR
predicted q value [1.1790626]
actual q value 1.1454098
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4738283
BAD DOOR
predicted q value [1.1796932]
actual q value 1.1397411
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4746165
BAD DOOR
predicted q value [1.1801546]
actual q value 1.1517967
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4751933
BAD DOOR
predicted q value [1.1804988]
actual q value 1.1426371
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4756236
BAD DOOR
predicted q value [1.179631]
actual q value 1.1512903
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4745388
BAD DOOR
predicted q value [1.1818132]
actual q value 1.1427352
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4772666
BAD DOOR
predicted q value [1.1818132]
actual q value 1.1167128
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4772666
BAD DOOR
predicted q value [1.1805248]
actual q value 1.1504879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.475656
BAD DOOR
predicted q value [1.181106]
actual q value 1.1394753
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4763825
BAD DOOR
predicted q value [1.18152]
actual q value 1.1389937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4769
BAD DOOR
predicted q value [1.1789868]
actual q value 1.1446035
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737335
BAD DOOR
predicted q value [1.1789868]
actual q value 1.1493602
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737335
BAD DOOR
predicted q value [1.1789868]
actual q value 1.1471676
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737335
BAD DOOR
predicted q value [1.1789868]
actual q value 1.1421214
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737335
BAD DOOR
predicted q value [1.180432]
actual q value 1.1515121
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4755399
BAD DOOR
predicted q value [1.1818656]
actual q value 1.1400957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.477332
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4949539
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4921227
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974945
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4934263
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4913104
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4951746
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4962268
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4889419
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959407
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4905912
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4940205
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.489454
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976629
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983381
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4904068
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4973632
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977777
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4904315
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4937832
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4908272
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  174
BAD DOOR
predicted q value [1.1789887]
actual q value 1.1562623
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737358
BAD DOOR
predicted q value [1.1784536]
actual q value 1.1650593
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4730669
BAD DOOR
predicted q value [1.1801552]
actual q value 1.1509358
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.475194
BAD DOOR
predicted q value [1.1786722]
actual q value 1.158212
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733403
BAD DOOR
predicted q value [1.1786722]
actual q value 1.1604764
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733403
BAD DOOR
predicted q value [1.1790203]
actual q value 1.1646585
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737754
BAD DOOR
predicted q value [1.17931]
actual q value 1.1616366
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4741374
BAD DOOR
predicted q value [1.1795197]
actual q value 1.1564186
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743996
BAD DOOR
predicted q value [1.1789644]
actual q value 1.1560249
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737055
BAD DOOR
predicted q value [1.1803194]
actual q value 1.1545475
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4753993
BAD DOOR
predicted q value [1.1803194]
actual q value 1.1518989
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4753993
BAD DOOR
predicted q value [1.1795353]
actual q value 1.1606113
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4744191
BAD DOOR
predicted q value [1.1798891]
actual q value 1.1630267
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4748614
BAD DOOR
predicted q value [1.1801411]
actual q value 1.1529605
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4751763
BAD DOOR
predicted q value [1.1786407]
actual q value 1.1602058
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733009
BAD DOOR
predicted q value [1.1786407]
actual q value 1.1627688
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733009
BAD DOOR
predicted q value [1.1786407]
actual q value 1.1591744
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733009
BAD DOOR
predicted q value [1.1786407]
actual q value 1.1746908
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733009
BAD DOOR
predicted q value [1.1794788]
actual q value 1.1584445
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743484
BAD DOOR
predicted q value [1.1803514]
actual q value 1.1659607
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4754392
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4948542
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4931387
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.496394
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4939284
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4926462
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4949882
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4956257
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.491211
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4954525
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4922106
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4942886
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4915214
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4964962
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4969053
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4920988
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4963144
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4965657
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4921137
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4941448
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4923534
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  179
BAD DOOR
predicted q value [1.1789293]
actual q value 1.16048
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4736617
BAD DOOR
predicted q value [1.1787192]
actual q value 1.1554832
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733989
BAD DOOR
predicted q value [1.1796112]
actual q value 1.1579337
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.474514
BAD DOOR
predicted q value [1.1787361]
actual q value 1.1608168
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4734201
BAD DOOR
predicted q value [1.1787361]
actual q value 1.1556734
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4734201
BAD DOOR
predicted q value [1.1789478]
actual q value 1.1593297
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4736848
BAD DOOR
predicted q value [1.1791172]
actual q value 1.1687055
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4738965
BAD DOOR
predicted q value [1.1792396]
actual q value 1.1619874
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4740496
BAD DOOR
predicted q value [1.1789153]
actual q value 1.1608888
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473644
BAD DOOR
predicted q value [1.1797073]
actual q value 1.1678327
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4746342
BAD DOOR
predicted q value [1.1797073]
actual q value 1.1581002
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4746342
BAD DOOR
predicted q value [1.179249]
actual q value 1.170553
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4740613
BAD DOOR
predicted q value [1.1794556]
actual q value 1.1593564
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743196
BAD DOOR
predicted q value [1.179603]
actual q value 1.1713079
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4745038
BAD DOOR
predicted q value [1.1787337]
actual q value 1.1547707
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4734172
BAD DOOR
predicted q value [1.1787337]
actual q value 1.1571842
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4734172
BAD DOOR
predicted q value [1.1787337]
actual q value 1.1599962
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4734172
BAD DOOR
predicted q value [1.1787337]
actual q value 1.1606133
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4734172
BAD DOOR
predicted q value [1.1792159]
actual q value 1.1688267
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4740199
BAD DOOR
predicted q value [1.179726]
actual q value 1.1599017
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4746575
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5029966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5063727
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981542
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032899
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046881
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.495007
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504308
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4971988
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501756
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4956874
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5065968
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074941
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4969535
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5061984
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5067492
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4969862
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014405
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975121
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  184
BAD DOOR
predicted q value [1.179796]
actual q value 1.1743704
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.474745
BAD DOOR
predicted q value [1.1794307]
actual q value 1.1682336
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4742885
BAD DOOR
predicted q value [1.1806158]
actual q value 1.1835842
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4757698
BAD DOOR
predicted q value [1.179501]
actual q value 1.1745076
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743763
BAD DOOR
predicted q value [1.179501]
actual q value 1.1737993
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743763
BAD DOOR
predicted q value [1.1798182]
actual q value 1.1784242
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4747727
BAD DOOR
predicted q value [1.1800219]
actual q value 1.1750098
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4750273
BAD DOOR
predicted q value [1.1801691]
actual q value 1.1769638
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4752114
BAD DOOR
predicted q value [1.179779]
actual q value 1.1745538
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4747238
BAD DOOR
predicted q value [1.1807313]
actual q value 1.1761181
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4759141
BAD DOOR
predicted q value [1.1807313]
actual q value 1.1830661
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4759141
BAD DOOR
predicted q value [1.1801802]
actual q value 1.173547
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4752252
BAD DOOR
predicted q value [1.1804287]
actual q value 1.1786153
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4755359
BAD DOOR
predicted q value [1.1806059]
actual q value 1.1760327
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4757574
BAD DOOR
predicted q value [1.1794908]
actual q value 1.1722493
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743636
BAD DOOR
predicted q value [1.1794908]
actual q value 1.1710166
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743636
BAD DOOR
predicted q value [1.1794908]
actual q value 1.1741369
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743636
BAD DOOR
predicted q value [1.1794908]
actual q value 1.1749196
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743636
BAD DOOR
predicted q value [1.1801405]
actual q value 1.1746768
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4751756
BAD DOOR
predicted q value [1.1807536]
actual q value 1.1768942
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.475942
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023628
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004797
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504053
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013466
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999391
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025098
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032097
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977229
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030195
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994609
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501742
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987044
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041649
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046141
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993382
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039656
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5042412
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993545
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015843
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996178
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  189
BAD DOOR
predicted q value [1.176625]
actual q value 1.2014332
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4707812
BAD DOOR
predicted q value [1.178684]
actual q value 1.1968404
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473355
BAD DOOR
predicted q value [1.1729629]
actual q value 1.1897815
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4662037
BAD DOOR
predicted q value [1.178386]
actual q value 1.2004564
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4729824
BAD DOOR
predicted q value [1.178386]
actual q value 1.1943915
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4729824
BAD DOOR
predicted q value [1.1765255]
actual q value 1.1936767
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4706569
BAD DOOR
predicted q value [1.175616]
actual q value 1.1926658
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4695201
BAD DOOR
predicted q value [1.174958]
actual q value 1.1883769
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4686974
BAD DOOR
predicted q value [1.1767011]
actual q value 1.1999103
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4708763
BAD DOOR
predicted q value [1.1724468]
actual q value 1.183539
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4655585
BAD DOOR
predicted q value [1.1724468]
actual q value 1.1900845
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4655585
BAD DOOR
predicted q value [1.1749086]
actual q value 1.1870875
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4686358
BAD DOOR
predicted q value [1.1737981]
actual q value 1.1932709
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4672476
BAD DOOR
predicted q value [1.173007]
actual q value 1.1831551
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4662588
BAD DOOR
predicted q value [1.1786741]
actual q value 1.1939437
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733427
BAD DOOR
predicted q value [1.1786741]
actual q value 1.1948096
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733427
BAD DOOR
predicted q value [1.1786741]
actual q value 1.1982253
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733427
BAD DOOR
predicted q value [1.1786741]
actual q value 1.1970379
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4733427
BAD DOOR
predicted q value [1.1750861]
actual q value 1.1934496
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4688576
BAD DOOR
predicted q value [1.1723467]
actual q value 1.194304
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4654334
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4968688
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.494523
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4989742
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.495603
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4938496
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4970518
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979237
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4918871
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976866
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.493254
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4960954
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4923115
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991138
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996732
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4931011
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988654
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992089
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4931215
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.495899
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4934493
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  194
BAD DOOR
predicted q value [1.1758292]
actual q value 1.1515551
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4697864
BAD DOOR
predicted q value [1.179065]
actual q value 1.1641648
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4738313
BAD DOOR
predicted q value [1.1723387]
actual q value 1.1629763
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4654235
BAD DOOR
predicted q value [1.1775018]
actual q value 1.1526954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4718772
BAD DOOR
predicted q value [1.1775018]
actual q value 1.1613252
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4718772
BAD DOOR
predicted q value [1.1757343]
actual q value 1.1593735
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4696678
BAD DOOR
predicted q value [1.1748674]
actual q value 1.1674031
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4685843
BAD DOOR
predicted q value [1.1742402]
actual q value 1.1556963
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4678003
BAD DOOR
predicted q value [1.1759014]
actual q value 1.1530991
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4698768
BAD DOOR
predicted q value [1.1718467]
actual q value 1.1516137
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4648085
BAD DOOR
predicted q value [1.1718467]
actual q value 1.1626229
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4648085
BAD DOOR
predicted q value [1.1741931]
actual q value 1.1578543
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4677415
BAD DOOR
predicted q value [1.1731347]
actual q value 1.1595318
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4664184
BAD DOOR
predicted q value [1.1723807]
actual q value 1.1522813
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4654759
BAD DOOR
predicted q value [1.1777964]
actual q value 1.1616207
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4722455
BAD DOOR
predicted q value [1.1777964]
actual q value 1.1619316
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4722455
BAD DOOR
predicted q value [1.1777964]
actual q value 1.1584451
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4722455
BAD DOOR
predicted q value [1.1777964]
actual q value 1.156165
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4722455
BAD DOOR
predicted q value [1.1743624]
actual q value 1.1674095
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.467953
BAD DOOR
predicted q value [1.1717513]
actual q value 1.1583556
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.464689
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5045776
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033585
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5056717
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.50392
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030087
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046728
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.505126
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019889
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5050027
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026991
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041759
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022094
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5057445
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5060351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026196
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5056152
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5057938
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026302
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040736
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028006
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  199
BAD DOOR
predicted q value [1.1762422]
actual q value 1.1792452
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4703028
BAD DOOR
predicted q value [1.1768227]
actual q value 1.1773498
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4710283
BAD DOOR
predicted q value [1.1741985]
actual q value 1.1941245
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4677482
BAD DOOR
predicted q value [1.1771448]
actual q value 1.1806608
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.471431
BAD DOOR
predicted q value [1.1771448]
actual q value 1.181213
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.471431
BAD DOOR
predicted q value [1.1761868]
actual q value 1.1893485
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4702334
BAD DOOR
predicted q value [1.1756791]
actual q value 1.171007
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4695989
BAD DOOR
predicted q value [1.1753118]
actual q value 1.178149
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4691398
BAD DOOR
predicted q value [1.1762846]
actual q value 1.1812372
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4703557
BAD DOOR
predicted q value [1.1739104]
actual q value 1.1742371
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4673879
BAD DOOR
predicted q value [1.1739104]
actual q value 1.1936857
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4673879
BAD DOOR
predicted q value [1.1752843]
actual q value 1.1710942
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4691054
BAD DOOR
predicted q value [1.1746645]
actual q value 1.1896462
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4683306
BAD DOOR
predicted q value [1.174223]
actual q value 1.1708589
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4677787
BAD DOOR
predicted q value [1.1770625]
actual q value 1.1705039
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4713281
BAD DOOR
predicted q value [1.1770625]
actual q value 1.1775808
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4713281
BAD DOOR
predicted q value [1.1770625]
actual q value 1.1766131
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4713281
BAD DOOR
predicted q value [1.1770625]
actual q value 1.1851355
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4713281
BAD DOOR
predicted q value [1.1753833]
actual q value 1.1708424
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4692292
BAD DOOR
predicted q value [1.1738545]
actual q value 1.1881764
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.467318
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025437
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014343
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5035391
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019451
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501116
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026302
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030425
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001879
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5029304
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008342
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502178
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003886
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036052
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038698
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007621
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034878
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036502
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007718
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020847
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009266
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  204
BAD DOOR
predicted q value [1.1791221]
actual q value 1.1688814
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739026
BAD DOOR
predicted q value [1.18053]
actual q value 1.1631523
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4756625
BAD DOOR
predicted q value [1.1791549]
actual q value 1.1657699
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739436
BAD DOOR
predicted q value [1.1794506]
actual q value 1.1686951
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743133
BAD DOOR
predicted q value [1.1794506]
actual q value 1.1628639
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4743133
BAD DOOR
predicted q value [1.1791229]
actual q value 1.1672125
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739037
BAD DOOR
predicted q value [1.1791312]
actual q value 1.1621646
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739139
BAD DOOR
predicted q value [1.179137]
actual q value 1.160626
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739213
BAD DOOR
predicted q value [1.1791214]
actual q value 1.1686087
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739017
BAD DOOR
predicted q value [1.1791594]
actual q value 1.158648
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739493
BAD DOOR
predicted q value [1.1791594]
actual q value 1.1658942
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739493
BAD DOOR
predicted q value [1.1791375]
actual q value 1.1587964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739219
BAD DOOR
predicted q value [1.1791474]
actual q value 1.1670976
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739342
BAD DOOR
predicted q value [1.1791544]
actual q value 1.1700138
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473943
BAD DOOR
predicted q value [1.1795354]
actual q value 1.1700879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4744192
BAD DOOR
predicted q value [1.1795354]
actual q value 1.1624901
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4744192
BAD DOOR
predicted q value [1.1795354]
actual q value 1.1692507
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4744192
BAD DOOR
predicted q value [1.1795354]
actual q value 1.1680828
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4744192
BAD DOOR
predicted q value [1.1791359]
actual q value 1.1635002
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739199
BAD DOOR
predicted q value [1.1791604]
actual q value 1.1675161
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4739505
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5029197
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036759
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022413
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033277
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038929
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028607
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025797
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5045254
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026561
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040848
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503169
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043886
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021962
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020158
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041342
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022762
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021654
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041275
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5032325
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040219
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  209
BAD DOOR
predicted q value [1.1782107]
actual q value 1.1799409
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4727634
BAD DOOR
predicted q value [1.1797429]
actual q value 1.1699882
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4746786
BAD DOOR
predicted q value [1.1767435]
actual q value 1.1772841
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709294
BAD DOOR
predicted q value [1.1788832]
actual q value 1.1796952
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473604
BAD DOOR
predicted q value [1.1788832]
actual q value 1.1820785
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473604
BAD DOOR
predicted q value [1.1781708]
actual q value 1.1781453
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4727135
BAD DOOR
predicted q value [1.1778063]
actual q value 1.1645868
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4722579
BAD DOOR
predicted q value [1.1775427]
actual q value 1.1705306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719284
BAD DOOR
predicted q value [1.178241]
actual q value 1.1795874
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4728013
BAD DOOR
predicted q value [1.1765366]
actual q value 1.167207
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4706707
BAD DOOR
predicted q value [1.1765366]
actual q value 1.1773603
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4706707
BAD DOOR
predicted q value [1.1775229]
actual q value 1.164642
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719037
BAD DOOR
predicted q value [1.1770779]
actual q value 1.178083
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4713473
BAD DOOR
predicted q value [1.1767609]
actual q value 1.1814189
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709512
BAD DOOR
predicted q value [1.1789689]
actual q value 1.1815012
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737111
BAD DOOR
predicted q value [1.1789689]
actual q value 1.17015
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737111
BAD DOOR
predicted q value [1.1789689]
actual q value 1.1804154
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737111
BAD DOOR
predicted q value [1.1789689]
actual q value 1.1789007
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4737111
BAD DOOR
predicted q value [1.177594]
actual q value 1.1648917
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719925
BAD DOOR
predicted q value [1.1764965]
actual q value 1.1783391
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4706206
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037777
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038857
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503681
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038362
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039167
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037694
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037293
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040072
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037401
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039442
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038134
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039878
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036745
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036488
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039513
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503686
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.50367
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039504
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038223
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039351
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  214
BAD DOOR
predicted q value [1.1768582]
actual q value 1.1852186
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4710727
BAD DOOR
predicted q value [1.1782663]
actual q value 1.1941326
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4728329
BAD DOOR
predicted q value [1.1754972]
actual q value 1.183929
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4693714
BAD DOOR
predicted q value [1.1774819]
actual q value 1.1853124
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4718524
BAD DOOR
predicted q value [1.1774819]
actual q value 1.1895944
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4718524
BAD DOOR
predicted q value [1.1768211]
actual q value 1.1847527
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4710264
BAD DOOR
predicted q value [1.1764832]
actual q value 1.2022581
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.470604
BAD DOOR
predicted q value [1.1762388]
actual q value 1.1951826
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4702984
BAD DOOR
predicted q value [1.1768864]
actual q value 1.1853213
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4711081
BAD DOOR
predicted q value [1.1753055]
actual q value 1.1991305
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4691318
BAD DOOR
predicted q value [1.1753055]
actual q value 1.1840494
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4691318
BAD DOOR
predicted q value [1.1762202]
actual q value 1.202165
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4702753
BAD DOOR
predicted q value [1.1758076]
actual q value 1.1848342
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4697595
BAD DOOR
predicted q value [1.1755135]
actual q value 1.1847444
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4693918
BAD DOOR
predicted q value [1.1775615]
actual q value 1.1847966
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719518
BAD DOOR
predicted q value [1.1775615]
actual q value 1.1943915
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719518
BAD DOOR
predicted q value [1.1775615]
actual q value 1.1851084
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719518
BAD DOOR
predicted q value [1.1775615]
actual q value 1.1855403
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4719518
BAD DOOR
predicted q value [1.1762861]
actual q value 1.2030821
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4703577
BAD DOOR
predicted q value [1.1752682]
actual q value 1.1852226
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4690852
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979162
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024283
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4938675
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003512
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037229
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975643
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4958876
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074973
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4963434
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5048687
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994038
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5066814
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4935989
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4925231
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.505163
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4940766
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4934161
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5051237
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499782
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504493
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  219
BAD DOOR
predicted q value [1.1858755]
actual q value 1.1783355
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4823444
BAD DOOR
predicted q value [1.185847]
actual q value 1.1749202
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4823089
BAD DOOR
predicted q value [1.1861255]
actual q value 1.1804562
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4826568
BAD DOOR
predicted q value [1.1857611]
actual q value 1.1786268
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4822013
BAD DOOR
predicted q value [1.1857611]
actual q value 1.177922
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4822013
BAD DOOR
predicted q value [1.1858823]
actual q value 1.1798806
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.482353
BAD DOOR
predicted q value [1.1859443]
actual q value 1.1792318
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4824305
BAD DOOR
predicted q value [1.1859893]
actual q value 1.1838346
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4824866
BAD DOOR
predicted q value [1.1858704]
actual q value 1.1786444
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.482338
BAD DOOR
predicted q value [1.1861606]
actual q value 1.183615
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4827007
BAD DOOR
predicted q value [1.1861606]
actual q value 1.180366
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4827007
BAD DOOR
predicted q value [1.1859925]
actual q value 1.1787468
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4824907
BAD DOOR
predicted q value [1.1860683]
actual q value 1.1798061
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4825854
BAD DOOR
predicted q value [1.1861223]
actual q value 1.1768897
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4826529
BAD DOOR
predicted q value [1.1857464]
actual q value 1.1770782
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4821831
BAD DOOR
predicted q value [1.1857464]
actual q value 1.1772943
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4821831
BAD DOOR
predicted q value [1.1857464]
actual q value 1.1780152
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4821831
BAD DOOR
predicted q value [1.1857464]
actual q value 1.1793225
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4821831
BAD DOOR
predicted q value [1.1859806]
actual q value 1.1807299
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4824758
BAD DOOR
predicted q value [1.1861674]
actual q value 1.1795166
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4827092
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034969
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5080912
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993745
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5059762
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5094095
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031388
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014316
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5132525
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018957
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5105761
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5050118
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5124216
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991009
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980055
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5108755
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995873
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4989147
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5108354
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5053966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5101935
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  224
BAD DOOR
predicted q value [1.1942018]
actual q value 1.1901138
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4927523
BAD DOOR
predicted q value [1.1929816]
actual q value 1.1755607
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.491227
BAD DOOR
predicted q value [1.1957881]
actual q value 1.1864604
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4947352
BAD DOOR
predicted q value [1.1934745]
actual q value 1.1899328
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4918432
BAD DOOR
predicted q value [1.1934745]
actual q value 1.1910454
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4918432
BAD DOOR
predicted q value [1.1942447]
actual q value 1.1881546
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.492806
BAD DOOR
predicted q value [1.1946388]
actual q value 1.181765
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4932985
BAD DOOR
predicted q value [1.194924]
actual q value 1.1907303
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.493655
BAD DOOR
predicted q value [1.1941688]
actual q value 1.1899457
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4927111
BAD DOOR
predicted q value [1.1960118]
actual q value 1.1853352
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4950147
BAD DOOR
predicted q value [1.1960118]
actual q value 1.1868229
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4950147
BAD DOOR
predicted q value [1.1949453]
actual q value 1.1826515
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4936817
BAD DOOR
predicted q value [1.1954263]
actual q value 1.1886634
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.494283
BAD DOOR
predicted q value [1.1957691]
actual q value 1.1909463
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4947114
BAD DOOR
predicted q value [1.193382]
actual q value 1.1907674
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4917276
BAD DOOR
predicted q value [1.193382]
actual q value 1.1771463
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4917276
BAD DOOR
predicted q value [1.193382]
actual q value 1.1902605
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4917276
BAD DOOR
predicted q value [1.193382]
actual q value 1.1895535
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4917276
BAD DOOR
predicted q value [1.1948684]
actual q value 1.1825168
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4935856
BAD DOOR
predicted q value [1.1960552]
actual q value 1.1895349
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.495069
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5029912
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5041721
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019314
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036283
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5045111
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028989
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.50246
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054989
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025795
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504811
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033805
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5052854
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018611
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015793
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5048878
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501986
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018132
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5048777
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034794
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5047126
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  229
BAD DOOR
predicted q value [1.1990093]
actual q value 1.189404
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4987617
BAD DOOR
predicted q value [1.1975806]
actual q value 1.1843367
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4969757
BAD DOOR
predicted q value [1.2008134]
actual q value 1.1904364
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5010167
BAD DOOR
predicted q value [1.1981825]
actual q value 1.189586
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4977281
BAD DOOR
predicted q value [1.1981825]
actual q value 1.1885189
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4977281
BAD DOOR
predicted q value [1.1990584]
actual q value 1.1902039
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.498823
BAD DOOR
predicted q value [1.1995064]
actual q value 1.1952114
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499383
BAD DOOR
predicted q value [1.1998304]
actual q value 1.1882366
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499788
BAD DOOR
predicted q value [1.198972]
actual q value 1.1895657
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.498715
BAD DOOR
predicted q value [1.2010676]
actual q value 1.1919539
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5013344
BAD DOOR
predicted q value [1.2010676]
actual q value 1.1903802
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5013344
BAD DOOR
predicted q value [1.1998549]
actual q value 1.1953917
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4998186
BAD DOOR
predicted q value [1.200402]
actual q value 1.1901146
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5005025
BAD DOOR
predicted q value [1.2007916]
actual q value 1.1885867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5009896
BAD DOOR
predicted q value [1.1980773]
actual q value 1.1887867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4975966
BAD DOOR
predicted q value [1.1980773]
actual q value 1.1845545
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4975966
BAD DOOR
predicted q value [1.1980773]
actual q value 1.1892729
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4975966
BAD DOOR
predicted q value [1.1980773]
actual q value 1.1899511
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4975966
BAD DOOR
predicted q value [1.1997675]
actual q value 1.1962308
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4997094
BAD DOOR
predicted q value [1.2011169]
actual q value 1.1899376
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5013962
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017622
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028276
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008061
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023371
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031335
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016791
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012829
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497333
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013908
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034043
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021133
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038321
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007427
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004885
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034736
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008552
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5006995
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5034642
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022027
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033154
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  234
BAD DOOR
predicted q value [1.2012832]
actual q value 1.1785456
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.501604
BAD DOOR
predicted q value [1.1996609]
actual q value 1.1757895
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4995761
BAD DOOR
predicted q value [1.2032897]
actual q value 1.1747242
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5041122
BAD DOOR
predicted q value [1.2003634]
actual q value 1.177814
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5004542
BAD DOOR
predicted q value [1.2003634]
actual q value 1.1792835
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5004542
BAD DOOR
predicted q value [1.2013376]
actual q value 1.1755176
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.501672
BAD DOOR
predicted q value [1.201836]
actual q value 1.1823967
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.502295
BAD DOOR
predicted q value [1.2021965]
actual q value 1.1785157
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5027456
BAD DOOR
predicted q value [1.2012415]
actual q value 1.1779313
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5015519
BAD DOOR
predicted q value [1.2035725]
actual q value 1.1843624
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5044657
BAD DOOR
predicted q value [1.2035725]
actual q value 1.1749501
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5044657
BAD DOOR
predicted q value [1.2022235]
actual q value 1.1830758
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5027795
BAD DOOR
predicted q value [1.2028321]
actual q value 1.1759229
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5035402
BAD DOOR
predicted q value [1.2032654]
actual q value 1.179368
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040817
BAD DOOR
predicted q value [1.2002462]
actual q value 1.179964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5003078
BAD DOOR
predicted q value [1.2002462]
actual q value 1.1769838
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5003078
BAD DOOR
predicted q value [1.2002462]
actual q value 1.1789957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5003078
BAD DOOR
predicted q value [1.2002462]
actual q value 1.1764262
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5003078
BAD DOOR
predicted q value [1.2021263]
actual q value 1.1831399
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5026579
BAD DOOR
predicted q value [1.2036273]
actual q value 1.1766294
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5045342
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4967219
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4989959
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4946814
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979491
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996485
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4965445
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4956994
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015509
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959292
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500226
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974717
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011394
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4945459
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4940037
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003743
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4947867
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4944537
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003544
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976623
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000367
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  239
BAD DOOR
predicted q value [1.2045168]
actual q value 1.1875994
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.505646
BAD DOOR
predicted q value [1.2025121]
actual q value 1.1795437
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5031402
BAD DOOR
predicted q value [1.2069423]
actual q value 1.1916158
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5086778
BAD DOOR
predicted q value [1.2034051]
actual q value 1.1883113
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5042565
BAD DOOR
predicted q value [1.2034051]
actual q value 1.1841543
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5042565
BAD DOOR
predicted q value [1.2045828]
actual q value 1.1907151
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5057285
BAD DOOR
predicted q value [1.2051852]
actual q value 1.1780753
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5064814
BAD DOOR
predicted q value [1.205621]
actual q value 1.1830505
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5070263
BAD DOOR
predicted q value [1.2044666]
actual q value 1.1882292
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5055833
BAD DOOR
predicted q value [1.2072843]
actual q value 1.1800659
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5091054
BAD DOOR
predicted q value [1.2072843]
actual q value 1.1913958
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5091054
BAD DOOR
predicted q value [1.2056538]
actual q value 1.178502
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5070672
BAD DOOR
predicted q value [1.2063891]
actual q value 1.1903635
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5079863
BAD DOOR
predicted q value [1.2069131]
actual q value 1.184411
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5086414
BAD DOOR
predicted q value [1.2032635]
actual q value 1.1851978
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040795
BAD DOOR
predicted q value [1.2032635]
actual q value 1.1804929
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040795
BAD DOOR
predicted q value [1.2032635]
actual q value 1.1870916
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040795
BAD DOOR
predicted q value [1.2032635]
actual q value 1.1897333
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040795
BAD DOOR
predicted q value [1.2055362]
actual q value 1.1787442
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5069203
BAD DOOR
predicted q value [1.2073505]
actual q value 1.1896718
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5091882
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5105246
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.508048
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103612
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5081904
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5079594
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5105103
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5104427
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5077008
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.510461
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.507881
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5105847
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5077566
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103501
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103068
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5078607
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5103698
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.510343
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5078633
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5099049
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5079067
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  244
BAD DOOR
predicted q value [1.2034624]
actual q value 1.1993548
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.504328
BAD DOOR
predicted q value [1.2014694]
actual q value 1.2003037
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5018368
BAD DOOR
predicted q value [1.2058591]
actual q value 1.19704
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073239
BAD DOOR
predicted q value [1.2023641]
actual q value 1.1988606
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5029551
BAD DOOR
predicted q value [1.2023641]
actual q value 1.2001836
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5029551
BAD DOOR
predicted q value [1.2035277]
actual q value 1.1974604
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5044096
BAD DOOR
predicted q value [1.2041228]
actual q value 1.1995679
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5051534
BAD DOOR
predicted q value [1.2045534]
actual q value 1.2002182
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5056918
BAD DOOR
predicted q value [1.2034128]
actual q value 1.1989684
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.504266
BAD DOOR
predicted q value [1.206197]
actual q value 1.2003013
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5077462
BAD DOOR
predicted q value [1.206197]
actual q value 1.1971924
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5077462
BAD DOOR
predicted q value [1.2045858]
actual q value 1.1996319
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5057323
BAD DOOR
predicted q value [1.2053126]
actual q value 1.1977727
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5066408
BAD DOOR
predicted q value [1.2058303]
actual q value 1.2001852
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.507288
BAD DOOR
predicted q value [1.202224]
actual q value 1.2001557
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.50278
BAD DOOR
predicted q value [1.202224]
actual q value 1.2002804
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.50278
BAD DOOR
predicted q value [1.202224]
actual q value 1.1995959
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.50278
BAD DOOR
predicted q value [1.202224]
actual q value 1.1979867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.50278
BAD DOOR
predicted q value [1.2044697]
actual q value 1.1994759
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5055871
BAD DOOR
predicted q value [1.2062625]
actual q value 1.1982464
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5078281
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998053
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997787
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998214
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998436
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998031
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997922
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998684
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499795
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998511
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998151
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499863
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997771
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.49977
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499853
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997802
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997758
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998527
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998176
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998486
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  249
BAD DOOR
predicted q value [1.2007821]
actual q value 1.1911285
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5009775
BAD DOOR
predicted q value [1.1981089]
actual q value 1.1950964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4976362
BAD DOOR
predicted q value [1.2039528]
actual q value 1.190486
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.504941
BAD DOOR
predicted q value [1.1993289]
actual q value 1.1909348
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4991611
BAD DOOR
predicted q value [1.1993289]
actual q value 1.1917298
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4991611
BAD DOOR
predicted q value [1.2008684]
actual q value 1.190536
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5010854
BAD DOOR
predicted q value [1.2016556]
actual q value 1.2022345
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5020696
BAD DOOR
predicted q value [1.2022254]
actual q value 1.1929259
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5027819
BAD DOOR
predicted q value [1.2007164]
actual q value 1.1910055
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5008955
BAD DOOR
predicted q value [1.2043997]
actual q value 1.1961116
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5054996
BAD DOOR
predicted q value [1.2043997]
actual q value 1.1905458
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5054996
BAD DOOR
predicted q value [1.2022682]
actual q value 1.2006459
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5028353
BAD DOOR
predicted q value [1.2032298]
actual q value 1.1906968
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040373
BAD DOOR
predicted q value [1.2039148]
actual q value 1.1920991
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5048934
BAD DOOR
predicted q value [1.1991436]
actual q value 1.1915228
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4989295
BAD DOOR
predicted q value [1.1991436]
actual q value 1.194502
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4989295
BAD DOOR
predicted q value [1.1991436]
actual q value 1.1911607
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4989295
BAD DOOR
predicted q value [1.1991436]
actual q value 1.1906554
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4989295
BAD DOOR
predicted q value [1.2021146]
actual q value 1.2037208
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5026432
BAD DOOR
predicted q value [1.2044864]
actual q value 1.190879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.505608
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4990109
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987571
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4969436
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992528
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984484
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498831
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979751
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975479
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982078
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498175
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994787
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977425
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4968066
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4962573
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981048
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4970505
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4967132
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981141
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993886
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982646
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  254
BAD DOOR
predicted q value [1.1929433]
actual q value 1.183848
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4911791
BAD DOOR
predicted q value [1.1895239]
actual q value 1.1838665
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4869049
BAD DOOR
predicted q value [1.196958]
actual q value 1.1832486
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961975
BAD DOOR
predicted q value [1.1911031]
actual q value 1.183475
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4888788
BAD DOOR
predicted q value [1.1911031]
actual q value 1.1838217
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4888788
BAD DOOR
predicted q value [1.1930525]
actual q value 1.1826413
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4913156
BAD DOOR
predicted q value [1.1940495]
actual q value 1.182586
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4925618
BAD DOOR
predicted q value [1.1947708]
actual q value 1.184222
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4934635
BAD DOOR
predicted q value [1.19286]
actual q value 1.1838124
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.491075
BAD DOOR
predicted q value [1.1975238]
actual q value 1.1846166
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4969049
BAD DOOR
predicted q value [1.1975238]
actual q value 1.1835406
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4969049
BAD DOOR
predicted q value [1.1948248]
actual q value 1.182903
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.493531
BAD DOOR
predicted q value [1.1960424]
actual q value 1.1837121
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.495053
BAD DOOR
predicted q value [1.1969097]
actual q value 1.184368
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961371
BAD DOOR
predicted q value [1.1908686]
actual q value 1.1837537
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4885857
BAD DOOR
predicted q value [1.1908686]
actual q value 1.183959
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4885857
BAD DOOR
predicted q value [1.1908686]
actual q value 1.183671
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4885857
BAD DOOR
predicted q value [1.1908686]
actual q value 1.1825798
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4885857
BAD DOOR
predicted q value [1.1946304]
actual q value 1.1820025
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.493288
BAD DOOR
predicted q value [1.1976336]
actual q value 1.1842077
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4970421
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004263
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013529
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995947
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009263
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013773
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003538
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000095
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012249
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500103
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013313
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007317
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012579
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995394
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993184
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013193
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996376
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995018
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013211
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008093
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013463
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  259
BAD DOOR
predicted q value [1.1919646]
actual q value 1.1967595
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4899558
BAD DOOR
predicted q value [1.1881952]
actual q value 1.1868705
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.485244
BAD DOOR
predicted q value [1.1963769]
actual q value 1.1960486
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4954711
BAD DOOR
predicted q value [1.189942]
actual q value 1.1959851
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4874275
BAD DOOR
predicted q value [1.189942]
actual q value 1.193573
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4874275
BAD DOOR
predicted q value [1.1920843]
actual q value 1.1954446
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4901054
BAD DOOR
predicted q value [1.1931801]
actual q value 1.1771704
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4914751
BAD DOOR
predicted q value [1.1939731]
actual q value 1.1902046
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4924663
BAD DOOR
predicted q value [1.1918728]
actual q value 1.1964669
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4898411
BAD DOOR
predicted q value [1.1969988]
actual q value 1.1842108
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4962485
BAD DOOR
predicted q value [1.1969988]
actual q value 1.1962873
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4962485
BAD DOOR
predicted q value [1.1940324]
actual q value 1.1776068
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4925406
BAD DOOR
predicted q value [1.1953707]
actual q value 1.1963558
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4942133
BAD DOOR
predicted q value [1.1963238]
actual q value 1.1914623
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4954047
BAD DOOR
predicted q value [1.1896844]
actual q value 1.1953521
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4871055
BAD DOOR
predicted q value [1.1896844]
actual q value 1.1877892
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4871055
BAD DOOR
predicted q value [1.1896844]
actual q value 1.1964513
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4871055
BAD DOOR
predicted q value [1.1896844]
actual q value 1.1953127
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4871055
BAD DOOR
predicted q value [1.1938188]
actual q value 1.1759508
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4922734
BAD DOOR
predicted q value [1.1971195]
actual q value 1.1970582
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4963993
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014658
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5010529
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024186
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009868
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501094
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015488
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019431
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012141
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018361
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011305
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011158
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501188
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5024819
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027354
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011399
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023696
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025251
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011387
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5010267
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011184
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  264
BAD DOOR
predicted q value [1.1929413]
actual q value 1.1866086
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4911766
BAD DOOR
predicted q value [1.1890197]
actual q value 1.1864126
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4862746
BAD DOOR
predicted q value [1.19752]
actual q value 1.1857736
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4969001
BAD DOOR
predicted q value [1.1908427]
actual q value 1.185828
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4885534
BAD DOOR
predicted q value [1.1908427]
actual q value 1.1872435
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4885534
BAD DOOR
predicted q value [1.1930658]
actual q value 1.1852157
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4913322
BAD DOOR
predicted q value [1.1942028]
actual q value 1.185913
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4927535
BAD DOOR
predicted q value [1.1950257]
actual q value 1.1872804
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.493782
BAD DOOR
predicted q value [1.1928463]
actual q value 1.186301
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4910579
BAD DOOR
predicted q value [1.1981653]
actual q value 1.186964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4977067
BAD DOOR
predicted q value [1.1981653]
actual q value 1.1860143
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4977067
BAD DOOR
predicted q value [1.1950873]
actual q value 1.1860348
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4938592
BAD DOOR
predicted q value [1.1964757]
actual q value 1.1861173
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4955947
BAD DOOR
predicted q value [1.197465]
actual q value 1.187622
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4968312
BAD DOOR
predicted q value [1.1905752]
actual q value 1.1871889
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.488219
BAD DOOR
predicted q value [1.1905752]
actual q value 1.1866453
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.488219
BAD DOOR
predicted q value [1.1905752]
actual q value 1.1863257
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.488219
BAD DOOR
predicted q value [1.1905752]
actual q value 1.1851219
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.488219
BAD DOOR
predicted q value [1.1948655]
actual q value 1.1858943
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4935818
BAD DOOR
predicted q value [1.1982906]
actual q value 1.1868272
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4978633
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043159
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503411
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5051277
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038276
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033507
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043863
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5047226
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033188
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046313
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033412
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040176
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033257
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5051816
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5053973
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033386
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5050858
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5052183
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503339
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039415
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5033443
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  269
BAD DOOR
predicted q value [1.1944672]
actual q value 1.1939723
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.493084
BAD DOOR
predicted q value [1.1906204]
actual q value 1.1971825
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4882755
BAD DOOR
predicted q value [1.1989527]
actual q value 1.1936474
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4986908
BAD DOOR
predicted q value [1.1924112]
actual q value 1.1936762
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4905139
BAD DOOR
predicted q value [1.1924112]
actual q value 1.1946812
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4905139
BAD DOOR
predicted q value [1.194589]
actual q value 1.1934396
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4932363
BAD DOOR
predicted q value [1.195703]
actual q value 1.2012353
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4946288
BAD DOOR
predicted q value [1.196509]
actual q value 1.1962181
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4956362
BAD DOOR
predicted q value [1.1943743]
actual q value 1.1938547
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4929678
BAD DOOR
predicted q value [1.1995848]
actual q value 1.1987177
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4994811
BAD DOOR
predicted q value [1.1995848]
actual q value 1.1937387
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4994811
BAD DOOR
predicted q value [1.1965694]
actual q value 1.2011142
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4957118
BAD DOOR
predicted q value [1.1979296]
actual q value 1.1937802
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.497412
BAD DOOR
predicted q value [1.1988987]
actual q value 1.1958631
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4986234
BAD DOOR
predicted q value [1.1921492]
actual q value 1.1941969
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4901865
BAD DOOR
predicted q value [1.1921492]
actual q value 1.1969128
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4901865
BAD DOOR
predicted q value [1.1921492]
actual q value 1.193867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4901865
BAD DOOR
predicted q value [1.1921492]
actual q value 1.1934066
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4901865
BAD DOOR
predicted q value [1.1963521]
actual q value 1.2015743
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4954401
BAD DOOR
predicted q value [1.1997074]
actual q value 1.1940495
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4996343
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004513
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996407
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014201
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998688
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995918
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005355
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009367
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994484
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008278
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995483
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000955
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994795
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014845
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017419
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995372
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013702
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015281
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995387
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000048
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995626
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  274
BAD DOOR
predicted q value [1.196201]
actual q value 1.17611
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4952512
BAD DOOR
predicted q value [1.1925378]
actual q value 1.1776922
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4906722
BAD DOOR
predicted q value [1.2004675]
actual q value 1.1757989
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5005844
BAD DOOR
predicted q value [1.1942451]
actual q value 1.1755214
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4928064
BAD DOOR
predicted q value [1.1942451]
actual q value 1.1767123
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4928064
BAD DOOR
predicted q value [1.1963168]
actual q value 1.1752405
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.495396
BAD DOOR
predicted q value [1.1973765]
actual q value 1.1800232
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4967207
BAD DOOR
predicted q value [1.1981432]
actual q value 1.1777954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.497679
BAD DOOR
predicted q value [1.1961124]
actual q value 1.1759123
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4951404
BAD DOOR
predicted q value [1.2010691]
actual q value 1.1792257
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5013365
BAD DOOR
predicted q value [1.2010691]
actual q value 1.1759802
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5013365
BAD DOOR
predicted q value [1.1982008]
actual q value 1.1800473
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.497751
BAD DOOR
predicted q value [1.1994946]
actual q value 1.1759663
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4993683
BAD DOOR
predicted q value [1.2004163]
actual q value 1.1778526
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5005203
BAD DOOR
predicted q value [1.1939961]
actual q value 1.1763644
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4924951
BAD DOOR
predicted q value [1.1939961]
actual q value 1.1777122
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4924951
BAD DOOR
predicted q value [1.1939961]
actual q value 1.175822
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4924951
BAD DOOR
predicted q value [1.1939961]
actual q value 1.1750653
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4924951
BAD DOOR
predicted q value [1.1979939]
actual q value 1.1802387
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4974923
BAD DOOR
predicted q value [1.2011858]
actual q value 1.176497
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5014822
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015111
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.50186
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017692
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016992
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019602
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014839
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015812
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022516
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015388
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020485
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016261
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5021884
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017942
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018944
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020714
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017499
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018114
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020682
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016553
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020195
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  279
BAD DOOR
predicted q value [1.1988306]
actual q value 1.1849649
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4985383
BAD DOOR
predicted q value [1.1952713]
actual q value 1.1841856
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.494089
BAD DOOR
predicted q value [1.2029749]
actual q value 1.1864328
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5037186
BAD DOOR
predicted q value [1.196931]
actual q value 1.1840191
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961637
BAD DOOR
predicted q value [1.196931]
actual q value 1.1844635
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961637
BAD DOOR
predicted q value [1.1989434]
actual q value 1.1846834
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4986792
BAD DOOR
predicted q value [1.1999724]
actual q value 1.186861
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4999654
BAD DOOR
predicted q value [1.2007172]
actual q value 1.1863146
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5008966
BAD DOOR
predicted q value [1.1987445]
actual q value 1.1848581
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4984307
BAD DOOR
predicted q value [1.2035589]
actual q value 1.1879343
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5044487
BAD DOOR
predicted q value [1.2035589]
actual q value 1.1867235
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5044487
BAD DOOR
predicted q value [1.200773]
actual q value 1.1871761
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5009663
BAD DOOR
predicted q value [1.2020298]
actual q value 1.186134
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5025373
BAD DOOR
predicted q value [1.202925]
actual q value 1.1871798
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5036561
BAD DOOR
predicted q value [1.1966889]
actual q value 1.1842413
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4958612
BAD DOOR
predicted q value [1.1966889]
actual q value 1.1847439
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4958612
BAD DOOR
predicted q value [1.1966889]
actual q value 1.1840389
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4958612
BAD DOOR
predicted q value [1.1966889]
actual q value 1.1837565
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4958612
BAD DOOR
predicted q value [1.2005723]
actual q value 1.1871705
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5007153
BAD DOOR
predicted q value [1.2036724]
actual q value 1.1869597
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5045905
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4986153
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991093
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981722
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988818
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992509
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985769
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983932
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996642
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984431
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993765
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987781
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995749
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981427
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980248
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994087
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981949
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981225
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994044
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988195
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993353
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  284
BAD DOOR
predicted q value [1.1961665]
actual q value 1.1956749
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4952081
BAD DOOR
predicted q value [1.1928972]
actual q value 1.1815715
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4911215
BAD DOOR
predicted q value [1.1999705]
actual q value 1.2069296
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499963
BAD DOOR
predicted q value [1.194423]
actual q value 1.1938918
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4930286
BAD DOOR
predicted q value [1.194423]
actual q value 1.1891413
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4930286
BAD DOOR
predicted q value [1.19627]
actual q value 1.1993892
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4953375
BAD DOOR
predicted q value [1.1972145]
actual q value 1.1825485
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4965181
BAD DOOR
predicted q value [1.1978981]
actual q value 1.1930556
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4973726
BAD DOOR
predicted q value [1.1960876]
actual q value 1.1962771
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4951094
BAD DOOR
predicted q value [1.2005064]
actual q value 1.19353
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.500633
BAD DOOR
predicted q value [1.2005064]
actual q value 1.207585
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.500633
BAD DOOR
predicted q value [1.1979494]
actual q value 1.1841927
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4974368
BAD DOOR
predicted q value [1.199103]
actual q value 1.2036679
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4988787
BAD DOOR
predicted q value [1.1999247]
actual q value 1.1976287
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4999058
BAD DOOR
predicted q value [1.1942008]
actual q value 1.1900028
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.492751
BAD DOOR
predicted q value [1.1942008]
actual q value 1.1846262
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.492751
BAD DOOR
predicted q value [1.1942008]
actual q value 1.1921669
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.492751
BAD DOOR
predicted q value [1.1942008]
actual q value 1.1951857
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.492751
BAD DOOR
predicted q value [1.197765]
actual q value 1.1829937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4972062
BAD DOOR
predicted q value [1.2006105]
actual q value 1.2054107
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5007632
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054116
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5031747
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5074191
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5042045
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025327
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055864
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5064176
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5006614
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5061916
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019644
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504674
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501066
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5075524
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5080856
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018189
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5073154
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.507643
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018382
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5044866
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502151
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  289
BAD DOOR
predicted q value [1.1969849]
actual q value 1.1978488
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4962311
BAD DOOR
predicted q value [1.1943017]
actual q value 1.1960586
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4928771
BAD DOOR
predicted q value [1.2001063]
actual q value 1.1990345
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5001328
BAD DOOR
predicted q value [1.1955543]
actual q value 1.1969017
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4944428
BAD DOOR
predicted q value [1.1955543]
actual q value 1.1969575
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4944428
BAD DOOR
predicted q value [1.1970698]
actual q value 1.1978605
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4963372
BAD DOOR
predicted q value [1.1978449]
actual q value 1.1982714
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4973061
BAD DOOR
predicted q value [1.198406]
actual q value 1.1984324
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4980074
BAD DOOR
predicted q value [1.1969202]
actual q value 1.1978194
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961503
BAD DOOR
predicted q value [1.2005461]
actual q value 1.1992848
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5006827
BAD DOOR
predicted q value [1.2005461]
actual q value 1.199207
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5006827
BAD DOOR
predicted q value [1.198448]
actual q value 1.1985024
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4980599
BAD DOOR
predicted q value [1.1993945]
actual q value 1.1987662
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499243
BAD DOOR
predicted q value [1.2000687]
actual q value 1.1990694
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5000858
BAD DOOR
predicted q value [1.1953719]
actual q value 1.1968054
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4942149
BAD DOOR
predicted q value [1.1953719]
actual q value 1.1968684
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4942149
BAD DOOR
predicted q value [1.1953719]
actual q value 1.1967798
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4942149
BAD DOOR
predicted q value [1.1953719]
actual q value 1.1967446
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4942149
BAD DOOR
predicted q value [1.1982967]
actual q value 1.1984494
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4978708
BAD DOOR
predicted q value [1.2006317]
actual q value 1.199252
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5007896
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993889
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993503
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994236
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993681
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993392
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993919
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994062
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993068
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994023
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993293
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499376
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993138
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994259
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499327
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994218
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994274
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993272
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499373
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993325
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  294
BAD DOOR
predicted q value [1.1997721]
actual q value 1.1882954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4997152
BAD DOOR
predicted q value [1.1972281]
actual q value 1.1856755
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4965351
BAD DOOR
predicted q value [1.2027314]
actual q value 1.1911986
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5034142
BAD DOOR
predicted q value [1.198416]
actual q value 1.1870258
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4980199
BAD DOOR
predicted q value [1.198416]
actual q value 1.1869259
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4980199
BAD DOOR
predicted q value [1.1998527]
actual q value 1.1884463
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499816
BAD DOOR
predicted q value [1.2005874]
actual q value 1.1887604
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5007342
BAD DOOR
predicted q value [1.2011191]
actual q value 1.1894641
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5013988
BAD DOOR
predicted q value [1.1997108]
actual q value 1.1882522
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4996386
BAD DOOR
predicted q value [1.2031482]
actual q value 1.1913171
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5039353
BAD DOOR
predicted q value [1.2031482]
actual q value 1.1915889
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5039353
BAD DOOR
predicted q value [1.201159]
actual q value 1.1893141
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5014488
BAD DOOR
predicted q value [1.2020563]
actual q value 1.1905284
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5025704
BAD DOOR
predicted q value [1.2026956]
actual q value 1.190992
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5033696
BAD DOOR
predicted q value [1.1982431]
actual q value 1.1867871
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4978039
BAD DOOR
predicted q value [1.1982431]
actual q value 1.1866744
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4978039
BAD DOOR
predicted q value [1.1982431]
actual q value 1.1868324
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4978039
BAD DOOR
predicted q value [1.1982431]
actual q value 1.1868957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4978039
BAD DOOR
predicted q value [1.2010157]
actual q value 1.1891588
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5012696
BAD DOOR
predicted q value [1.2032292]
actual q value 1.1916243
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5040365
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013164
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501451
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011957
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501389
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014896
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501306
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501256
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016024
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012696
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015239
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013609
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015779
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011877
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011555
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015326
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501202
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011823
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015314
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013721
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015128
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  299
BAD DOOR
predicted q value [1.2053453]
actual q value 1.1879251
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5066816
BAD DOOR
predicted q value [1.2029533]
actual q value 1.1862836
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5036917
BAD DOOR
predicted q value [1.2081245]
actual q value 1.1897583
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5101557
BAD DOOR
predicted q value [1.2040714]
actual q value 1.1871624
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5050893
BAD DOOR
predicted q value [1.2040714]
actual q value 1.1870728
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5050893
BAD DOOR
predicted q value [1.2054207]
actual q value 1.1880386
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.506776
BAD DOOR
predicted q value [1.206111]
actual q value 1.1881148
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076387
BAD DOOR
predicted q value [1.2066104]
actual q value 1.1885993
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5082631
BAD DOOR
predicted q value [1.2052876]
actual q value 1.1879034
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5066094
BAD DOOR
predicted q value [1.2085164]
actual q value 1.1896985
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106455
BAD DOOR
predicted q value [1.2085164]
actual q value 1.1916344
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106455
BAD DOOR
predicted q value [1.2066479]
actual q value 1.188453
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5083098
BAD DOOR
predicted q value [1.2074909]
actual q value 1.1892949
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5093637
BAD DOOR
predicted q value [1.2080913]
actual q value 1.1895329
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5101141
BAD DOOR
predicted q value [1.203909]
actual q value 1.1869961
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5048863
BAD DOOR
predicted q value [1.203909]
actual q value 1.1868944
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5048863
BAD DOOR
predicted q value [1.203909]
actual q value 1.187037
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5048863
BAD DOOR
predicted q value [1.203909]
actual q value 1.1870942
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5048863
BAD DOOR
predicted q value [1.2065132]
actual q value 1.1883533
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5081415
BAD DOOR
predicted q value [1.2085924]
actual q value 1.1917078
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5107405
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030301
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030508
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030115
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030413
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030566
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030284
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030209
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030739
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030229
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503062
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030367
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030702
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030102
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030053
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030632
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030124
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030094
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030631
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030386
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5030602
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  304
BAD DOOR
predicted q value [1.2094818]
actual q value 1.1812782
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5118523
BAD DOOR
predicted q value [1.2073429]
actual q value 1.181644
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5091786
BAD DOOR
predicted q value [1.211965]
actual q value 1.1873507
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5149562
BAD DOOR
predicted q value [1.2083436]
actual q value 1.1814718
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104295
BAD DOOR
predicted q value [1.2083436]
actual q value 1.1814721
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104295
BAD DOOR
predicted q value [1.2095493]
actual q value 1.1812665
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5119367
BAD DOOR
predicted q value [1.210166]
actual q value 1.1811627
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5127075
BAD DOOR
predicted q value [1.210612]
actual q value 1.1812372
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5132651
BAD DOOR
predicted q value [1.2094302]
actual q value 1.1812869
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5117878
BAD DOOR
predicted q value [1.212315]
actual q value 1.1889077
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153937
BAD DOOR
predicted q value [1.212315]
actual q value 1.188928
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153937
BAD DOOR
predicted q value [1.2106457]
actual q value 1.181374
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5133071
BAD DOOR
predicted q value [1.2113986]
actual q value 1.1847957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5142483
BAD DOOR
predicted q value [1.211935]
actual q value 1.1872032
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5149188
BAD DOOR
predicted q value [1.2081988]
actual q value 1.1814969
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102484
BAD DOOR
predicted q value [1.2081988]
actual q value 1.181497
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102484
BAD DOOR
predicted q value [1.2081988]
actual q value 1.1814965
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102484
BAD DOOR
predicted q value [1.2081988]
actual q value 1.1814964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102484
BAD DOOR
predicted q value [1.2105254]
actual q value 1.1811016
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5131568
BAD DOOR
predicted q value [1.2123828]
actual q value 1.1892312
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5154785
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003803
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008955
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999181
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5006584
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5010433
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003402
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001488
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014744
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002007
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011742
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005503
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013812
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998875
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997647
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012077
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999418
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998666
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012033
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005933
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011312
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  309
BAD DOOR
predicted q value [1.214015]
actual q value 1.2257705
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5175188
BAD DOOR
predicted q value [1.2120526]
actual q value 1.2247164
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5150658
BAD DOOR
predicted q value [1.2162899]
actual q value 1.2268314
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5203624
BAD DOOR
predicted q value [1.2129723]
actual q value 1.2253602
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5162153
BAD DOOR
predicted q value [1.2129723]
actual q value 1.2252363
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5162153
BAD DOOR
predicted q value [1.214077]
actual q value 1.225889
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5175962
BAD DOOR
predicted q value [1.2146418]
actual q value 1.2256465
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5183022
BAD DOOR
predicted q value [1.2150505]
actual q value 1.2260633
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5188131
BAD DOOR
predicted q value [1.2139678]
actual q value 1.2257698
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5174598
BAD DOOR
predicted q value [1.2166107]
actual q value 1.2266197
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5207634
BAD DOOR
predicted q value [1.2166107]
actual q value 1.2242072
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5207634
BAD DOOR
predicted q value [1.2150813]
actual q value 1.2258427
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5188516
BAD DOOR
predicted q value [1.2157711]
actual q value 1.2265794
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5197139
BAD DOOR
predicted q value [1.2162626]
actual q value 1.2266054
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5203283
BAD DOOR
predicted q value [1.2128394]
actual q value 1.2252123
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5160493
BAD DOOR
predicted q value [1.2128394]
actual q value 1.2250719
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5160493
BAD DOOR
predicted q value [1.2128394]
actual q value 1.2252688
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5160493
BAD DOOR
predicted q value [1.2128394]
actual q value 1.2253475
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5160493
BAD DOOR
predicted q value [1.214971]
actual q value 1.2257729
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5187137
BAD DOOR
predicted q value [1.2166727]
actual q value 1.226932
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5208409
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4938197
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.493262
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4943199
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4935187
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4931021
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4938633
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4940703
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4926357
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.494014
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4929607
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4936359
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4927366
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4943533
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4944861
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4929242
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4942942
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4943757
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4929292
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4935892
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4930072
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  314
BAD DOOR
predicted q value [1.2163967]
actual q value 1.2051088
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5204959
BAD DOOR
predicted q value [1.2148794]
actual q value 1.20435
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5185993
BAD DOOR
predicted q value [1.2181524]
actual q value 1.2059833
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226905
BAD DOOR
predicted q value [1.2155917]
actual q value 1.2047095
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5194896
BAD DOOR
predicted q value [1.2155917]
actual q value 1.2047069
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5194896
BAD DOOR
predicted q value [1.2164443]
actual q value 1.2051343
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5205554
BAD DOOR
predicted q value [1.2168803]
actual q value 1.2053416
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5211004
BAD DOOR
predicted q value [1.2171959]
actual q value 1.2055032
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5214949
BAD DOOR
predicted q value [1.2163602]
actual q value 1.205091
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5204502
BAD DOOR
predicted q value [1.2184]
actual q value 1.2060995
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523
BAD DOOR
predicted q value [1.2184]
actual q value 1.2061062
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523
BAD DOOR
predicted q value [1.2172196]
actual q value 1.2055103
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5215245
BAD DOOR
predicted q value [1.2177521]
actual q value 1.2057837
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5221901
BAD DOOR
predicted q value [1.2181314]
actual q value 1.2059686
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226643
BAD DOOR
predicted q value [1.2154891]
actual q value 1.2046567
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5193615
BAD DOOR
predicted q value [1.2154891]
actual q value 1.204654
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5193615
BAD DOOR
predicted q value [1.2154891]
actual q value 1.2046578
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5193615
BAD DOOR
predicted q value [1.2154891]
actual q value 1.2046593
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5193615
BAD DOOR
predicted q value [1.2171344]
actual q value 1.2054676
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.521418
BAD DOOR
predicted q value [1.218448]
actual q value 1.2061291
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230601
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018665
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017291
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019896
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017924
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016898
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018772
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019281
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015748
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019144
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016549
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018213
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015997
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501998
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020306
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016458
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019834
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020034
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501647
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018098
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016663
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  319
BAD DOOR
predicted q value [1.2191746]
actual q value 1.2059947
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239682
BAD DOOR
predicted q value [1.2179699]
actual q value 1.2058587
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5224624
BAD DOOR
predicted q value [1.2205681]
actual q value 1.2061732
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5257101
BAD DOOR
predicted q value [1.2185358]
actual q value 1.205903
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5231698
BAD DOOR
predicted q value [1.2185358]
actual q value 1.2059194
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5231698
BAD DOOR
predicted q value [1.2192125]
actual q value 1.2059879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5240157
BAD DOOR
predicted q value [1.2195584]
actual q value 1.2060989
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5244479
BAD DOOR
predicted q value [1.2198088]
actual q value 1.2061012
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247611
BAD DOOR
predicted q value [1.2191455]
actual q value 1.2059883
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523932
BAD DOOR
predicted q value [1.2207644]
actual q value 1.2062461
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5259556
BAD DOOR
predicted q value [1.2207644]
actual q value 1.2062016
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5259556
BAD DOOR
predicted q value [1.2198278]
actual q value 1.2061346
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247847
BAD DOOR
predicted q value [1.2202501]
actual q value 1.2061338
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5253127
BAD DOOR
predicted q value [1.2205513]
actual q value 1.2061992
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256891
BAD DOOR
predicted q value [1.2184545]
actual q value 1.2059039
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230681
BAD DOOR
predicted q value [1.2184545]
actual q value 1.2059225
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230681
BAD DOOR
predicted q value [1.2184545]
actual q value 1.2058965
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230681
BAD DOOR
predicted q value [1.2184545]
actual q value 1.2058861
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230681
BAD DOOR
predicted q value [1.2197602]
actual q value 1.2061284
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247003
BAD DOOR
predicted q value [1.2208025]
actual q value 1.2062135
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5260031
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017922
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018142
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017722
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018041
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018207
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017905
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017822
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018392
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017843
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018263
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017993
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017707
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017656
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018278
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017731
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017699
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018275
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018014
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018244
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  324
BAD DOOR
predicted q value [1.2204754]
actual q value 1.2260909
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255942
BAD DOOR
predicted q value [1.2193998]
actual q value 1.22542
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242498
BAD DOOR
predicted q value [1.2217195]
actual q value 1.2269241
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5271493
BAD DOOR
predicted q value [1.2199051]
actual q value 1.2256819
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5248814
BAD DOOR
predicted q value [1.2199051]
actual q value 1.2257264
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5248814
BAD DOOR
predicted q value [1.2205092]
actual q value 1.2260815
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256364
BAD DOOR
predicted q value [1.2208182]
actual q value 1.22647
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5260227
BAD DOOR
predicted q value [1.2210417]
actual q value 1.2265385
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5263021
BAD DOOR
predicted q value [1.2204494]
actual q value 1.2260661
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255618
BAD DOOR
predicted q value [1.2218946]
actual q value 1.2271712
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5273683
BAD DOOR
predicted q value [1.2218946]
actual q value 1.2270496
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5273683
BAD DOOR
predicted q value [1.2210585]
actual q value 1.226634
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5263231
BAD DOOR
predicted q value [1.2214357]
actual q value 1.2267377
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5267946
BAD DOOR
predicted q value [1.2217045]
actual q value 1.2269906
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5271306
BAD DOOR
predicted q value [1.2198323]
actual q value 1.2256641
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247904
BAD DOOR
predicted q value [1.2198323]
actual q value 1.2257144
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247904
BAD DOOR
predicted q value [1.2198323]
actual q value 1.2256438
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247904
BAD DOOR
predicted q value [1.2198323]
actual q value 1.2256155
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247904
BAD DOOR
predicted q value [1.2209982]
actual q value 1.2266003
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5262477
BAD DOOR
predicted q value [1.2219288]
actual q value 1.2270921
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.527411
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993258
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499355
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992996
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993415
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993632
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993236
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993126
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993875
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993157
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993706
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993354
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993823
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992979
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499291
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993726
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499301
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992967
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993724
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993377
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993682
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  329
BAD DOOR
predicted q value [1.219985]
actual q value 1.221314
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249813
BAD DOOR
predicted q value [1.2190368]
actual q value 1.221269
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5237961
BAD DOOR
predicted q value [1.221082]
actual q value 1.2213708
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5263524
BAD DOOR
predicted q value [1.2194822]
actual q value 1.2212855
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5243528
BAD DOOR
predicted q value [1.2194822]
actual q value 1.2212894
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5243528
BAD DOOR
predicted q value [1.2200148]
actual q value 1.2213126
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5250186
BAD DOOR
predicted q value [1.2202872]
actual q value 1.2213427
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.525359
BAD DOOR
predicted q value [1.2204844]
actual q value 1.2213459
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256054
BAD DOOR
predicted q value [1.2199622]
actual q value 1.221312
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249528
BAD DOOR
predicted q value [1.2212365]
actual q value 1.2213901
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5265456
BAD DOOR
predicted q value [1.2212365]
actual q value 1.2213795
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5265456
BAD DOOR
predicted q value [1.220499]
actual q value 1.2213539
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256238
BAD DOOR
predicted q value [1.2208319]
actual q value 1.2213581
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5260398
BAD DOOR
predicted q value [1.2210687]
actual q value 1.2213768
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.526336
BAD DOOR
predicted q value [1.2194182]
actual q value 1.2212849
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242727
BAD DOOR
predicted q value [1.2194182]
actual q value 1.2212894
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242727
BAD DOOR
predicted q value [1.2194182]
actual q value 1.2212832
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242727
BAD DOOR
predicted q value [1.2194182]
actual q value 1.2212806
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242727
BAD DOOR
predicted q value [1.2204459]
actual q value 1.2213519
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255573
BAD DOOR
predicted q value [1.2212665]
actual q value 1.2213826
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5265832
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019231
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018048
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020292
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018593
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017707
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019323
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019763
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016719
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019643
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017407
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501884
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016932
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020363
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020645
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017331
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020237
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502041
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017341
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018742
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017506
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  334
BAD DOOR
predicted q value [1.2192819]
actual q value 1.210778
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241024
BAD DOOR
predicted q value [1.2184725]
actual q value 1.2109601
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230906
BAD DOOR
predicted q value [1.2202185]
actual q value 1.2105563
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5252732
BAD DOOR
predicted q value [1.2188528]
actual q value 1.2108847
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523566
BAD DOOR
predicted q value [1.2188528]
actual q value 1.2108762
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523566
BAD DOOR
predicted q value [1.2193075]
actual q value 1.210778
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241344
BAD DOOR
predicted q value [1.21954]
actual q value 1.2106886
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.524425
BAD DOOR
predicted q value [1.2197084]
actual q value 1.210664
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5246356
BAD DOOR
predicted q value [1.2192625]
actual q value 1.210784
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5240781
BAD DOOR
predicted q value [1.2203505]
actual q value 1.2116457
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254381
BAD DOOR
predicted q value [1.2203505]
actual q value 1.2106576
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254381
BAD DOOR
predicted q value [1.2197208]
actual q value 1.2106451
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.524651
BAD DOOR
predicted q value [1.220005]
actual q value 1.2106061
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5250063
BAD DOOR
predicted q value [1.2202072]
actual q value 1.2105446
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.525259
BAD DOOR
predicted q value [1.2187979]
actual q value 1.2108918
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234973
BAD DOOR
predicted q value [1.2187979]
actual q value 1.2108822
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234973
BAD DOOR
predicted q value [1.2187979]
actual q value 1.2108955
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234973
BAD DOOR
predicted q value [1.2187979]
actual q value 1.210901
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234973
BAD DOOR
predicted q value [1.2196757]
actual q value 1.2106547
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245945
BAD DOOR
predicted q value [1.2203763]
actual q value 1.2110786
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254703
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4958143
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959035
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957342
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4958625
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959292
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4958074
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957743
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4960039
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957832
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959519
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4958436
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959878
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957289
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957075
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959577
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957383
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4957253
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959569
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4958512
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4959443
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  339
BAD DOOR
predicted q value [1.2190863]
actual q value 1.2156923
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238578
BAD DOOR
predicted q value [1.2183406]
actual q value 1.2147167
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229259
BAD DOOR
predicted q value [1.219949]
actual q value 1.2178779
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249362
BAD DOOR
predicted q value [1.2186911]
actual q value 1.2152548
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233638
BAD DOOR
predicted q value [1.2186911]
actual q value 1.2151883
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233638
BAD DOOR
predicted q value [1.2191098]
actual q value 1.2157688
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238872
BAD DOOR
predicted q value [1.2193241]
actual q value 1.2157569
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241551
BAD DOOR
predicted q value [1.219479]
actual q value 1.2160656
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5243487
BAD DOOR
predicted q value [1.2190685]
actual q value 1.2156823
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238357
BAD DOOR
predicted q value [1.2200704]
actual q value 1.217361
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.525088
BAD DOOR
predicted q value [1.2200704]
actual q value 1.2193732
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.525088
BAD DOOR
predicted q value [1.2194906]
actual q value 1.2159538
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5243633
BAD DOOR
predicted q value [1.2197522]
actual q value 1.2164929
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5246903
BAD DOOR
predicted q value [1.2199385]
actual q value 1.2166095
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249231
BAD DOOR
predicted q value [1.2186407]
actual q value 1.2151477
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233009
BAD DOOR
predicted q value [1.2186407]
actual q value 1.2150725
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233009
BAD DOOR
predicted q value [1.2186407]
actual q value 1.215178
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233009
BAD DOOR
predicted q value [1.2186407]
actual q value 1.2152205
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233009
BAD DOOR
predicted q value [1.2194488]
actual q value 1.2158935
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5243111
BAD DOOR
predicted q value [1.220094]
actual q value 1.2193646
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5251174
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004275
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5006276
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002482
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005355
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500685
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004122
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003376
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008523
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003579
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500736
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004935
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008161
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500236
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001885
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007489
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002573
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002279
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007471
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5005103
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5007192
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  344
BAD DOOR
predicted q value [1.2184519]
actual q value 1.2222798
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230649
BAD DOOR
predicted q value [1.2177477]
actual q value 1.2207775
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5221846
BAD DOOR
predicted q value [1.2192665]
actual q value 1.2240846
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5240831
BAD DOOR
predicted q value [1.2180785]
actual q value 1.22142
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5225981
BAD DOOR
predicted q value [1.2180785]
actual q value 1.2214727
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5225981
BAD DOOR
predicted q value [1.218474]
actual q value 1.2222905
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230925
BAD DOOR
predicted q value [1.2186764]
actual q value 1.2229539
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5233456
BAD DOOR
predicted q value [1.2188228]
actual q value 1.2231821
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235286
BAD DOOR
predicted q value [1.218435]
actual q value 1.222233
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230438
BAD DOOR
predicted q value [1.2193815]
actual q value 1.2244925
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242268
BAD DOOR
predicted q value [1.2193815]
actual q value 1.2243487
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242268
BAD DOOR
predicted q value [1.2188338]
actual q value 1.2233064
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235423
BAD DOOR
predicted q value [1.2190807]
actual q value 1.2236772
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238509
BAD DOOR
predicted q value [1.2192568]
actual q value 1.2241535
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.524071
BAD DOOR
predicted q value [1.2180309]
actual q value 1.2213511
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5225387
BAD DOOR
predicted q value [1.2180309]
actual q value 1.2214108
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5225387
BAD DOOR
predicted q value [1.2180309]
actual q value 1.2213271
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5225387
BAD DOOR
predicted q value [1.2180309]
actual q value 1.2212937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5225387
BAD DOOR
predicted q value [1.2187942]
actual q value 1.2232268
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234928
BAD DOOR
predicted q value [1.2194037]
actual q value 1.2244215
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242547
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499814
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998416
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997894
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499829
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998496
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998119
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998016
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998727
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998044
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998566
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998231
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998674
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997878
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997811
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998584
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997907
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997865
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998581
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998255
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998543
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  349
BAD DOOR
predicted q value [1.2196498]
actual q value 1.2059215
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245622
BAD DOOR
predicted q value [1.2190517]
actual q value 1.2096081
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238147
BAD DOOR
predicted q value [1.2203417]
actual q value 1.2073226
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254271
BAD DOOR
predicted q value [1.2193328]
actual q value 1.2074208
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.524166
BAD DOOR
predicted q value [1.2193328]
actual q value 1.2071267
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.524166
BAD DOOR
predicted q value [1.2196686]
actual q value 1.2059145
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245858
BAD DOOR
predicted q value [1.2198404]
actual q value 1.2065163
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5248005
BAD DOOR
predicted q value [1.2199647]
actual q value 1.2066547
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.524956
BAD DOOR
predicted q value [1.2196355]
actual q value 1.2058818
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245444
BAD DOOR
predicted q value [1.2204393]
actual q value 1.2077012
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255492
BAD DOOR
predicted q value [1.2204393]
actual q value 1.2075319
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255492
BAD DOOR
predicted q value [1.2199742]
actual q value 1.2067913
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249677
BAD DOOR
predicted q value [1.220184]
actual q value 1.207008
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5252299
BAD DOOR
predicted q value [1.2203335]
actual q value 1.2074128
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254169
BAD DOOR
predicted q value [1.2192923]
actual q value 1.2076044
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241153
BAD DOOR
predicted q value [1.2192923]
actual q value 1.2072716
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241153
BAD DOOR
predicted q value [1.2192923]
actual q value 1.2077383
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241153
BAD DOOR
predicted q value [1.2192923]
actual q value 1.2079251
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241153
BAD DOOR
predicted q value [1.2199405]
actual q value 1.2067325
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249257
BAD DOOR
predicted q value [1.2204583]
actual q value 1.2075977
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255728
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984546
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984007
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985032
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984254
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983852
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984589
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984789
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983397
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984733
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983714
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984368
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983495
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985062
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985191
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983678
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985005
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985083
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983683
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984324
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983759
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  354
BAD DOOR
predicted q value [1.2193674]
actual q value 1.1998674
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242093
BAD DOOR
predicted q value [1.218853]
actual q value 1.1998957
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235662
BAD DOOR
predicted q value [1.2199624]
actual q value 1.2012558
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249529
BAD DOOR
predicted q value [1.2190946]
actual q value 1.1998854
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238683
BAD DOOR
predicted q value [1.2190946]
actual q value 1.1998829
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238683
BAD DOOR
predicted q value [1.2193836]
actual q value 1.1998682
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5242295
BAD DOOR
predicted q value [1.2195313]
actual q value 1.1998489
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5244141
BAD DOOR
predicted q value [1.2196382]
actual q value 1.199847
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245478
BAD DOOR
predicted q value [1.219355]
actual q value 1.1998684
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5241938
BAD DOOR
predicted q value [1.220046]
actual q value 1.2039629
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5250576
BAD DOOR
predicted q value [1.220046]
actual q value 1.2024692
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5250576
BAD DOOR
predicted q value [1.2196462]
actual q value 1.1998417
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245578
BAD DOOR
predicted q value [1.2198266]
actual q value 1.1998392
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5247833
BAD DOOR
predicted q value [1.2199551]
actual q value 1.2021043
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5249438
BAD DOOR
predicted q value [1.2190598]
actual q value 1.1998857
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238248
BAD DOOR
predicted q value [1.2190598]
actual q value 1.1998829
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238248
BAD DOOR
predicted q value [1.2190598]
actual q value 1.1998868
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238248
BAD DOOR
predicted q value [1.2190598]
actual q value 1.1998885
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5238248
BAD DOOR
predicted q value [1.2196172]
actual q value 1.1998432
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5245216
BAD DOOR
predicted q value [1.2200625]
actual q value 1.2029266
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.525078
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015082
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501749
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012922
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016383
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018182
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014895
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014001
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5020194
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014244
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018792
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015875
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5019759
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012779
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012206
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501895
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013036
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012681
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018928
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5016077
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018592
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  359
BAD DOOR
predicted q value [1.2183826]
actual q value 1.2272888
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229783
BAD DOOR
predicted q value [1.2179546]
actual q value 1.2274094
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5224433
BAD DOOR
predicted q value [1.2188778]
actual q value 1.2271233
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235972
BAD DOOR
predicted q value [1.2181557]
actual q value 1.2273775
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226947
BAD DOOR
predicted q value [1.2181557]
actual q value 1.2273569
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226947
BAD DOOR
predicted q value [1.2183961]
actual q value 1.2272992
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229951
BAD DOOR
predicted q value [1.218519]
actual q value 1.227174
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5231488
BAD DOOR
predicted q value [1.2186079]
actual q value 1.2271818
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5232599
BAD DOOR
predicted q value [1.2183723]
actual q value 1.2272959
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229654
BAD DOOR
predicted q value [1.2189474]
actual q value 1.2270398
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5236843
BAD DOOR
predicted q value [1.2189474]
actual q value 1.2270958
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5236843
BAD DOOR
predicted q value [1.2186147]
actual q value 1.2271404
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5232683
BAD DOOR
predicted q value [1.2187647]
actual q value 1.2271593
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234559
BAD DOOR
predicted q value [1.2188717]
actual q value 1.2270896
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235896
BAD DOOR
predicted q value [1.2181269]
actual q value 1.2273729
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226586
BAD DOOR
predicted q value [1.2181269]
actual q value 1.2273495
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226586
BAD DOOR
predicted q value [1.2181269]
actual q value 1.2273822
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226586
BAD DOOR
predicted q value [1.2181269]
actual q value 1.2273954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5226586
BAD DOOR
predicted q value [1.2185906]
actual q value 1.2271456
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5232383
BAD DOOR
predicted q value [1.2189609]
actual q value 1.2270823
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5237011
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012963
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501095
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014768
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011876
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5010374
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501312
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013866
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5008688
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013664
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009861
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012299
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009053
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014888
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5015368
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500973
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014675
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501497
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009745
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012131
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501003
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  364
BAD DOOR
predicted q value [1.2115725]
actual q value 1.2152038
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5144657
BAD DOOR
predicted q value [1.2112625]
actual q value 1.2165462
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.514078
BAD DOOR
predicted q value [1.2119312]
actual q value 1.2134047
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.514914
BAD DOOR
predicted q value [1.211408]
actual q value 1.216147
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.51426
BAD DOOR
predicted q value [1.211408]
actual q value 1.215954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.51426
BAD DOOR
predicted q value [1.2115823]
actual q value 1.2152944
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5144778
BAD DOOR
predicted q value [1.2116712]
actual q value 1.2140598
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5145891
BAD DOOR
predicted q value [1.211736]
actual q value 1.2140887
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5146699
BAD DOOR
predicted q value [1.2115651]
actual q value 1.2152743
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5144564
BAD DOOR
predicted q value [1.2119817]
actual q value 1.2125883
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5149771
BAD DOOR
predicted q value [1.2119817]
actual q value 1.2131146
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5149771
BAD DOOR
predicted q value [1.2117405]
actual q value 1.2136986
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5146756
BAD DOOR
predicted q value [1.2118495]
actual q value 1.2137994
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5148119
BAD DOOR
predicted q value [1.2119268]
actual q value 1.213094
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5149086
BAD DOOR
predicted q value [1.2113872]
actual q value 1.2161183
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.514234
BAD DOOR
predicted q value [1.2113872]
actual q value 1.2159
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.514234
BAD DOOR
predicted q value [1.2113872]
actual q value 1.2162063
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.514234
BAD DOOR
predicted q value [1.2113872]
actual q value 1.216329
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.514234
BAD DOOR
predicted q value [1.2117233]
actual q value 1.2137573
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5146542
BAD DOOR
predicted q value [1.2119915]
actual q value 1.2129803
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5149894
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054858
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055301
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.505446
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055099
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055429
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054822
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054657
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055801
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054703
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055542
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055003
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055721
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054433
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054327
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055571
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054479
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5054414
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055566
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055041
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5055504
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  369
BAD DOOR
predicted q value [1.2083912]
actual q value 1.1985921
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.510489
BAD DOOR
predicted q value [1.2081244]
actual q value 1.1982154
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5101554
BAD DOOR
predicted q value [1.2087]
actual q value 1.1990644
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.510875
BAD DOOR
predicted q value [1.2082497]
actual q value 1.1983579
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5103121
BAD DOOR
predicted q value [1.2082497]
actual q value 1.1983867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5103121
BAD DOOR
predicted q value [1.2083995]
actual q value 1.1985843
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104995
BAD DOOR
predicted q value [1.2084763]
actual q value 1.1988183
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5105953
BAD DOOR
predicted q value [1.2085316]
actual q value 1.198851
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106645
BAD DOOR
predicted q value [1.2083848]
actual q value 1.1985773
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.510481
BAD DOOR
predicted q value [1.2087435]
actual q value 1.1992145
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109293
BAD DOOR
predicted q value [1.2087435]
actual q value 1.1991365
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109293
BAD DOOR
predicted q value [1.2085359]
actual q value 1.1989115
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106698
BAD DOOR
predicted q value [1.2086296]
actual q value 1.198959
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.510787
BAD DOOR
predicted q value [1.2086961]
actual q value 1.199108
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108702
BAD DOOR
predicted q value [1.2082316]
actual q value 1.1983503
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102894
BAD DOOR
predicted q value [1.2082316]
actual q value 1.1983826
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102894
BAD DOOR
predicted q value [1.2082316]
actual q value 1.1983371
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102894
BAD DOOR
predicted q value [1.2082316]
actual q value 1.1983191
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102894
BAD DOOR
predicted q value [1.2085209]
actual q value 1.1988928
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106511
BAD DOOR
predicted q value [1.2087519]
actual q value 1.1991619
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109398
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003035
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003912
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002246
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003508
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004165
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002639
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004897
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002729
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004387
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003324
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004739
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002193
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001985
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004445
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002286
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002158
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004437
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003397
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004315
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  374
BAD DOOR
predicted q value [1.2089009]
actual q value 1.2157267
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5111262
BAD DOOR
predicted q value [1.2087098]
actual q value 1.2130599
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108873
BAD DOOR
predicted q value [1.2091224]
actual q value 1.2204812
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.511403
BAD DOOR
predicted q value [1.2087996]
actual q value 1.213293
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109996
BAD DOOR
predicted q value [1.2087996]
actual q value 1.2137072
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109996
BAD DOOR
predicted q value [1.2089072]
actual q value 1.2155561
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.511134
BAD DOOR
predicted q value [1.2089618]
actual q value 1.218428
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5112023
BAD DOOR
predicted q value [1.2090017]
actual q value 1.2185267
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.511252
BAD DOOR
predicted q value [1.2088964]
actual q value 1.2155569
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5111204
BAD DOOR
predicted q value [1.2091535]
actual q value 1.222359
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.511442
BAD DOOR
predicted q value [1.2091535]
actual q value 1.2212297
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.511442
BAD DOOR
predicted q value [1.2090048]
actual q value 1.219376
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.511256
BAD DOOR
predicted q value [1.2090718]
actual q value 1.2194304
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5113397
BAD DOOR
predicted q value [1.2091198]
actual q value 1.2211373
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5113997
BAD DOOR
predicted q value [1.2087867]
actual q value 1.2133021
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109835
BAD DOOR
predicted q value [1.2087867]
actual q value 1.2137712
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109835
BAD DOOR
predicted q value [1.2087867]
actual q value 1.2131133
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109835
BAD DOOR
predicted q value [1.2087867]
actual q value 1.2130747
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5109835
BAD DOOR
predicted q value [1.2089939]
actual q value 1.2192067
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5112424
BAD DOOR
predicted q value [1.2091596]
actual q value 1.2215426
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5114495
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000777
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998629
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002708
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999619
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998009
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000948
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001748
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996212
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001528
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997464
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000069
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.49966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002836
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997324
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002611
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002923
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997343
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999889
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997644
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  379
BAD DOOR
predicted q value [1.2083609]
actual q value 1.2068143
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104511
BAD DOOR
predicted q value [1.208339]
actual q value 1.2066432
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104238
BAD DOOR
predicted q value [1.2083862]
actual q value 1.2069893
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104828
BAD DOOR
predicted q value [1.2083493]
actual q value 1.2067454
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104367
BAD DOOR
predicted q value [1.2083493]
actual q value 1.2067273
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104367
BAD DOOR
predicted q value [1.2083619]
actual q value 1.2068322
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104523
BAD DOOR
predicted q value [1.208368]
actual q value 1.2068017
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104599
BAD DOOR
predicted q value [1.2083725]
actual q value 1.2068663
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104656
BAD DOOR
predicted q value [1.2083604]
actual q value 1.2068138
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104506
BAD DOOR
predicted q value [1.2083899]
actual q value 1.2069609
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104873
BAD DOOR
predicted q value [1.2083899]
actual q value 1.2070105
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104873
BAD DOOR
predicted q value [1.2083728]
actual q value 1.2068341
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104661
BAD DOOR
predicted q value [1.2083805]
actual q value 1.2069479
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104756
BAD DOOR
predicted q value [1.208386]
actual q value 1.2069559
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104824
BAD DOOR
predicted q value [1.2083479]
actual q value 1.2067226
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104349
BAD DOOR
predicted q value [1.2083479]
actual q value 1.206702
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104349
BAD DOOR
predicted q value [1.2083479]
actual q value 1.2067308
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104349
BAD DOOR
predicted q value [1.2083479]
actual q value 1.2067425
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104349
BAD DOOR
predicted q value [1.2083716]
actual q value 1.2068229
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104645
BAD DOOR
predicted q value [1.2083905]
actual q value 1.2070073
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104882
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976082
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4978101
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974269
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977171
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4978681
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975922
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975173
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980369
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975377
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979191
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976747
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980004
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974148
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4973667
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979324
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974363
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4974067
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979305
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976915
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4979024
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  384
BAD DOOR
predicted q value [1.2048004]
actual q value 1.1914244
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060005
BAD DOOR
predicted q value [1.2048254]
actual q value 1.190951
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060318
BAD DOOR
predicted q value [1.2047714]
actual q value 1.1919551
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059643
BAD DOOR
predicted q value [1.2048137]
actual q value 1.191189
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060171
BAD DOOR
predicted q value [1.2048137]
actual q value 1.1911759
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060171
BAD DOOR
predicted q value [1.2047997]
actual q value 1.1914482
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059996
BAD DOOR
predicted q value [1.2047924]
actual q value 1.1915268
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059905
BAD DOOR
predicted q value [1.2047873]
actual q value 1.1916459
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059841
BAD DOOR
predicted q value [1.204801]
actual q value 1.1914155
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060012
BAD DOOR
predicted q value [1.2047673]
actual q value 1.1919919
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059592
BAD DOOR
predicted q value [1.2047673]
actual q value 1.1920276
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059592
BAD DOOR
predicted q value [1.2047868]
actual q value 1.1916283
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059835
BAD DOOR
predicted q value [1.2047781]
actual q value 1.191833
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059726
BAD DOOR
predicted q value [1.2047718]
actual q value 1.1919262
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059648
BAD DOOR
predicted q value [1.2048153]
actual q value 1.191149
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060191
BAD DOOR
predicted q value [1.2048153]
actual q value 1.1911342
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060191
BAD DOOR
predicted q value [1.2048153]
actual q value 1.191155
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060191
BAD DOOR
predicted q value [1.2048153]
actual q value 1.1911631
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5060191
BAD DOOR
predicted q value [1.2047882]
actual q value 1.1916007
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059853
BAD DOOR
predicted q value [1.2047666]
actual q value 1.1920363
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5059583
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999478
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000112
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998908
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499982
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000296
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999428
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999192
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000826
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999256
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000458
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999688
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000712
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499887
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499872
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000497
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998938
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998845
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000491
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499974
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000404
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  389
BAD DOOR
predicted q value [1.2059721]
actual q value 1.1987827
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5074651
BAD DOOR
predicted q value [1.2058499]
actual q value 1.1986861
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073124
BAD DOOR
predicted q value [1.2061132]
actual q value 1.1989163
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076416
BAD DOOR
predicted q value [1.2059072]
actual q value 1.198711
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073841
BAD DOOR
predicted q value [1.2059072]
actual q value 1.1987281
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073841
BAD DOOR
predicted q value [1.2059759]
actual q value 1.198774
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5074699
BAD DOOR
predicted q value [1.206011]
actual q value 1.198877
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5075138
BAD DOOR
predicted q value [1.2060364]
actual q value 1.1988698
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5075456
BAD DOOR
predicted q value [1.2059692]
actual q value 1.198777
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5074615
BAD DOOR
predicted q value [1.2061331]
actual q value 1.1989851
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076665
BAD DOOR
predicted q value [1.2061331]
actual q value 1.1989385
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076665
BAD DOOR
predicted q value [1.2060382]
actual q value 1.198904
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5075477
BAD DOOR
predicted q value [1.2060812]
actual q value 1.1988873
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076014
BAD DOOR
predicted q value [1.2061116]
actual q value 1.1989442
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076394
BAD DOOR
predicted q value [1.2058991]
actual q value 1.198715
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073739
BAD DOOR
predicted q value [1.2058991]
actual q value 1.1987343
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073739
BAD DOOR
predicted q value [1.2058991]
actual q value 1.1987071
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073739
BAD DOOR
predicted q value [1.2058991]
actual q value 1.1986964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073739
BAD DOOR
predicted q value [1.2060314]
actual q value 1.1989002
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5075393
BAD DOOR
predicted q value [1.2061371]
actual q value 1.1989496
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5076714
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984267
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983402
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498504
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.49838
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983156
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984332
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984654
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982433
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984565
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982936
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983982
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982588
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985092
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985297
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498288
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984999
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985126
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982888
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983909
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983008
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  394
BAD DOOR
predicted q value [1.2071059]
actual q value 1.2074081
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088823
BAD DOOR
predicted q value [1.2070429]
actual q value 1.2077231
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088036
BAD DOOR
predicted q value [1.2071786]
actual q value 1.2070575
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089732
BAD DOOR
predicted q value [1.2070723]
actual q value 1.2075624
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088403
BAD DOOR
predicted q value [1.2070723]
actual q value 1.2075729
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088403
BAD DOOR
predicted q value [1.2071078]
actual q value 1.2073909
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088847
BAD DOOR
predicted q value [1.2071259]
actual q value 1.207347
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089073
BAD DOOR
predicted q value [1.207139]
actual q value 1.2072647
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089238
BAD DOOR
predicted q value [1.2071043]
actual q value 1.2074137
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088804
BAD DOOR
predicted q value [1.2071888]
actual q value 1.2070388
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089861
BAD DOOR
predicted q value [1.2071888]
actual q value 1.2070099
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089861
BAD DOOR
predicted q value [1.20714]
actual q value 1.20728
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.508925
BAD DOOR
predicted q value [1.207162]
actual q value 1.2071383
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089525
BAD DOOR
predicted q value [1.2071778]
actual q value 1.2070798
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089722
BAD DOOR
predicted q value [1.2070682]
actual q value 1.2075901
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088352
BAD DOOR
predicted q value [1.2070682]
actual q value 1.2076023
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088352
BAD DOOR
predicted q value [1.2070682]
actual q value 1.2075853
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088352
BAD DOOR
predicted q value [1.2070682]
actual q value 1.2075787
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5088352
BAD DOOR
predicted q value [1.2071364]
actual q value 1.2072986
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089204
BAD DOOR
predicted q value [1.2071909]
actual q value 1.207005
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5089886
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002947
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003593
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002367
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003295
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003779
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002897
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002657
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004318
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002722
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003943
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003159
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004202
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002329
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002177
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003984
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002398
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002303
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003979
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003214
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003889
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  399
BAD DOOR
predicted q value [1.2098348]
actual q value 1.2171533
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122936
BAD DOOR
predicted q value [1.2098181]
actual q value 1.2172619
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122727
BAD DOOR
predicted q value [1.2098541]
actual q value 1.2170124
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123177
BAD DOOR
predicted q value [1.2098262]
actual q value 1.2172248
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122827
BAD DOOR
predicted q value [1.2098262]
actual q value 1.2172133
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122827
BAD DOOR
predicted q value [1.2098353]
actual q value 1.2171578
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122942
BAD DOOR
predicted q value [1.20984]
actual q value 1.2170751
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123
BAD DOOR
predicted q value [1.2098436]
actual q value 1.2170713
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123045
BAD DOOR
predicted q value [1.2098345]
actual q value 1.2171582
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122931
BAD DOOR
predicted q value [1.2098567]
actual q value 1.2169585
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.512321
BAD DOOR
predicted q value [1.2098567]
actual q value 1.2169905
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.512321
BAD DOOR
predicted q value [1.2098439]
actual q value 1.2170472
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123049
BAD DOOR
predicted q value [1.2098496]
actual q value 1.2170438
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.512312
BAD DOOR
predicted q value [1.2098538]
actual q value 1.216994
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123172
BAD DOOR
predicted q value [1.2098249]
actual q value 1.2172248
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122812
BAD DOOR
predicted q value [1.2098249]
actual q value 1.2172118
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122812
BAD DOOR
predicted q value [1.2098249]
actual q value 1.2172304
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122812
BAD DOOR
predicted q value [1.2098249]
actual q value 1.2172377
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5122812
BAD DOOR
predicted q value [1.2098429]
actual q value 1.2170522
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123036
BAD DOOR
predicted q value [1.2098572]
actual q value 1.2169815
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123215
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996321
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995887
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996713
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996088
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995762
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996357
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996519
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995397
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996474
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995651
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996178
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995477
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996738
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996842
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995623
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996692
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996756
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995627
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996141
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995689
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  404
BAD DOOR
predicted q value [1.2122765]
actual q value 1.2075282
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153456
BAD DOOR
predicted q value [1.2122895]
actual q value 1.207584
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153618
BAD DOOR
predicted q value [1.2122618]
actual q value 1.2074643
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153272
BAD DOOR
predicted q value [1.2122833]
actual q value 1.2075573
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.515354
BAD DOOR
predicted q value [1.2122833]
actual q value 1.2075578
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.515354
BAD DOOR
predicted q value [1.2122761]
actual q value 1.2075262
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153451
BAD DOOR
predicted q value [1.2122724]
actual q value 1.2075123
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153404
BAD DOOR
predicted q value [1.21227]
actual q value 1.2075
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153375
BAD DOOR
predicted q value [1.2122768]
actual q value 1.2075295
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.515346
BAD DOOR
predicted q value [1.2122598]
actual q value 1.2074568
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153247
BAD DOOR
predicted q value [1.2122598]
actual q value 1.2074554
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153247
BAD DOOR
predicted q value [1.2122695]
actual q value 1.2075
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.515337
BAD DOOR
predicted q value [1.2122653]
actual q value 1.207479
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153315
BAD DOOR
predicted q value [1.2122619]
actual q value 1.2074659
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153275
BAD DOOR
predicted q value [1.2122843]
actual q value 1.2075613
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153553
BAD DOOR
predicted q value [1.2122843]
actual q value 1.2075617
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153553
BAD DOOR
predicted q value [1.2122843]
actual q value 1.2075611
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153553
BAD DOOR
predicted q value [1.2122843]
actual q value 1.2075609
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153553
BAD DOOR
predicted q value [1.2122701]
actual q value 1.2075031
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153377
BAD DOOR
predicted q value [1.2122593]
actual q value 1.207454
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5153241
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001026
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000476
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001516
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500073
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500032
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001068
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001271
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499986
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001216
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000181
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000844
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499996
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500155
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001681
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000145
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001491
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001571
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000148
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000798
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000225
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  409
BAD DOOR
predicted q value [1.2152599]
actual q value 1.2182722
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190749
BAD DOOR
predicted q value [1.2153133]
actual q value 1.2180243
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191417
BAD DOOR
predicted q value [1.2151983]
actual q value 1.2185214
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5189979
BAD DOOR
predicted q value [1.2152884]
actual q value 1.2181764
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191104
BAD DOOR
predicted q value [1.2152884]
actual q value 1.2181467
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191104
BAD DOOR
predicted q value [1.2152584]
actual q value 1.2183006
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.519073
BAD DOOR
predicted q value [1.2152431]
actual q value 1.2182411
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190539
BAD DOOR
predicted q value [1.2152319]
actual q value 1.2183399
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190399
BAD DOOR
predicted q value [1.2152612]
actual q value 1.2182724
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190766
BAD DOOR
predicted q value [1.2151896]
actual q value 1.2184699
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5189869
BAD DOOR
predicted q value [1.2151896]
actual q value 1.2185508
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5189869
BAD DOOR
predicted q value [1.2152312]
actual q value 1.218287
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190389
BAD DOOR
predicted q value [1.2152123]
actual q value 1.2184621
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190154
BAD DOOR
predicted q value [1.2151991]
actual q value 1.2184671
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5189989
BAD DOOR
predicted q value [1.2152919]
actual q value 1.2181413
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191149
BAD DOOR
predicted q value [1.2152919]
actual q value 1.2181077
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191149
BAD DOOR
predicted q value [1.2152919]
actual q value 1.2181549
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191149
BAD DOOR
predicted q value [1.2152919]
actual q value 1.2181737
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191149
BAD DOOR
predicted q value [1.215234]
actual q value 1.2182705
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190426
BAD DOOR
predicted q value [1.2151878]
actual q value 1.2185445
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5189848
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012794
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.50137
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011984
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013282
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013958
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012724
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012388
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014713
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012479
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014187
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013093
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014551
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501193
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011714
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014244
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012026
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011892
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014237
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013168
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501411
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  414
BAD DOOR
predicted q value [1.2184235]
actual q value 1.2171524
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230293
BAD DOOR
predicted q value [1.218497]
actual q value 1.2173069
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5231214
BAD DOOR
predicted q value [1.2183383]
actual q value 1.2170393
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229229
BAD DOOR
predicted q value [1.2184626]
actual q value 1.2171724
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230782
BAD DOOR
predicted q value [1.2184626]
actual q value 1.217224
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230782
BAD DOOR
predicted q value [1.2184212]
actual q value 1.2171118
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230265
BAD DOOR
predicted q value [1.2184]
actual q value 1.2172947
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523
BAD DOOR
predicted q value [1.2183846]
actual q value 1.2171803
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229808
BAD DOOR
predicted q value [1.2184253]
actual q value 1.2171458
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230316
BAD DOOR
predicted q value [1.2183262]
actual q value 1.217174
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229077
BAD DOOR
predicted q value [1.2183262]
actual q value 1.2170333
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229077
BAD DOOR
predicted q value [1.2183836]
actual q value 1.2172765
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229794
BAD DOOR
predicted q value [1.2183577]
actual q value 1.2170694
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229471
BAD DOOR
predicted q value [1.2183393]
actual q value 1.2171297
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229242
BAD DOOR
predicted q value [1.2184675]
actual q value 1.2172148
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230844
BAD DOOR
predicted q value [1.2184675]
actual q value 1.2172732
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230844
BAD DOOR
predicted q value [1.2184675]
actual q value 1.2171912
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230844
BAD DOOR
predicted q value [1.2184675]
actual q value 1.2171583
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5230844
BAD DOOR
predicted q value [1.2183876]
actual q value 1.2172897
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229845
BAD DOOR
predicted q value [1.218324]
actual q value 1.2170529
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5229049
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023196
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022663
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023671
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022906
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022509
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023235
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023435
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022066
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023379
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022376
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023019
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022161
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023704
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023832
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.502234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023646
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5023725
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022345
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022974
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5022418
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  419
BAD DOOR
predicted q value [1.2204323]
actual q value 1.2265576
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255404
BAD DOOR
predicted q value [1.220556]
actual q value 1.2260668
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256951
BAD DOOR
predicted q value [1.2202892]
actual q value 1.2269135
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5253615
BAD DOOR
predicted q value [1.2204978]
actual q value 1.2264967
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256222
BAD DOOR
predicted q value [1.2204978]
actual q value 1.2263305
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256222
BAD DOOR
predicted q value [1.2204285]
actual q value 1.2266876
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255356
BAD DOOR
predicted q value [1.220393]
actual q value 1.2260977
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254912
BAD DOOR
predicted q value [1.2203672]
actual q value 1.2264647
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.525459
BAD DOOR
predicted q value [1.2204354]
actual q value 1.226579
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5255442
BAD DOOR
predicted q value [1.220269]
actual q value 1.2264793
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5253363
BAD DOOR
predicted q value [1.220269]
actual q value 1.2269322
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5253363
BAD DOOR
predicted q value [1.2203652]
actual q value 1.2261547
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254564
BAD DOOR
predicted q value [1.2203219]
actual q value 1.2268189
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254023
BAD DOOR
predicted q value [1.2202911]
actual q value 1.2266232
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5253639
BAD DOOR
predicted q value [1.2205063]
actual q value 1.2263608
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256329
BAD DOOR
predicted q value [1.2205063]
actual q value 1.2261727
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256329
BAD DOOR
predicted q value [1.2205063]
actual q value 1.2264365
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256329
BAD DOOR
predicted q value [1.2205063]
actual q value 1.2265421
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5256329
BAD DOOR
predicted q value [1.2203722]
actual q value 1.226113
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5254653
BAD DOOR
predicted q value [1.2202652]
actual q value 1.2268686
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5253315
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013461
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013951
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501302
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013726
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501409
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013422
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013239
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014502
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501329
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014216
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013622
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014412
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012991
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012875
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014248
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013043
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012971
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014244
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013664
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5014176
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  424
BAD DOOR
predicted q value [1.2216699]
actual q value 1.215687
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5270875
BAD DOOR
predicted q value [1.2218193]
actual q value 1.2155008
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5272741
BAD DOOR
predicted q value [1.2214974]
actual q value 1.2158859
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5268718
BAD DOOR
predicted q value [1.2217492]
actual q value 1.2156038
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5271865
BAD DOOR
predicted q value [1.2217492]
actual q value 1.215591
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5271865
BAD DOOR
predicted q value [1.2216654]
actual q value 1.2157018
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5270817
BAD DOOR
predicted q value [1.2216225]
actual q value 1.2156986
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5270281
BAD DOOR
predicted q value [1.2215914]
actual q value 1.2157578
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5269892
BAD DOOR
predicted q value [1.2216737]
actual q value 1.2156851
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5270921
BAD DOOR
predicted q value [1.221473]
actual q value 1.2158763
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5268412
BAD DOOR
predicted q value [1.221473]
actual q value 1.2159115
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5268412
BAD DOOR
predicted q value [1.2215891]
actual q value 1.2157362
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5269864
BAD DOOR
predicted q value [1.2215366]
actual q value 1.2158395
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5269208
BAD DOOR
predicted q value [1.2214994]
actual q value 1.2158613
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5268743
BAD DOOR
predicted q value [1.2217592]
actual q value 1.2155833
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.527199
BAD DOOR
predicted q value [1.2217592]
actual q value 1.2155687
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.527199
BAD DOOR
predicted q value [1.2217592]
actual q value 1.2155892
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.527199
BAD DOOR
predicted q value [1.2217592]
actual q value 1.2155974
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.527199
BAD DOOR
predicted q value [1.2215974]
actual q value 1.2157246
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5269969
BAD DOOR
predicted q value [1.2214682]
actual q value 1.2159113
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5268353
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026844
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027752
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026028
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027333
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028012
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026772
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026433
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028771
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026526
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028243
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027144
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028607
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025975
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025759
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028303
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5026071
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5025938
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028293
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5027218
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5028167
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  429
BAD DOOR
predicted q value [1.2190238]
actual q value 1.1976163
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5237797
BAD DOOR
predicted q value [1.2192115]
actual q value 1.1970118
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5240144
BAD DOOR
predicted q value [1.2188065]
actual q value 1.1986823
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235081
BAD DOOR
predicted q value [1.2191234]
actual q value 1.1969513
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239042
BAD DOOR
predicted q value [1.2191234]
actual q value 1.1972388
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239042
BAD DOOR
predicted q value [1.2190177]
actual q value 1.1974374
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5237722
BAD DOOR
predicted q value [1.2189639]
actual q value 1.1988757
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5237048
BAD DOOR
predicted q value [1.2189248]
actual q value 1.1985427
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.523656
BAD DOOR
predicted q value [1.2190282]
actual q value 1.1975449
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5237854
BAD DOOR
predicted q value [1.218776]
actual q value 1.1996704
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234699
BAD DOOR
predicted q value [1.218776]
actual q value 1.1988869
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234699
BAD DOOR
predicted q value [1.2189219]
actual q value 1.1991018
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5236524
BAD DOOR
predicted q value [1.2188561]
actual q value 1.1984625
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235702
BAD DOOR
predicted q value [1.2188092]
actual q value 1.1991644
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5235115
BAD DOOR
predicted q value [1.219136]
actual q value 1.1970882
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239199
BAD DOOR
predicted q value [1.219136]
actual q value 1.1974134
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239199
BAD DOOR
predicted q value [1.219136]
actual q value 1.1969571
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239199
BAD DOOR
predicted q value [1.219136]
actual q value 1.1967744
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5239199
BAD DOOR
predicted q value [1.2189324]
actual q value 1.1990927
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5236654
BAD DOOR
predicted q value [1.21877]
actual q value 1.1990428
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5234625
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046055
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046145
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5045974
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046105
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504617
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046048
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046015
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046245
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046024
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046194
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046086
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046229
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504597
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504595
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046198
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504598
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5045966
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046196
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046093
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046186
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  434
BAD DOOR
predicted q value [1.216989]
actual q value 1.2163305
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5212363
BAD DOOR
predicted q value [1.2172028]
actual q value 1.2154001
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5215034
BAD DOOR
predicted q value [1.2167418]
actual q value 1.2170122
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5209273
BAD DOOR
predicted q value [1.2171023]
actual q value 1.216208
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5213779
BAD DOOR
predicted q value [1.2171023]
actual q value 1.2158986
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5213779
BAD DOOR
predicted q value [1.2169822]
actual q value 1.2165726
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5212278
BAD DOOR
predicted q value [1.216921]
actual q value 1.2154796
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5211512
BAD DOOR
predicted q value [1.2168766]
actual q value 1.2161663
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5210958
BAD DOOR
predicted q value [1.2169942]
actual q value 1.2163694
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5212427
BAD DOOR
predicted q value [1.2167072]
actual q value 1.2162067
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.520884
BAD DOOR
predicted q value [1.2167072]
actual q value 1.2170498
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.520884
BAD DOOR
predicted q value [1.2168734]
actual q value 1.2155893
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5210917
BAD DOOR
predicted q value [1.2167982]
actual q value 1.2168317
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5209978
BAD DOOR
predicted q value [1.2167448]
actual q value 1.2164714
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.520931
BAD DOOR
predicted q value [1.2171167]
actual q value 1.215954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5213959
BAD DOOR
predicted q value [1.2171167]
actual q value 1.2156038
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5213959
BAD DOOR
predicted q value [1.2171167]
actual q value 1.2160947
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5213959
BAD DOOR
predicted q value [1.2171167]
actual q value 1.2162914
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5213959
BAD DOOR
predicted q value [1.2168852]
actual q value 1.2155106
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5211065
BAD DOOR
predicted q value [1.2167003]
actual q value 1.216932
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5208755
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046839
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046692
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046967
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046759
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046649
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046849
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046903
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046531
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046889
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046613
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504679
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046554
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046976
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504701
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046604
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504696
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046983
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046606
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046778
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5046625
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  439
BAD DOOR
predicted q value [1.2150944]
actual q value 1.2075467
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5188681
BAD DOOR
predicted q value [1.2153511]
actual q value 1.2070308
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5191889
BAD DOOR
predicted q value [1.2147975]
actual q value 1.2079132
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5184969
BAD DOOR
predicted q value [1.2152306]
actual q value 1.2074898
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190382
BAD DOOR
predicted q value [1.2152306]
actual q value 1.2073091
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190382
BAD DOOR
predicted q value [1.2150865]
actual q value 1.2076875
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5188581
BAD DOOR
predicted q value [1.2150127]
actual q value 1.2070404
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5187658
BAD DOOR
predicted q value [1.2149591]
actual q value 1.2074362
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5186989
BAD DOOR
predicted q value [1.2151006]
actual q value 1.2075701
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5188758
BAD DOOR
predicted q value [1.2147557]
actual q value 1.2074378
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5184445
BAD DOOR
predicted q value [1.2147557]
actual q value 1.2079306
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5184445
BAD DOOR
predicted q value [1.2149553]
actual q value 1.2070982
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5186942
BAD DOOR
predicted q value [1.2148651]
actual q value 1.2078149
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5185814
BAD DOOR
predicted q value [1.2148011]
actual q value 1.2075974
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5185013
BAD DOOR
predicted q value [1.2152479]
actual q value 1.2073433
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190599
BAD DOOR
predicted q value [1.2152479]
actual q value 1.2071385
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190599
BAD DOOR
predicted q value [1.2152479]
actual q value 1.2074256
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190599
BAD DOOR
predicted q value [1.2152479]
actual q value 1.2075408
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5190599
BAD DOOR
predicted q value [1.2149698]
actual q value 1.2070539
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5187122
BAD DOOR
predicted q value [1.2147474]
actual q value 1.2078607
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5184343
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498249
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982152
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982796
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982307
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982057
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982517
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982643
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981774
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498261
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981971
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498238
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981834
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982815
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982896
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981948
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982779
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982828
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498195
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498235
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981999
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  444
BAD DOOR
predicted q value [1.2100196]
actual q value 1.2023046
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5125245
BAD DOOR
predicted q value [1.2103492]
actual q value 1.2023258
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5129365
BAD DOOR
predicted q value [1.2096384]
actual q value 1.2022879
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.512048
BAD DOOR
predicted q value [1.2101943]
actual q value 1.2023082
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.512743
BAD DOOR
predicted q value [1.2101943]
actual q value 1.2023146
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.512743
BAD DOOR
predicted q value [1.2100093]
actual q value 1.2022994
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5125116
BAD DOOR
predicted q value [1.2099146]
actual q value 1.2023215
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123932
BAD DOOR
predicted q value [1.2098461]
actual q value 1.2023067
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123076
BAD DOOR
predicted q value [1.2100276]
actual q value 1.2023036
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5125345
BAD DOOR
predicted q value [1.2095846]
actual q value 1.2023044
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5119808
BAD DOOR
predicted q value [1.2095846]
actual q value 1.2022867
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5119808
BAD DOOR
predicted q value [1.209841]
actual q value 1.2023187
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123012
BAD DOOR
predicted q value [1.2097251]
actual q value 1.2022921
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5121565
BAD DOOR
predicted q value [1.209643]
actual q value 1.202299
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5120537
BAD DOOR
predicted q value [1.2102168]
actual q value 1.2023137
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5127709
BAD DOOR
predicted q value [1.2102168]
actual q value 1.2023208
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5127709
BAD DOOR
predicted q value [1.2102168]
actual q value 1.2023107
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5127709
BAD DOOR
predicted q value [1.2102168]
actual q value 1.2023065
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5127709
BAD DOOR
predicted q value [1.2098594]
actual q value 1.2023205
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5123242
BAD DOOR
predicted q value [1.2095741]
actual q value 1.2022891
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5119677
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011991
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012662
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011392
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012352
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012853
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.501194
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011692
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013413
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011759
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013021
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012212
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013292
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011191
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013065
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011423
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5011326
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5013058
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012269
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5012968
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  449
BAD DOOR
predicted q value [1.2085121]
actual q value 1.178138
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106401
BAD DOOR
predicted q value [1.2088583]
actual q value 1.1772463
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5110729
BAD DOOR
predicted q value [1.2081114]
actual q value 1.1789827
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5101392
BAD DOOR
predicted q value [1.2086955]
actual q value 1.178205
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108694
BAD DOOR
predicted q value [1.2086955]
actual q value 1.1777546
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108694
BAD DOOR
predicted q value [1.2085012]
actual q value 1.1784761
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106266
BAD DOOR
predicted q value [1.2084017]
actual q value 1.1767519
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5105021
BAD DOOR
predicted q value [1.2083298]
actual q value 1.1776552
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104122
BAD DOOR
predicted q value [1.2085204]
actual q value 1.1782057
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5106505
BAD DOOR
predicted q value [1.2080551]
actual q value 1.1773472
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5100689
BAD DOOR
predicted q value [1.2080551]
actual q value 1.17883
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5100689
BAD DOOR
predicted q value [1.2083242]
actual q value 1.1768082
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104053
BAD DOOR
predicted q value [1.2082028]
actual q value 1.1784544
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5102535
BAD DOOR
predicted q value [1.2081163]
actual q value 1.1778144
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5101454
BAD DOOR
predicted q value [1.208719]
actual q value 1.1778665
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108987
BAD DOOR
predicted q value [1.208719]
actual q value 1.1773568
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108987
BAD DOOR
predicted q value [1.208719]
actual q value 1.1780715
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108987
BAD DOOR
predicted q value [1.208719]
actual q value 1.1783577
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5108987
BAD DOOR
predicted q value [1.2083437]
actual q value 1.1767195
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5104296
BAD DOOR
predicted q value [1.208044]
actual q value 1.1783882
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5100551
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992296
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997007
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988067
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994838
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998358
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991927
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4990176
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002301
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4990654
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999554
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993848
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001448
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987787
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4986663
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999862
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988285
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987596
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499982
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994242
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999162
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  454
BAD DOOR
predicted q value [1.2057058]
actual q value 1.2033372
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5071322
BAD DOOR
predicted q value [1.2060602]
actual q value 1.2032518
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5075753
BAD DOOR
predicted q value [1.2052958]
actual q value 1.2033954
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5066197
BAD DOOR
predicted q value [1.2058938]
actual q value 1.2033299
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073671
BAD DOOR
predicted q value [1.2058938]
actual q value 1.2032981
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073671
BAD DOOR
predicted q value [1.2056946]
actual q value 1.2033616
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5071182
BAD DOOR
predicted q value [1.2055928]
actual q value 1.2032466
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5069909
BAD DOOR
predicted q value [1.2055192]
actual q value 1.203315
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.506899
BAD DOOR
predicted q value [1.2057143]
actual q value 1.2033415
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5071429
BAD DOOR
predicted q value [1.205238]
actual q value 1.203311
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5065475
BAD DOOR
predicted q value [1.205238]
actual q value 1.2033975
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5065475
BAD DOOR
predicted q value [1.2055135]
actual q value 1.2032557
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5068918
BAD DOOR
predicted q value [1.2053893]
actual q value 1.2033795
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5067365
BAD DOOR
predicted q value [1.2053006]
actual q value 1.20334
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5066258
BAD DOOR
predicted q value [1.2059177]
actual q value 1.2033045
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073972
BAD DOOR
predicted q value [1.2059177]
actual q value 1.2032686
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073972
BAD DOOR
predicted q value [1.2059177]
actual q value 1.2033191
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073972
BAD DOOR
predicted q value [1.2059177]
actual q value 1.2033392
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5073972
BAD DOOR
predicted q value [1.2055335]
actual q value 1.203248
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5069169
BAD DOOR
predicted q value [1.2052268]
actual q value 1.2033851
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5065335
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981024
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981623
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980487
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981349
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981794
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980978
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980756
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982294
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980813
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981947
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981222
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4982187
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.498045
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980309
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981986
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980516
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4980428
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981979
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981272
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4981897
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  459
BAD DOOR
predicted q value [1.2025374]
actual q value 1.2102581
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5031718
BAD DOOR
predicted q value [1.2029473]
actual q value 1.2109238
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.503684
BAD DOOR
predicted q value [1.2020637]
actual q value 1.2100846
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5025796
BAD DOOR
predicted q value [1.2027547]
actual q value 1.2100506
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5034435
BAD DOOR
predicted q value [1.2027547]
actual q value 1.2105182
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5034435
BAD DOOR
predicted q value [1.2025248]
actual q value 1.2099153
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.503156
BAD DOOR
predicted q value [1.202407]
actual q value 1.2117802
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5030087
BAD DOOR
predicted q value [1.2023218]
actual q value 1.2108964
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5029023
BAD DOOR
predicted q value [1.2025474]
actual q value 1.2101815
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5031843
BAD DOOR
predicted q value [1.2019968]
actual q value 1.2114226
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.502496
BAD DOOR
predicted q value [1.2019968]
actual q value 1.2101483
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.502496
BAD DOOR
predicted q value [1.2023154]
actual q value 1.2117796
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5028943
BAD DOOR
predicted q value [1.2021717]
actual q value 1.2101619
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5027146
BAD DOOR
predicted q value [1.2020694]
actual q value 1.2108915
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5025867
BAD DOOR
predicted q value [1.2027824]
actual q value 1.2103846
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.503478
BAD DOOR
predicted q value [1.2027824]
actual q value 1.2109137
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.503478
BAD DOOR
predicted q value [1.2027824]
actual q value 1.2101716
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.503478
BAD DOOR
predicted q value [1.2027824]
actual q value 1.2098745
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.503478
BAD DOOR
predicted q value [1.2023385]
actual q value 1.2118573
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.502923
BAD DOOR
predicted q value [1.2019838]
actual q value 1.2103499
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5024798
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977074
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976223
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977837
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976616
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497598
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497714
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977458
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497527
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497737
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975765
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976794
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975423
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977887
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4978089
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.497571
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977796
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4977921
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975718
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4976723
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4975835
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  464
BAD DOOR
predicted q value [1.1996962]
actual q value 1.1693429
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4996202
BAD DOOR
predicted q value [1.200165]
actual q value 1.1696056
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.5002064
BAD DOOR
predicted q value [1.1991537]
actual q value 1.1692883
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4989421
BAD DOOR
predicted q value [1.1999447]
actual q value 1.1692477
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499931
BAD DOOR
predicted q value [1.1999447]
actual q value 1.1694434
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.499931
BAD DOOR
predicted q value [1.1996815]
actual q value 1.1692001
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4996018
BAD DOOR
predicted q value [1.1995466]
actual q value 1.1699843
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4994333
BAD DOOR
predicted q value [1.1994492]
actual q value 1.1696179
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4993114
BAD DOOR
predicted q value [1.1997074]
actual q value 1.1693103
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4996343
BAD DOOR
predicted q value [1.1990772]
actual q value 1.1698503
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4988465
BAD DOOR
predicted q value [1.1990772]
actual q value 1.1693175
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4988465
BAD DOOR
predicted q value [1.1994418]
actual q value 1.1699877
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4993023
BAD DOOR
predicted q value [1.1992773]
actual q value 1.1693164
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4990966
BAD DOOR
predicted q value [1.1991602]
actual q value 1.1696254
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4989502
BAD DOOR
predicted q value [1.1999763]
actual q value 1.1693864
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4999704
BAD DOOR
predicted q value [1.1999763]
actual q value 1.1696076
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4999704
BAD DOOR
predicted q value [1.1999763]
actual q value 1.1692975
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4999704
BAD DOOR
predicted q value [1.1999763]
actual q value 1.169173
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4999704
BAD DOOR
predicted q value [1.1994683]
actual q value 1.1700191
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4993353
BAD DOOR
predicted q value [1.1990625]
actual q value 1.1694022
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.498828
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500305
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002456
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003587
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002729
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002284
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003097
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003321
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001783
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003258
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002131
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002854
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001892
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003623
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003766
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002092
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003558
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003645
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002096
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002806
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002179
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  469
BAD DOOR
predicted q value [1.1971614]
actual q value 1.1663942
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4964519
BAD DOOR
predicted q value [1.1976743]
actual q value 1.1661844
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4970928
BAD DOOR
predicted q value [1.1965683]
actual q value 1.1665201
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4957104
BAD DOOR
predicted q value [1.1974332]
actual q value 1.1663928
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4967916
BAD DOOR
predicted q value [1.1974332]
actual q value 1.1663013
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4967916
BAD DOOR
predicted q value [1.1971455]
actual q value 1.1664639
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4964318
BAD DOOR
predicted q value [1.196998]
actual q value 1.1661215
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4962475
BAD DOOR
predicted q value [1.1968914]
actual q value 1.1663111
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961143
BAD DOOR
predicted q value [1.1971737]
actual q value 1.1664073
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4964671
BAD DOOR
predicted q value [1.1964848]
actual q value 1.166271
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.495606
BAD DOOR
predicted q value [1.1964848]
actual q value 1.1665205
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.495606
BAD DOOR
predicted q value [1.1968834]
actual q value 1.1661391
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961044
BAD DOOR
predicted q value [1.1967036]
actual q value 1.1664839
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4958794
BAD DOOR
predicted q value [1.1965755]
actual q value 1.1663609
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4957194
BAD DOOR
predicted q value [1.197468]
actual q value 1.166322
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.496835
BAD DOOR
predicted q value [1.197468]
actual q value 1.1662184
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.496835
BAD DOOR
predicted q value [1.197468]
actual q value 1.1663637
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.496835
BAD DOOR
predicted q value [1.197468]
actual q value 1.1664219
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.496835
BAD DOOR
predicted q value [1.1969122]
actual q value 1.1661197
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4961402
BAD DOOR
predicted q value [1.1964686]
actual q value 1.1664836
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4955857
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017998
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017796
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018178
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017889
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017738
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018014
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018086
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017569
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018067
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017686
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017931
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017606
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018191
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018237
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017674
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018167
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5018198
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017676
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017914
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5017705
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  474
BAD DOOR
predicted q value [1.1887295]
actual q value 1.201775
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4859118
BAD DOOR
predicted q value [1.1893588]
actual q value 1.2004411
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4866985
BAD DOOR
predicted q value [1.1880014]
actual q value 1.2024834
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4850017
BAD DOOR
predicted q value [1.1890633]
actual q value 1.2018518
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4863291
BAD DOOR
predicted q value [1.1890633]
actual q value 1.2011976
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4863291
BAD DOOR
predicted q value [1.1887096]
actual q value 1.2022672
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.485887
BAD DOOR
predicted q value [1.1885288]
actual q value 1.1997732
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.485661
BAD DOOR
predicted q value [1.1883979]
actual q value 1.2010937
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4854974
BAD DOOR
predicted q value [1.1887445]
actual q value 1.2018723
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4859307
BAD DOOR
predicted q value [1.1878986]
actual q value 1.2006767
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4848733
BAD DOOR
predicted q value [1.1878986]
actual q value 1.2024595
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4848733
BAD DOOR
predicted q value [1.1883881]
actual q value 1.1998639
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4854852
BAD DOOR
predicted q value [1.1881673]
actual q value 1.2022688
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4852091
BAD DOOR
predicted q value [1.18801]
actual q value 1.2013487
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4850124
BAD DOOR
predicted q value [1.1891057]
actual q value 1.2013574
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4863821
BAD DOOR
predicted q value [1.1891057]
actual q value 1.2006171
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4863821
BAD DOOR
predicted q value [1.1891057]
actual q value 1.2016554
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4863821
BAD DOOR
predicted q value [1.1891057]
actual q value 1.2020711
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4863821
BAD DOOR
predicted q value [1.1884234]
actual q value 1.1997329
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4855292
BAD DOOR
predicted q value [1.1878788]
actual q value 1.2021902
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4848485
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5000458
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002337
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998772
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001471
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5002875
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500031
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999613
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004449
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4999802
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003352
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001076
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5004109
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499866
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998211
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003476
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998858
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998583
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500346
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5001234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5003195
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  479
BAD DOOR
predicted q value [1.1851892]
actual q value 1.1934552
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4814866
BAD DOOR
predicted q value [1.1858507]
actual q value 1.1941084
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4823134
BAD DOOR
predicted q value [1.1844242]
actual q value 1.1931794
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4805303
BAD DOOR
predicted q value [1.18554]
actual q value 1.1933508
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.481925
BAD DOOR
predicted q value [1.18554]
actual q value 1.1937268
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.481925
BAD DOOR
predicted q value [1.1851684]
actual q value 1.1931758
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4814605
BAD DOOR
predicted q value [1.1849785]
actual q value 1.1946418
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4812231
BAD DOOR
predicted q value [1.1848409]
actual q value 1.1939064
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4810512
BAD DOOR
predicted q value [1.1852051]
actual q value 1.1933966
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4815063
BAD DOOR
predicted q value [1.1843164]
actual q value 1.1942363
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4803954
BAD DOOR
predicted q value [1.1843164]
actual q value 1.1932114
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4803954
BAD DOOR
predicted q value [1.1848307]
actual q value 1.194615
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4810383
BAD DOOR
predicted q value [1.1845987]
actual q value 1.1932727
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4807484
BAD DOOR
predicted q value [1.1844333]
actual q value 1.1938298
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4805417
BAD DOOR
predicted q value [1.1855847]
actual q value 1.1936272
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4819808
BAD DOOR
predicted q value [1.1855847]
actual q value 1.1940529
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4819808
BAD DOOR
predicted q value [1.1855847]
actual q value 1.193456
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4819808
BAD DOOR
predicted q value [1.1855847]
actual q value 1.1932172
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4819808
BAD DOOR
predicted q value [1.1848677]
actual q value 1.194684
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4810847
BAD DOOR
predicted q value [1.1842954]
actual q value 1.1933697
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4803693
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994487
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996221
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992929
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995424
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4996719
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993706
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4998171
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499388
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997162
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995059
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997859
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992824
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499241
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997274
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.499301
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992754
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997258
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4995203
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4997016
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  484
BAD DOOR
predicted q value [1.1814992]
actual q value 1.1972998
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.476874
BAD DOOR
predicted q value [1.1821833]
actual q value 1.1973972
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4777291
BAD DOOR
predicted q value [1.1807079]
actual q value 1.1972523
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4758849
BAD DOOR
predicted q value [1.1818619]
actual q value 1.1972904
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4773273
BAD DOOR
predicted q value [1.1818619]
actual q value 1.1973414
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4773273
BAD DOOR
predicted q value [1.1814778]
actual q value 1.1972618
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4768472
BAD DOOR
predicted q value [1.1812812]
actual q value 1.1974583
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4766015
BAD DOOR
predicted q value [1.1811392]
actual q value 1.1973565
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.476424
BAD DOOR
predicted q value [1.1815157]
actual q value 1.1972921
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4768946
BAD DOOR
predicted q value [1.1805966]
actual q value 1.1973943
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4757457
BAD DOOR
predicted q value [1.1805966]
actual q value 1.1972554
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4757457
BAD DOOR
predicted q value [1.1811284]
actual q value 1.1974525
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4764105
BAD DOOR
predicted q value [1.1808885]
actual q value 1.1972673
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4761107
BAD DOOR
predicted q value [1.1807176]
actual q value 1.1973407
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.475897
BAD DOOR
predicted q value [1.181908]
actual q value 1.1973286
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.477385
BAD DOOR
predicted q value [1.181908]
actual q value 1.1973864
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.477385
BAD DOOR
predicted q value [1.181908]
actual q value 1.1973052
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.477385
BAD DOOR
predicted q value [1.181908]
actual q value 1.1972728
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.477385
BAD DOOR
predicted q value [1.1811669]
actual q value 1.1974623
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4764585
BAD DOOR
predicted q value [1.1805748]
actual q value 1.1972764
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4757185
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037075
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037351
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036829
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037224
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037429
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037055
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036952
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037661
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036981
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037498
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037167
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503761
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036812
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036746
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037519
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.503684
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036802
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037515
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037189
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037476
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  489
BAD DOOR
predicted q value [1.1777041]
actual q value 1.1611594
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4721302
BAD DOOR
predicted q value [1.1784272]
actual q value 1.1619248
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.473034
BAD DOOR
predicted q value [1.1768677]
actual q value 1.160809
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4710846
BAD DOOR
predicted q value [1.1780875]
actual q value 1.1610624
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4726094
BAD DOOR
predicted q value [1.1780875]
actual q value 1.1614819
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4726094
BAD DOOR
predicted q value [1.1776813]
actual q value 1.1608466
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4721017
BAD DOOR
predicted q value [1.1774735]
actual q value 1.1624712
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4718419
BAD DOOR
predicted q value [1.1773233]
actual q value 1.1616433
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4716542
BAD DOOR
predicted q value [1.1777215]
actual q value 1.1610947
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4721519
BAD DOOR
predicted q value [1.1767498]
actual q value 1.161982
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709373
BAD DOOR
predicted q value [1.1767498]
actual q value 1.160839
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709373
BAD DOOR
predicted q value [1.1773121]
actual q value 1.1624334
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4716401
BAD DOOR
predicted q value [1.1770585]
actual q value 1.1609229
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.471323
BAD DOOR
predicted q value [1.1768777]
actual q value 1.1615353
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4710971
BAD DOOR
predicted q value [1.1781365]
actual q value 1.1613733
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4726706
BAD DOOR
predicted q value [1.1781365]
actual q value 1.1618481
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4726706
BAD DOOR
predicted q value [1.1781365]
actual q value 1.1611823
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4726706
BAD DOOR
predicted q value [1.1781365]
actual q value 1.1609156
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4726706
BAD DOOR
predicted q value [1.1773525]
actual q value 1.1625123
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4716907
BAD DOOR
predicted q value [1.1767269]
actual q value 1.1610144
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4709086
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039475
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5042061
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037158
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.504087
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5042803
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5039275
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038314
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5044965
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5038577
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043459
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040329
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5044496
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037004
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036387
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043627
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5037277
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5036898
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043604
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5040544
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5043244
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  494
BAD DOOR
predicted q value [1.1718113]
actual q value 1.1650898
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4647642
BAD DOOR
predicted q value [1.1725003]
actual q value 1.1632154
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4656253
BAD DOOR
predicted q value [1.1710145]
actual q value 1.16644
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4637682
BAD DOOR
predicted q value [1.1721767]
actual q value 1.165441
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4652209
BAD DOOR
predicted q value [1.1721767]
actual q value 1.1638613
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4652209
BAD DOOR
predicted q value [1.1717896]
actual q value 1.1662691
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.464737
BAD DOOR
predicted q value [1.1715918]
actual q value 1.1637549
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4644897
BAD DOOR
predicted q value [1.1714485]
actual q value 1.1632808
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4643106
BAD DOOR
predicted q value [1.1718278]
actual q value 1.1653329
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4647847
BAD DOOR
predicted q value [1.1709023]
actual q value 1.1632566
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4636278
BAD DOOR
predicted q value [1.1709023]
actual q value 1.1663314
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4636278
BAD DOOR
predicted q value [1.1714379]
actual q value 1.1637154
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4642973
BAD DOOR
predicted q value [1.1711962]
actual q value 1.1660042
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4639953
BAD DOOR
predicted q value [1.1710241]
actual q value 1.1637043
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4637802
BAD DOOR
predicted q value [1.1722232]
actual q value 1.1642683
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.465279
BAD DOOR
predicted q value [1.1722232]
actual q value 1.1631356
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.465279
BAD DOOR
predicted q value [1.1722232]
actual q value 1.1649878
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.465279
BAD DOOR
predicted q value [1.1722232]
actual q value 1.1659917
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.465279
BAD DOOR
predicted q value [1.1714764]
actual q value 1.163795
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4643455
BAD DOOR
predicted q value [1.1708806]
actual q value 1.1656713
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4636006
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987402
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4990798
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984354
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4989233
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4991772
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4987136
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4985876
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4994612
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4986217
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992635
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988523
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4993999
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984152
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4983342
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992857
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984511
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4984014
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992826
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4988806
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.4992352
next best action:  0
next action predicted q value:  0
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7251805067062378, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.54400927]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7494417130947113, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7965727746486664, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6517680883407593, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.35085714]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7071489095687866, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7748748427256942, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.99985486]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8100979402661324, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.       0.       0.       0.      -0.61399]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6862577274441719, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.15980333]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7457649856805801, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7274888455867767, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.88487184]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7282499670982361, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7485768795013428, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.8555525]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7638364434242249, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.05476088]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7234188914299011, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.61246496]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8495225012302399, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7330122366547585, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [1.        0.        0.        0.        0.2596473]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [ 1.        0.        0.        0.       -0.978219]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8220663964748383, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.79969287]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7649807631969452, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8409988284111023, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.790732353925705, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.8591538]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.704342782497406, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.6931039094924927, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.809076115489006, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.21248813]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8251373767852783, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.2728124]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.24123688]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.4797115]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.6812983155250549, 0.75, 1.0, 0.0, 0.0] [ 1.         0.         0.         0.        -0.7683432]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7093326379545033, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.7608657479286194, 0.75, 1.0, 0.0, 0.0] [1.         0.         0.         0.         0.88891166]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.70243189483881, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
BAD DOOR rwd, state, action  0.0 [0.09736157832610592, 0.12741186225054224, 0.8243894577026367, 0.75, 1.0, 0.0, 0.0] [ 1.          0.          0.          0.         -0.79031926]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8247278928756714, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.7689303159713745, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
CALL PLANNER rwd, state, action  1.5 [0.09736157832610592, 0.12741186225054224, 0.8181408643722534, 0.75, 1.0, 0.0, 0.0] [0. 1. 0. 0. 0.]
WE GOT REWARDS:  499
BAD DOOR
predicted q value [1.1698109]
actual q value 1.1502979
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4622636
BAD DOOR
predicted q value [1.1704745]
actual q value 1.1503762
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4630932
BAD DOOR
predicted q value [1.1690432]
actual q value 1.1502583
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.461304
BAD DOOR
predicted q value [1.1701627]
actual q value 1.1502911
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627033
BAD DOOR
predicted q value [1.1701627]
actual q value 1.1503313
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627033
BAD DOOR
predicted q value [1.16979]
actual q value 1.1502676
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4622376
BAD DOOR
predicted q value [1.1695993]
actual q value 1.1504219
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4619992
BAD DOOR
predicted q value [1.1694615]
actual q value 1.1503415
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4618268
BAD DOOR
predicted q value [1.1698267]
actual q value 1.1502918
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4622834
BAD DOOR
predicted q value [1.1689351]
actual q value 1.1503699
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611688
BAD DOOR
predicted q value [1.1689351]
actual q value 1.1502604
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611688
BAD DOOR
predicted q value [1.1694511]
actual q value 1.150417
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4618139
BAD DOOR
predicted q value [1.1692183]
actual q value 1.1502707
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4615228
BAD DOOR
predicted q value [1.1690525]
actual q value 1.1503282
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4613156
BAD DOOR
predicted q value [1.1702076]
actual q value 1.1503212
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627595
BAD DOOR
predicted q value [1.1702076]
actual q value 1.1503668
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627595
BAD DOOR
predicted q value [1.1702076]
actual q value 1.1503031
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627595
BAD DOOR
predicted q value [1.1702076]
actual q value 1.1502775
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4627595
BAD DOOR
predicted q value [1.1694883]
actual q value 1.150425
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4618604
BAD DOOR
predicted q value [1.1689141]
actual q value 1.1502771
next best action:  _Option(name='CallPlanner', objects=[], params=array([], dtype=float32))
next action predicted q value:  1.4611427
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009198
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500928
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009124
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009245
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009308
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009193
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500916
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009375
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500917
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009325
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009224
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500936
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500912
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009098
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009332
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009129
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009116
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009332
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.5009234
next best action:  0
next action predicted q value:  0
GOOD CALLPLANNER
predicted q value [1.5]
actual q value 1.500932
next best action:  0
next action predicted q value:  0
SMOOTH REWARDS [0.0, 0.012, 0.052000000000000005, 0.092, 0.132, 0.168, 0.20800000000000002, 0.24400000000000002, 0.26, 0.26, 0.272, 0.272, 0.272, 0.272, 0.272, 0.28400000000000003, 0.28400000000000003, 0.30000000000000004, 0.332, 0.36400000000000005, 0.4040000000000001, 0.44400000000000006, 0.4800000000000001, 0.52, 0.52, 0.548, 0.54, 0.5, 0.46, 0.43199999999999994, 0.41600000000000004, 0.376, 0.36, 0.384, 0.424, 0.452, 0.49200000000000005, 0.532, 0.5720000000000001, 0.612, 0.64, 0.68, 0.7040000000000001, 0.7079999999999999, 0.716, 0.7119999999999999, 0.7120000000000001, 0.716, 0.716, 0.7559999999999999, 0.7680000000000001, 0.804, 0.8440000000000001, 0.884, 0.912, 0.932, 0.972, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.992, 0.996, 0.996, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996, 0.996]
