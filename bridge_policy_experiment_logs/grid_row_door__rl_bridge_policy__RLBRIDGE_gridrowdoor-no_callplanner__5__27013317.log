pybullet build time: Nov 28 2023 23:52:03
Running command: python predicators/main.py --env grid_row_door --approach rl_bridge_policy --experiment_id RLBRIDGE_gridrowdoor-no_callplanner --debug --max_initial_demos 0 --sampler_learner oracle --strips_learner oracle --num_online_learning_cycles 100 --num_test_tasks 10 --num_train_tasks 1 --interactive_num_requests_per_cycle 5 --online_nsrt_learning_requests_per_cycle 5 --max_num_steps_interaction_request 100 --timeout 1000 --active_sampler_learning_num_samples 100 --same_levels True --explorer maple_q --bilevel_plan_without_sim True --mlp_regressor_max_itr 100000 --segmenter oracle --demonstrator oracle --sesame_max_skeletons_optimized 50 --use_obj_centric True --use_callplanner False --seed 5
Full config:
namespace(num_train_tasks=1, num_test_tasks=10, num_online_learning_cycles=100, online_learning_max_transitions=inf, max_initial_demos=0, allow_interaction_in_demo_tasks=True, max_num_steps_interaction_request=100, pretty_print_when_loading=False, test_env_seed_offset=10000, test_task_json_dir=None, segmenter='oracle', demonstrator='oracle', render_state_dpi=150, approach_wrapper=None, allow_exclude_goal_predicates=False, allow_state_allclose_comparison_despite_simulator_state=False, cover_multistep_action_limits=[-inf, inf], cover_multistep_degenerate_oracle_samplers=False, cover_multistep_max_tb_placements=100, cover_multistep_max_hr_placements=100, cover_multistep_thr_percent=0.4, cover_multistep_bhr_percent=0.4, cover_multistep_bimodal_goal=False, cover_multistep_goal_conditioned_sampling=False, bumpy_cover_num_bumps=2, bumpy_cover_spaces_per_bump=1, bumpy_cover_right_targets=False, bumpy_cover_bumpy_region_start=0.8, bumpy_cover_init_bumpy_prob=0.25, regional_bumpy_cover_include_impossible_nsrt=False, blocks_num_blocks_train=[3, 4], blocks_num_blocks_test=[5, 6], blocks_holding_goals=False, blocks_block_size=0.045, playroom_num_blocks_train=[3], playroom_num_blocks_test=[3], cluttered_table_num_cans_train=5, cluttered_table_num_cans_test=10, cluttered_table_can_radius=0.01, cluttered_table_collision_angle_thresh=0.7853981633974483, cluttered_table_place_goal_conditioned_sampling=True, repeated_nextto_num_dots=15, repeated_nextto_nextto_thresh=0.5, painting_initial_holding_prob=0.5, painting_lid_open_prob=0.3, painting_num_objs_train=[2, 3], painting_num_objs_test=[3, 4], painting_max_objs_in_goal=inf, painting_goal_receptacles='box_and_shelf', painting_raise_environment_failure=True, rnt_painting_num_objs_train=[8, 9, 10], rnt_painting_num_objs_test=[11, 12, 13], rnt_painting_max_objs_in_goal=2, tools_num_items_train=[2], tools_num_items_test=[2, 3], tools_num_contraptions_train=[2], tools_num_contraptions_test=[3], sandwich_ingredients_train={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, sandwich_ingredients_test={'bread': [2], 'patty': [1], 'ham': [1], 'egg': [1], 'cheese': [1], 'lettuce': [1], 'tomato': [1], 'green_pepper': [1]}, pybullet_draw_debug=False, pybullet_camera_width=335, pybullet_camera_height=180, pybullet_sim_steps_per_action=20, pybullet_max_ik_iters=100, pybullet_ik_tol=0.001, pybullet_robot='fetch', pybullet_birrt_num_attempts=10, pybullet_birrt_num_iters=100, pybullet_birrt_smooth_amt=50, pybullet_birrt_extend_num_interp=10, pybullet_control_mode='position', pybullet_max_vel_norm=0.05, pybullet_robot_ee_orns=defaultdict(<function GlobalSettings.<lambda> at 0x7ff180fc85e0>, {'pybullet_blocks': {'fetch': (0.7071, 0.0, -0.7071, 0.0), 'panda': (0.7071, 0.7071, 0.0, 0.0)}}), ikfast_max_time=0.05, ikfast_max_candidates=100, ikfast_max_attempts=inf, ikfast_max_distance=inf, ikfast_norm=inf, pddl_blocks_procedural_train_min_num_blocks=3, pddl_blocks_procedural_train_max_num_blocks=4, pddl_blocks_procedural_train_min_num_blocks_goal=2, pddl_blocks_procedural_train_max_num_blocks_goal=3, pddl_blocks_procedural_test_min_num_blocks=5, pddl_blocks_procedural_test_max_num_blocks=6, pddl_blocks_procedural_test_min_num_blocks_goal=2, pddl_blocks_procedural_test_max_num_blocks_goal=5, pddl_blocks_procedural_new_pile_prob=0.5, pddl_blocks_fixed_train_indices=[1, 2, 3, 4, 5], pddl_blocks_fixed_test_indices=[6, 7, 8, 9, 10], pddl_delivery_procedural_train_min_num_locs=5, pddl_delivery_procedural_train_max_num_locs=10, pddl_delivery_procedural_train_min_want_locs=2, pddl_delivery_procedural_train_max_want_locs=4, pddl_delivery_procedural_train_min_extra_newspapers=0, pddl_delivery_procedural_train_max_extra_newspapers=1, pddl_delivery_procedural_test_min_num_locs=31, pddl_delivery_procedural_test_max_num_locs=40, pddl_delivery_procedural_test_min_want_locs=20, pddl_delivery_procedural_test_max_want_locs=30, pddl_delivery_procedural_test_min_extra_newspapers=0, pddl_delivery_procedural_test_max_extra_newspapers=10, pddl_easy_delivery_procedural_train_min_num_locs=3, pddl_easy_delivery_procedural_train_max_num_locs=5, pddl_easy_delivery_procedural_train_min_want_locs=1, pddl_easy_delivery_procedural_train_max_want_locs=2, pddl_easy_delivery_procedural_train_min_extra_newspapers=0, pddl_easy_delivery_procedural_train_max_extra_newspapers=1, pddl_easy_delivery_procedural_test_min_num_locs=4, pddl_easy_delivery_procedural_test_max_num_locs=6, pddl_easy_delivery_procedural_test_min_want_locs=2, pddl_easy_delivery_procedural_test_max_want_locs=3, pddl_easy_delivery_procedural_test_min_extra_newspapers=0, pddl_easy_delivery_procedural_test_max_extra_newspapers=1, pddl_spanner_procedural_train_min_nuts=1, pddl_spanner_procedural_train_max_nuts=3, pddl_spanner_procedural_train_min_extra_spanners=0, pddl_spanner_procedural_train_max_extra_spanners=2, pddl_spanner_procedural_train_min_locs=2, pddl_spanner_procedural_train_max_locs=4, pddl_spanner_procedural_test_min_nuts=10, pddl_spanner_procedural_test_max_nuts=20, pddl_spanner_procedural_test_min_extra_spanners=0, pddl_spanner_procedural_test_max_extra_spanners=10, pddl_spanner_procedural_test_min_locs=20, pddl_spanner_procedural_test_max_locs=30, pddl_forest_procedural_train_min_size=8, pddl_forest_procedural_train_max_size=10, pddl_forest_procedural_test_min_size=10, pddl_forest_procedural_test_max_size=12, pddl_gripper_procedural_train_min_num_rooms=3, pddl_gripper_procedural_train_max_num_rooms=5, pddl_gripper_procedural_train_min_num_balls=1, pddl_gripper_procedural_train_max_num_balls=2, pddl_gripper_procedural_test_min_num_rooms=3, pddl_gripper_procedural_test_max_num_rooms=5, pddl_gripper_procedural_test_min_num_balls=1, pddl_gripper_procedural_test_max_num_balls=2, pddl_ferry_procedural_train_min_num_locs=3, pddl_ferry_procedural_train_max_num_locs=5, pddl_ferry_procedural_train_min_num_cars=1, pddl_ferry_procedural_train_max_num_cars=2, pddl_ferry_procedural_test_min_num_locs=3, pddl_ferry_procedural_test_max_num_locs=5, pddl_ferry_procedural_test_min_num_cars=1, pddl_ferry_procedural_test_max_num_cars=2, pddl_miconic_procedural_train_min_buildings=1, pddl_miconic_procedural_train_max_buildings=2, pddl_miconic_procedural_train_min_floors=3, pddl_miconic_procedural_train_max_floors=5, pddl_miconic_procedural_train_min_passengers=1, pddl_miconic_procedural_train_max_passengers=2, pddl_miconic_procedural_test_min_buildings=1, pddl_miconic_procedural_test_max_buildings=2, pddl_miconic_procedural_test_min_floors=3, pddl_miconic_procedural_test_max_floors=5, pddl_miconic_procedural_test_min_passengers=1, pddl_miconic_procedural_test_max_passengers=2, stick_button_num_buttons_train=[1, 2], stick_button_num_buttons_test=[3, 4], stick_button_disable_angles=True, stick_button_holder_scale=0.1, screws_num_screws_train=[15, 20], screws_num_screws_test=[25, 30], doors_room_map_size=2, test_doors_room_map_size=5, doors_min_obstacles_per_room=0, doors_max_obstacles_per_room=3, doors_min_room_exists_frac=0.25, doors_max_room_exists_frac=0.75, doors_birrt_num_attempts=10, doors_birrt_num_iters=100, doors_birrt_smooth_amt=50, doors_draw_debug=False, timeout=1000.0, doorknobs_target_value=0.75, narrow_passage_open_door_refine_penalty=0, narrow_passage_door_width_padding_lb=0.0001, narrow_passage_door_width_padding_ub=0.015, narrow_passage_passage_width_padding_lb=0.0005, narrow_passage_passage_width_padding_ub=0.02, narrow_passage_birrt_num_attempts=10, narrow_passage_birrt_num_iters=100, narrow_passage_birrt_smooth_amt=50, exit_garage_clear_refine_penalty=0, exit_garage_min_num_obstacles=2, exit_garage_max_num_obstacles=3, exit_garage_rrt_extend_fn_threshold=0.001, exit_garage_rrt_num_control_samples=100, exit_garage_rrt_num_attempts=3, exit_garage_rrt_num_iters=100, exit_garage_rrt_sample_goal_eps=0.1, exit_garage_motion_planning_ignore_obstacles=False, exit_garage_raise_environment_failure=False, coffee_num_cups_train=[1], coffee_num_cups_test=[4], coffee_jug_init_rot_amt=2.0943951023931953, satellites_num_sat_train=[2, 3], satellites_num_obj_train=[3, 4], satellites_num_sat_test=[3, 4], satellites_num_obj_test=[4, 5], sokoban_gym_name='Sokoban-v0', kitchen_use_perfect_samplers=False, kitchen_goals='all', kitchen_render_set_of_marks=False, kitchen_use_combo_move_nsrts=False, kitchen_randomize_init_state=False, sticky_table_num_tables=5, sticky_table_place_smooth_fall_prob=0.6, sticky_table_place_sticky_fall_prob=0.0, sticky_table_pick_success_prob=1.0, sticky_table_tricky_floor_place_sticky_fall_prob=0.5, sticky_table_place_ball_fall_prob=1.0, sticky_table_num_sticky_tables=1, grid_row_num_cells=5, test_grid_row_num_cells=10, num_doors=2, gridworld_num_rows=4, gridworld_num_cols=4, random_options_max_tries=100, option_model_terminate_on_repeat=True, option_model_use_gui=False, gnn_num_message_passing=3, gnn_layer_size=16, gnn_learning_rate=0.001, gnn_weight_decay=0, gnn_num_epochs=25000, gnn_batch_size=128, gnn_do_normalization=False, gnn_use_validation_set=True, gnn_option_policy_solve_with_shooting=True, gnn_option_policy_shooting_variance=0.1, gnn_option_policy_shooting_max_samples=100, metacontroller_max_samples=100, pg3_heuristic='policy_guided', pg3_search_method='hill_climbing', pg3_task_planning_heuristic='lmcut', pg3_gbfs_max_expansions=100, pg3_hc_enforced_depth=0, pg3_max_policy_guided_rollout=50, pg3_plan_compare_inapplicable_cost=0.99, pg3_add_condition_allow_new_vars=True, pg3_max_analogies=5, pg3_init_policy=None, pg3_init_base_env=None, nsrt_rl_reward_epsilon=0.01, nsrt_rl_pos_reward=0, nsrt_rl_neg_reward=-1, nsrt_rl_option_learner='dummy_rl', nsrt_rl_valid_reward_steps_threshold=10, pretrained_model_prompt_cache_dir='pretrained_model_cache', llm_openai_max_response_tokens=700, llm_use_cache_only=False, llm_model_name='text-curie-001', llm_temperature=0.5, llm_num_completions=1, vlm_model_name='gemini-pro-vision', sesame_task_planner='astar', sesame_task_planning_heuristic='lmcut', sesame_allow_noops=True, sesame_check_expected_atoms=True, sesame_use_necessary_atoms=True, sesame_use_visited_state_set=False, sesame_grounder='naive', sesame_check_static_object_changes=False, sesame_static_object_change_tol=0.001, bilevel_plan_without_sim=True, log_dir='logs', results_dir='results', eval_trajectories_dir='eval_trajectories', approach_dir='saved_approaches', data_dir='saved_datasets', video_dir='videos', image_dir='images', video_fps=2, failure_video_mode='longest_only', offline_data_planning_timeout=-1, offline_data_task_planning_heuristic='default', offline_data_max_skeletons_optimized=-1, offline_data_num_replays=500, offline_data_bilevel_plan_without_sim=None, teacher_dataset_num_examples=1, min_data_for_nsrt=0, min_perc_data_for_nsrt=0, data_orderings_to_search=1, strips_learner='oracle', disable_harmlessness_check=False, enable_harmless_op_pruning=False, backchaining_check_intermediate_harmlessness=False, pnad_search_without_del=False, pnad_search_timeout=10.0, compute_sidelining_objective_value=False, clustering_learner_true_pos_weight=10, clustering_learner_false_pos_weight=1, cluster_and_intersect_prederror_max_groundings=10, cluster_and_search_inner_search_max_expansions=2500, cluster_and_search_inner_search_timeout=30, cluster_and_search_score_func_max_groundings=10000, cluster_and_search_var_count_weight=0.1, cluster_and_search_precon_size_weight=0.01, cluster_and_intersect_prune_low_data_pnads=False, cluster_and_intersect_min_datastore_fraction=0.0, use_torch_gpu=False, learning_rate=0.001, weight_decay=0, mlp_regressor_max_itr=100000, mlp_regressor_hid_sizes=[32, 32], mlp_regressor_clip_gradients=True, mlp_regressor_gradient_clip_value=5, mlp_classifier_hid_sizes=[32, 32], mlp_classifier_balance_data=True, cnn_regressor_max_itr=500, cnn_regressor_conv_channel_nums=[3, 3], cnn_regressor_conv_kernel_sizes=[5, 3], cnn_regressor_linear_hid_sizes=[32, 8], cnn_regressor_clip_gradients=True, cnn_regressor_gradient_clip_value=5, neural_gaus_regressor_hid_sizes=[32, 32], neural_gaus_regressor_max_itr=1000, mlp_classifier_n_iter_no_change=5000, implicit_mlp_regressor_max_itr=10000, implicit_mlp_regressor_num_negative_data_per_input=5, implicit_mlp_regressor_num_samples_per_inference=100, implicit_mlp_regressor_temperature=1.0, implicit_mlp_regressor_inference_method='derivative_free', implicit_mlp_regressor_derivative_free_num_iters=3, implicit_mlp_regressor_derivative_free_sigma_init=0.33, implicit_mlp_regressor_derivative_free_shrink_scale=0.5, implicit_mlp_regressor_grid_num_ticks_per_dim=100, pytorch_train_print_every=1000, sampler_learner='oracle', max_rejection_sampling_tries=100, sampler_mlp_classifier_max_itr=10000, sampler_mlp_classifier_n_reinitialize_tries=1, sampler_learning_use_goals=False, sampler_disable_classifier=False, sampler_learning_regressor_model='neural_gaussian', sampler_learning_max_negative_data=100000, option_learning_action_converter='identity', interactive_num_ensemble_members=10, interactive_query_policy='threshold', interactive_score_function='entropy', interactive_score_threshold=0.05, interactive_random_query_prob=0.5, interactive_num_requests_per_cycle=5, predicate_classifier_model='mlp', predicate_mlp_classifier_max_itr=100000, predicate_mlp_classifier_n_reinitialize_tries=1, predicate_mlp_classifier_init='default', predicate_knn_classifier_n_neighbors=1, online_nsrt_learning_requests_per_cycle=5, online_learning_max_novelty_count=0, active_sampler_learning_model='myopic_classifier_mlp', active_sampler_learning_feature_selection='all', active_sampler_learning_knn_neighbors=3, active_sampler_learning_use_teacher=True, active_sampler_learning_score_gamma=0.5, active_sampler_learning_fitted_q_iters=5, active_sampler_learning_explore_pursue_goal_interval=5, active_sampler_learning_object_specific_samplers=False, active_sampler_learning_n_iter_no_change=5000, active_sampler_learning_num_lookahead_samples=5, active_sampler_learning_explore_length_base=2, active_sampler_learning_num_ensemble_members=10, active_sampler_learning_exploration_sample_strategy='epsilon_greedy', active_sampler_learning_exploration_epsilon=1.0, active_sampler_learning_replay_buffer_size=1000000, active_sampler_learning_batch_size=64, use_epsilon_annealing=True, min_epsilon=0.05, polyak_tau=0.0025, same_levels=True, polyak_true=True, use_old_exploration=False, use_callplanner=False, random_bridge=False, use_obj_centric=True, rl_rwd_shape=False, skill_competence_model='optimistic', skill_competence_model_num_em_iters=3, skill_competence_model_max_train_iters=1000, skill_competence_model_learning_rate=0.01, skill_competence_model_lookahead=1, skill_competence_model_optimistic_window_size=5, skill_competence_model_optimistic_recency_size=5, skill_competence_default_alpha_beta=(10.0, 1.0), skill_competence_initial_prediction_bonus=0.5, refinement_estimator='oracle', refinement_estimation_num_skeletons_generated=8, refinement_data_num_skeletons=8, refinement_data_skeleton_generator_timeout=20, refinement_data_low_level_search_timeout=5, refinement_data_failed_refinement_penalty=5, refinement_data_include_execution_cost=True, refinement_data_low_level_execution_cost=0.05, cnn_refinement_estimator_crop=False, cnn_refinement_estimator_crop_bounds=(320, 400, 100, 650), cnn_refinement_estimator_downsample=2, bridge_policy='learned_ldl', glib_min_goal_size=1, glib_max_goal_size=1, glib_num_babbles=10, greedy_lookahead_max_num_trajectories=100, greedy_lookahead_max_traj_length=2, greedy_lookahead_max_num_resamples=10, active_sampler_explore_use_ucb_bonus=True, active_sampler_explore_bonus=0.1, active_sampler_explore_task_strategy='planning_progress', active_sampler_explorer_replan_frequency=100, active_sampler_explorer_planning_progress_max_tasks=10, active_sampler_explorer_planning_progress_max_replan_tasks=5, active_sampler_explorer_skip_perfect=True, active_sampler_learning_init_cycles_to_pursue_goal=1, grammar_search_grammar_includes_givens=True, grammar_search_grammar_includes_foralls=True, grammar_search_grammar_use_diff_features=False, grammar_search_grammar_use_euclidean_dist=False, grammar_search_use_handcoded_debug_grammar=False, grammar_search_pred_selection_approach='score_optimization', grammar_search_pred_clusterer='oracle', grammar_search_true_pos_weight=10, grammar_search_false_pos_weight=1, grammar_search_bf_weight=1, grammar_search_operator_complexity_weight=0.0, grammar_search_pred_complexity_weight=0.0001, grammar_search_max_predicates=200, grammar_search_predicate_cost_upper_bound=6, grammar_search_prune_redundant_preds=True, grammar_search_score_function='expected_nodes_created', grammar_search_heuristic_based_weight=10.0, grammar_search_max_demos=inf, grammar_search_max_nondemos=50, grammar_search_energy_based_temperature=10.0, grammar_search_task_planning_timeout=1.0, grammar_search_search_algorithm='hill_climbing', grammar_search_hill_climbing_depth=0, grammar_search_parallelize_hill_climbing=False, grammar_search_gbfs_num_evals=1000, grammar_search_off_demo_count_penalty=1.0, grammar_search_on_demo_count_penalty=10.0, grammar_search_suspicious_state_penalty=10.0, grammar_search_expected_nodes_upper_bound=100000.0, grammar_search_expected_nodes_optimal_demo_prob=0.99999, grammar_search_expected_nodes_backtracking_cost=1000.0, grammar_search_expected_nodes_allow_noops=True, grammar_search_classifier_pretty_str_names=['?x', '?y', '?z'], grammar_search_vlm_atom_proposal_prompt_type='options_labels_whole_traj', grammar_search_vlm_atom_label_prompt_type='per_scene_naive', grammar_search_vlm_atom_proposal_use_debug=False, grammar_search_clustering_gmm_num_components=10, handmade_demo_filename='', vlm_trajs_folder_name='', get_arg_specific_settings=<classmethod object at 0x7ff180fbcb80>, perceiver='trivial', horizon=30, active_sampler_learning_num_samples=100, max_num_steps_option_rollout=1000, sesame_propagate_failures='immediately', offline_data_method='demo', option_model_name='oracle', sesame_max_skeletons_optimized=50, sesame_max_samples_per_step=10, grammar_search_expected_nodes_max_skeletons=-1, grammar_search_diff_features_const_multiplier=1e-06, grammar_search_euclidean_feature_names=[('x', 'y', 'x', 'y')], grammar_search_euclidean_const_multiplier=1e-06, cover_num_blocks=2, cover_num_targets=2, cover_block_widths=[0.1, 0.07], cover_target_widths=[0.05, 0.03], cover_initial_holding_prob=0.75, env='grid_row_door', approach='rl_bridge_policy', excluded_predicates='', included_options='', seed=5, option_learner='no_learning', explorer='maple_q', execution_monitor='trivial', make_test_videos=False, make_failure_videos=False, make_interaction_videos=False, make_demo_videos=False, make_demo_images=False, make_cogman_videos=False, load_approach=False, restart_learning=False, load_data=False, load_atoms=False, save_atoms=False, skip_until_cycle=-1, experiment_id='RLBRIDGE_gridrowdoor-no_callplanner', load_experiment_id='', log_file='', use_gui=False, loglevel=10, crash_on_failure=False)
Git commit hash: 4e424522ab45ae4b145226ae01782f813ddd0863


CREATED 0 DEMONSTRATIONS
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.87914497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.8205318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02192648], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3575285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.36350623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7747816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11037528], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.46476892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7163554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5447498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08345646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5376721], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.76565725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3909307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17757595], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49247476], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1578324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3954398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3424129], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.83026093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99946165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21586257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.15182883], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07992855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30318254], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.59109485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.56274575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25082162], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03203481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5809724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25561824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8449634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44497547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.45619795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14663717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.86038685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.755634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7967651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9099068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8365196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4867285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68214667], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.8236744], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.7696574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17877333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3604706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.40316287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.37323707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41403192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27128533], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.32716218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.65753233], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4498615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8838015], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16971047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6587218], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.43963888], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38932636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8533017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.510016], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39084867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33687192], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50686723], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5629912], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7189805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.548342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17736065], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23652579], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9603596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9440834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04940367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6034887], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7012903], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5331193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2437015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99384296], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41445172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3679464], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.30885112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.332013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9885219], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.8981763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.56494176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02454068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.93598974], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.51991844], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.2545436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.57120425], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.73300666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38702977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05388427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55717856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9522816], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21130666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32738644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.73938173], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22208032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99285275], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03789209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9094132], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.76404744], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47711974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.90385467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.48450038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.41879854], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.05739424], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.942942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.60197955], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7895793], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.93457234], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6167171], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.610954], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3197792], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07628925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6517891], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6655993], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9930778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09072964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54573834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5922381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.39691457], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6141983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.5345293], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01553699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23939206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5988889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04082881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.8885337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.54727906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07333554], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.7315964], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.04519621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.55215526], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24924551], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.6604211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09079225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6218765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6279059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.39542732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7226121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2936978], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09945112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.47777438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3606819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20745768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01725351], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.8501735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13204594], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9362199], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.05251897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.93599445], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96528125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20155916], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3241678], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97507465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6356703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.87559825], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5869064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5822999], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.33374175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14891304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9516273], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99643856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 0, 'query_cost': 0.0, 'learning_time': 3.2490352168679237e-06})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__None.pkl


ONLINE LEARNING CYCLE 0

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 5 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 490 datapoints
Loss: 0.00698, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00000, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss: 0.00000, iter: 12000/100000
Loss: 0.00000, iter: 13000/100000
Loss: 0.00000, iter: 14000/100000
Loss: 0.00000, iter: 15000/100000
Loss: 0.00000, iter: 16000/100000
Loss: 0.00000, iter: 17000/100000
Loss: 0.00000, iter: 18000/100000
Loss: 0.00000, iter: 19000/100000
Loss: 0.00000, iter: 20000/100000
Loss: 0.00000, iter: 21000/100000
Loss: 0.00000, iter: 22000/100000
Loss: 0.00000, iter: 23000/100000
Loss: 0.00000, iter: 24000/100000
Loss did not improve after 5000 itrs, terminating at itr 24816.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99444306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8193507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5368348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9839978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98607486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9934275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92924094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9882559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98653877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95284927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98558193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99654806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9569709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9487354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.968056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9668455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98991317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98668873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99048567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9924893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9771949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9776862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9333476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9897061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96415854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94873685], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9769659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.82004684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.44711503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9934489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8303712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4300465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.95117056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7308194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9957899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8384622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.42793056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98257864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80886215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54861397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95200133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9830643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9306236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98979783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96972656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98437315], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9830753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8145232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.58574945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5423284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9875495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9676605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99161154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9660909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9670938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9837357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9609564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.94819236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98627883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9812946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9667331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99101275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9851726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9749807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97926176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9509704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9739871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.948927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9942153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98151934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9910494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9942166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.989738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97102696], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9996625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8346853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.44991788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.98322433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.79261273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.53490615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99794495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96906364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.965195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99973416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94634706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99611604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99364275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9355446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99823856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99591565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95899457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98908603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.911802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9657845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98850167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899523], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.94869804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.73629713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.991998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.85446453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.4569484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.96220255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.79081136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.5411687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9712065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99342525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9804123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9977149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9521765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98154527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96143943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9637308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9802115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98940855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98085475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96901655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99348336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.997578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98859596], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99368256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8347724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44647494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9930368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.82643044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.43958208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99856603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.86072046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4586242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9704929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7687218], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.50499773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9735688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9719509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9493307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99712664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97188187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9533008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9505832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99061483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97978765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.967108], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9958995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8244515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.4154306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9821646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.8128741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.42057487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9580423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7691305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.51893544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.13235153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.9642029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97153527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9912317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.983469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9914154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9453497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9870655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99762267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9987595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98777175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9998899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.992944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97553766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9854943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9500085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98695207], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9596661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7584767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.52937394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99161166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9930873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95248485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96836084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9594215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9701894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97968066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9667708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9724088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9834529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93811464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99271166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97255594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9838132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9938053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99425423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9997287], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9971098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.82697123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5424055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9777603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9952377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9917049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9733924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9746587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9865947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96964306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99291015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.975443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97035754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95949894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9671225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9563269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9986472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98790133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99180126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9527388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9839264], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9733806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.77609056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5241607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99703383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95014656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9678653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9939909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9909584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9928792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95409435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9952793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9692389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95959485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9897495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9711107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97332555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9054259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99289143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98902446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9748029], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97113085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99819595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98661774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96558905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99708545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98926604], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (0,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0][1][0.0][0.0]
[0.0][1][0.0][0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 505, 'query_cost': 0.0, 'learning_time': 42.51779485406587})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__0.pkl


ONLINE LEARNING CYCLE 1

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 10 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 935 datapoints
Loss: 0.00045, iter: 0/100000
Loss: 0.00007, iter: 1000/100000
Loss: 0.00004, iter: 2000/100000
Loss: 0.00005, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00004, iter: 5000/100000
Loss: 0.00005, iter: 6000/100000
Loss: 0.00005, iter: 7000/100000
Loss: 0.00003, iter: 8000/100000
Loss: 0.00004, iter: 9000/100000
Loss: 0.00004, iter: 10000/100000
Loss: 0.00005, iter: 11000/100000
Loss: 0.00005, iter: 12000/100000
Loss: 0.00004, iter: 13000/100000
Loss: 0.00004, iter: 14000/100000
Loss: 0.00003, iter: 15000/100000
Loss: 0.00004, iter: 16000/100000
Loss did not improve after 5000 itrs, terminating at itr 16060.
Loaded best model with loss: 0.00002
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9663058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9984045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99137753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9814457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97309154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9798899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98174226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99575776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9773721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.981691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99436176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9978972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9930673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99401903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98382354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9946208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99867254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9924268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99872917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.975975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.945935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.990038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98198116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.991261], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9956803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9733461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99274915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9572164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98931897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9935181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9799351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99684423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9590358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9782078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9432328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9772397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9820611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.989372], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99753517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9966912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9998755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9878198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99752617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98296964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9603134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9660072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9910581], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9973075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9967124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9907861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.989212], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9956931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.96449393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9930214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9970345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.97013646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.96066755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.98261744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9658205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9901298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9620287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.97701526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.98526186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9916868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.96007097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9932101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.97838825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9574395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9880173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.9984296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9948607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9539356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.9939976], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9998781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9835077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96476936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9903451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9780382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99904877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9783887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9937522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99764985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96183866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99697465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9958591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94554794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9581416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9840006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96186846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9862618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9884074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9894283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97292036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99615663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9982813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.95118225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99990076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99789345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99059176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9827554], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9921501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9888102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99641913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98235184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.96180993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99647266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98448515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.97329634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99407494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99502325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98448575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98676795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99417704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.97135675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9770711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9819098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99964774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9758788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9772521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.96115947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9863017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.98875797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99983716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.9926284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.99794924], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9551369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97841364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9968484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94627887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9964275], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9880725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9397208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9765909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9950234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99735487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97566843], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9818019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98327583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99799234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.96021813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99571997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99978477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99424887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.99924994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.94771945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99766016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9957412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.98486054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9838692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9830501], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.97910625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.99241626], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99720824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99923915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9933127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9906431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9911505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9992839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9971546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99073493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98959166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9954129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98514855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9849546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9859894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9994656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9847103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9853983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98412496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.983178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9808419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99038583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99595785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96380824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97013485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9750293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99070317], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9969139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9900906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9683996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.96444887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9900243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.96925604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9856167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9782311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9974756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9970161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99557817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.95801014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9975066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99307954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9869528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98791665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9433572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9569152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9958243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9985696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.9846743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.99818677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.97682196], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (1,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
[0.0, 0.0][1, 2][0.0, 0.0][0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 965, 'query_cost': 0.0, 'learning_time': 72.98420924507082})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__1.pkl


ONLINE LEARNING CYCLE 2

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 15 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1425 datapoints
Loss: 0.00007, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5966.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9979499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.69283617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.08043982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00675307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01286834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02161597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01458598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00885656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00921442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02844975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00909337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02333595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02478917], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02563203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01545392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01231517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03839715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04210381], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.05185912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0671724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0873078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02963036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03012628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03304048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01085121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00285313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02841206], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.93107605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6240493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.988835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00503597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00335725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00853548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00732734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00542893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04143536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04926569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01630034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01513149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02216082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01475606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00518114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05145678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06928537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00563106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00297779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0151959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00152481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01072007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0042768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00072506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02411161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02750375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00423827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00777009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00095737], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9893579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.7308457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1333055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00222787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01522289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0081665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00113532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00609898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00959767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0139132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03237266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00123009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.041559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04350257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01065471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02593953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0201245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01372382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0445461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.020422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06716525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01532328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01741319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03323966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02702142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00883215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00470027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00353004], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9981637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6927627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08125389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00545298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00508094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03507742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01577862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00550748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01116584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00435736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00923136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00567206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01506037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00844074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00738839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00231084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00605349], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04905583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0526823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01797614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01967654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00730645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00449039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02276909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02415184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0584666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05689156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00074202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00240481], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.99116236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.7326695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.13612823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02906705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.10135334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.10312232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01717206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01795862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01528342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00105763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00041784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01054751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00315553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00431318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00406164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00236622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.03571477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03333514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00735943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00326519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.00401485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00465966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02079765], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.97633034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.68803453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.10292225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00800538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00132352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00945715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01197033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01332923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00101466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00950901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00411012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0006912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0099041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02994469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03244687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01863184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01059707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01492507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00954489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0093023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01717689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01937518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00516322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01652428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00882571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00443934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03073994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02457355], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9949181], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.74112564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.15913916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03145628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00828958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00776024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.06844532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.06800375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0033373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0337857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.03272736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02182897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00290563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02865023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00100153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03328889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02961002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00300385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00426226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03778716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04442542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0010156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.0117728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00949653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00624985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00052612], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9571424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.68219775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9995715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0918185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03829299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02556808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01623997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01220206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03404421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02681885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03421139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04229235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0578632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05739592], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00796002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02671165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02889733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01195835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01490411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01505808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00449045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00844095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01163282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01588155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0353643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0080453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02061763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0021229], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99699664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.7168922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1091264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01868662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02730086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01429921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00768667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00230801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00258132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0040454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00109861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00816975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.014255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02987508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02780959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01617161], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00055151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01503465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02330747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03876555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01709623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00265858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01650535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01418238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00368026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01251109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.06403692], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9706884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.70162284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9967424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0939711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02055336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.04678291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00892712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00069822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00722862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01472389], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01104742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01749206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02653405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02045327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0354356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03401669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02093391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00551812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00317571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00161625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00907439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0095295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0165337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0278712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00711794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01649927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00240251], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (2,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
[0.0, 0.0, 0.0][1, 2, 3][0.0, 0.0, 0.0][0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1470, 'query_cost': 0.0, 'learning_time': 88.00038937607314})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__2.pkl


ONLINE LEARNING CYCLE 3

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 20 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 1891 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00007, iter: 1000/100000
Loss: 0.00554, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00008, iter: 4000/100000
Loss: 0.00009, iter: 5000/100000
Loss: 0.00552, iter: 6000/100000
Loss: 0.00017, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7352.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9824473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5956571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.620292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.62379557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61196834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5961615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5941701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60756826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5863267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60686433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5974861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60470134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6147867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6089785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.557738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6284957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.63831955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6197512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6044439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.592709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6029357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59158343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5612725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6147888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59854704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6167841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6012985], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9693586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.58591634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5961875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5912135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59962255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.598315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59715635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.57371664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6278911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.62342995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61205816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5920723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6331877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6032163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60815215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6134414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6209908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6357794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.62054944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.59926754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5936252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5828878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6000801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5948994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.56990033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5967955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6098841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6001422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6205082], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9924333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6136715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.61665463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60672164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5995977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6257261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6077778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.57854533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60544485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.58298403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60146403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6036142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60581857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60978764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6025093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60268533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60430723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.58852285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5946989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60596645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6186919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60008264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6232255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6048428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.61845124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60375977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6073255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6111677], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9995739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.62356365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.62080497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60122913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5852927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6140448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.62074137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60025775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6050037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60280967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.62100106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5994143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5955959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60780686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61870295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60996884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6057129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.64071804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60175127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6172026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5954066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5778798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6194779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5924331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6510675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5997105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60441715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.60186946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6035848], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.98361045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6141618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.5943324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.60798264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.60336185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.59363675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6062369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6175205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6267712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.58258694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6118603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6011691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6179223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6066432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.60373396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6028349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.60909724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.602271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.5920768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.61371094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.60548955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6054974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.6090956], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.98611724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59709084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5959889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5861843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.616334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.598092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6080893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.57778585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5989345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60131437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60826904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6127892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6046081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59548914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5903797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.618443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60945755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6112127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5774888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5976406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6116216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6055413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.58943874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.578447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5627985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6054311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6014686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60963166], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.9961651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6071643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5883351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5813564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6045599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5972663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6072004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.63559484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6093255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.597006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6113448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.60084856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59931916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6099576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6079829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6025336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.60352874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6193288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59458435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.6028812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59262675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.609458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5973808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.5898134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.60865605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.59836876], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.992653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60252225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6167068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6070725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59439915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5839097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59414065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6015369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6074584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5735336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59343785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6064694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6118093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59571594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.59732604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60528517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5944085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.595478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60846585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60143465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6191916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6106173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.58730435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.60633457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6562853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6049467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.61235726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.6036803], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99605274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6114525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5970109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.62002206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59236604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60071015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6090678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5949951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6063104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6010616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60630184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6130842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6313365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6009395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6036864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60560364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5984959], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6094801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6190859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59863085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6084823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59642416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.62118644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61602324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60067123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59531957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6236294], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9390681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5733215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5950334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6023273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6020621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6014783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61382353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.62321603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6264993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60510534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6013369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6044467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6021868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6039625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.61083835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6267111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6104969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6250677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.63337266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6180218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59635776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60283804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59107125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.60205996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.5911687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.59122956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.6202374], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (3,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0][1, 2, 3, 4][0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 1951, 'query_cost': 0.0, 'learning_time': 106.91833943605889})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__3.pkl


ONLINE LEARNING CYCLE 4

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 25 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2381 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00007, iter: 1000/100000
Loss: 0.00005, iter: 2000/100000
Loss: 0.00005, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00007, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00005, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9142.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24235526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23710145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24376127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22510825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26121017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23073483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25859684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22545812], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26864332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.213957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30817306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22699098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.28664473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22821239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21841133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2056374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23985474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2244519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23665285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25070012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2386557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23599514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20940447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22985737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25557464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23712276], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22915702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25102824], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24843317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23912449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23061678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24789433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21365903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22409025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22812459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.221118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21206203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22957839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23917802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23491699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23982853], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22251716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23616713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24268608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22838531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24354427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23554419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22800307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25901747], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23620428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22048785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.24545847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2464707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23433387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2737445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22053878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23940063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22158124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23318374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22916284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22854842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.26152286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.224794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.24364482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2492535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23451702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2537272], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24159332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23225437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23476149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2339756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.27587068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2325837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2460784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23633175], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23702538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24737112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24158333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2070427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2405653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22749792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20493999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2545403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2507978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23192775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23461607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21706542], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2314149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19828455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21765935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24317062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23622964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23341365], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23462269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23012535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23956881], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23174623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24472022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23072676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24908157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23365922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21964292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23057415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24169011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24011466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23987119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22601311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23645209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23491523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22667123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24438713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22252999], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23461099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2291456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2339268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24225469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24282296], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23990533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24157828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24334212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24647456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21246006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18130073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26900226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25042903], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.223515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22708097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24709734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24193291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24110493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2404583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23237702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23372807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25106454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2411665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23480116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23710656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23113334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2253229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22938761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22318685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23223779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23121694], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25312838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23743504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.263637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2616535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23065682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2130139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23711969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2210976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24258742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22842796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24472332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24256323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22404997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20733151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21210447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2545898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2472266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21632537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23568289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22801705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23460196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22357264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2342992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20838489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2526443], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23788089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24032617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23990415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23000751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22115222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23764068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24711417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24360111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22301503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2295068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25892305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23997585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2319705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23276083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22726603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24036936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23182797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25413215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22632374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23094131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2093894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21822402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.27904937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22712317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23382343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21579464], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (4,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5][0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2456, 'query_cost': 0.0, 'learning_time': 130.28067682601977})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__4.pkl


ONLINE LEARNING CYCLE 5

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 30 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 2860 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00909, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00006, iter: 3000/100000
Loss: 0.00909, iter: 4000/100000
Loss: 0.00009, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24540459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22227556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24073671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23560348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22858219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.277403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23564301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23254861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2337095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24200583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23303653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22981378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26276705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23407035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24205272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22623976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22353613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21413799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23353213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.27474514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22989851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23239063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23039569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25313747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22543913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21494046], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24096517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23312707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22433499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24560452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2534506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23483397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2526306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23677345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24066143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23116972], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23198299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2441556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1967002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24776512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26402733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19993828], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24036777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21272387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19404835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24083985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24428426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22296865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23457494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2474875], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2235651], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23549832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2488205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22698435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22297572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.25465295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23953454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2394224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23232836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.24209276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2124583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.20748477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23657596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22425948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23241784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23863085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23353277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22386667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23085283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23176709], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22651291], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2243159], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24172847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2407295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23185325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.257682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2498259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26570928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21526471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23185845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22045556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23940364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2310466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25871402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23478861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.250041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23531413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2132128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2315679], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23499076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.26488176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2831745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23745199], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21627285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.238476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23604992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22315654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2271665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23124863], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23503031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22469513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2249516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23782729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.26255438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23109527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24138995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2295405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23591742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23840056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22762702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24454616], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22873083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22907092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23256439], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23592333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24830003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22567809], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22908713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23043485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24706128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24815778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24236536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20645995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21928266], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23428796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24003632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23386098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23227377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23797534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19349997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22805631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23382424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24972837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22915661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24230269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22961068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21588051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21917625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23417816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22194725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23545994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24035951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25873554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22448815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22161867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22785996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24302313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2398525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23504569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24386993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20657891], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24581362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24034442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26063702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23547985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22976674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23494568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25641134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2325781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25058052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2263789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20014206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25480306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25839344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2395712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22990659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24417052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23809658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24816814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24691755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26241538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2469928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2278022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23333155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24778792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23687752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22343083], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23602815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23199429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25681356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23855525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23051307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22708173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25567615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23535538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22882886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23463368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22921403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23545454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23352215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24163483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22248933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2248266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2536034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23814316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23658533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23479982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23566769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23435436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23611464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23468792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23047455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23585337], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (5,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6][0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 2950, 'query_cost': 0.0, 'learning_time': 148.0112347730319})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__5.pkl


ONLINE LEARNING CYCLE 6

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 35 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3306 datapoints
Loss: 0.00904, iter: 0/100000
Loss: 0.00893, iter: 1000/100000
Loss: 0.00018, iter: 2000/100000
Loss: 0.00899, iter: 3000/100000
Loss: 0.00011, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5162.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.13909572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07019623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01412874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02288773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03504929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01873797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00359423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00229928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02713708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02907644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02105973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00607182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01857795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00771347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02126781], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01387621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02031105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02910002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02831298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0285932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00284541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00348724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04824767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06917366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03165408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01671535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00827936], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09551453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09900868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01725478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00761946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00170222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01762627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04128947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02238366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00918521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00034495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00804039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01395277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00413876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01879495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02724242], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01850222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01435794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03923133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04809628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00598826], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0261628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02771236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02772093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0151945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.056248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02557477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01694635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02025171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01863873], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14110216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05338103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0264412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02420127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01915432], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00430167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00213011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00367055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.001638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00190025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00579612], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00859077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00419456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0034082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00132229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00173064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00060721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0164329], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00964285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00027094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01141137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02040206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00510601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00878102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02088365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01486225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.002119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01499947], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11984263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07869554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00693927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02502885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01408794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03452582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04303794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01963347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01571264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01103086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0111821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01232952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00474932], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03110443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05412998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02986029], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01461725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01408129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00627834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02605388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02650147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00048364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01231627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00708584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01660145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00630766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01993314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00278547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0080073], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.14262691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.06306139], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02042226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01781899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02143132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.0033263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01123878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.0058084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00059782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.02717469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02739715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00507051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00038851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01114562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00929768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.00169906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.05902821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.04651713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.01884268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02749769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.01328417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([0.03534922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell6:cell], params=array([-0.02970841], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10238182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09712299], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0333773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01616899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0238959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00815863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.07008069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04582595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04727468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05812442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02307949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0267891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03216697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00171758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02888856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03852734], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00855738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0254689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05721328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00766485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02636606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00999687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0337768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05318465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02541701], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01243065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02241927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00198522], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.13215798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.09588256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03805891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02222732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01370096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02398742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.0371674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01242414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02972723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00406641], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00035205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.00536103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00694444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([1.3409086e-05], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.02302919], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.04494546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.036628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00073787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02585593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01699212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01409428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.00885057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.03886699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.04721403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.02827474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.01038659], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12999037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08002225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04350103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01389213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01590461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00686341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00495654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0021887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00618594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00131933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01057345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01587959], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04660894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0579866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0094763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01987063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.03300063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03071553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00770049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01333611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0192072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00176847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04495558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08053663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04667285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00296204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.01874315], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01432127], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1029472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0935742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0147749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02755962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03298295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03674807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00130017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00561851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0075774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01691599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01806564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00729227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02230939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02669804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00158687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00289986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00259245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01979081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00078736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02110726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00490122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01221762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02046035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0568547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0356483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01416067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01485696], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12685286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09554338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02900718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01698507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00661839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00817615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00521817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00479481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0069707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01097905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02171936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02717691], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.03614008], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02495527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00722941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00032819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0053429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01728255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00177579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00290308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0023173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01278441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00074916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02189156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.01284236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01081429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.00409754], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (6,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3411, 'query_cost': 0.0, 'learning_time': 167.3375516619999})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__6.pkl


ONLINE LEARNING CYCLE 7

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 40 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 3788 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00004, iter: 1000/100000
Loss: 0.00019, iter: 2000/100000
Loss: 0.00017, iter: 3000/100000
Loss: 0.00008, iter: 4000/100000
Loss: 0.00004, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5605.
Loaded best model with loss: 0.00002
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5392479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5442548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5326868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53875077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5361602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5192884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54091513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54700446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5434699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5363431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5413549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5078659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5445506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51889986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5434844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5463469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5208848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51619923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52406377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54324275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.513859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53248394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53933847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5433104], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5376323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5347167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5404859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5366848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51192695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5238974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5475735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5406772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5376081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5387585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54262197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.541934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.513575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53828037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5406366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54941845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5286858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5114771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5468712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54276127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5481439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5384759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5441661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5432555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5392358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5467693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48880792], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5207314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5325733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.53612554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54517335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.52250046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.4734592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5427683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5365981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5240787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5292627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.539747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5405214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5313941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5443012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54092497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5458576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5336175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54432315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.52723324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.51329446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5448172], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5407136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5485096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54083246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5226838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5039981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.503367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5458499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52151823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54645854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52254117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54079336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5499196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5526352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54005134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50653416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5395261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.541952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.534095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5324271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54300654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5015492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54596657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5449914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4945387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5361381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54344004], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53730965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5374414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53301376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.52539086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5242271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.48494738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53385496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5330905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51383364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.542406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5368726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5378508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53853554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.52621543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5333797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5383883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.52546346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51292026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.54796666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.527645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5417695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.52192503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.49615633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.54353654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.50732154], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5448895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48819178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5410565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48483038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.55309904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5445437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5312533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5445498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54288304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5266089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49922073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53512055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5473523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5416893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52750117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5426122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5368901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51908535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.548533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54055065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54523945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53073967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5315076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5320862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54641557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5545284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5285457], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50323504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.533927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.525321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53806543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54305524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54711854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48105037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5313702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51670706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5305165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5439123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5013838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5278894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53569096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51375633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.55361116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5275027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51932913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51362103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50343174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5442867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5435014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5226468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53548235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5439008], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54305315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5341508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5376191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54269546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53911203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4843523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5234199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5441754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52263004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5243066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5415968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48591703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5297353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.55477744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49117053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5398235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49716312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5046218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5486526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5409133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53604805], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (7,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 3908, 'query_cost': 0.0, 'learning_time': 189.06262345798314})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__7.pkl


ONLINE LEARNING CYCLE 8

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 45 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4278 datapoints
Loss: 0.00003, iter: 0/100000
Loss: 0.00899, iter: 1000/100000
Loss: 0.00009, iter: 2000/100000
Loss: 0.00009, iter: 3000/100000
Loss: 0.00898, iter: 4000/100000
Loss: 0.00887, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5006.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02566294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03006424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02358697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01215276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03463564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03185145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04845864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04143722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05071024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03872355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02850058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03109762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03974804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03766877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04418406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03381092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02484378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0511055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03021288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0100934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04068027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04866006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02685607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04439006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04474953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0236409], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02148398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04391835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03999714], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02918085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04345885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00399114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02129505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03323594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04498367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03632922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04699748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02606686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04939058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0205627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04609373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02695936], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0390374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03094797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04304106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02962176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04864272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03189347], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05989189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04388397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04129927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04629497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04369106], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04972523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.01326895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04122802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.03065095], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.03875108], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00629945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.0473683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04041622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04700033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.03313752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04023578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04766569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04856608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.02492467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.0482721], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.02899791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00913619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.040567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.02908283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.04376437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.03383491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.01003987], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04027998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02432872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05094369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03582954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05109695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0485445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03698491], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04120997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0462543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04297173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04481795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04835074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04303924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01554147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03194421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03892876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04839957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04702885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00043806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03415749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.041692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04389239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05409211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04601359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04072718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03925032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03833307], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03895203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03335355], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03996538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04771793], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.02186035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04898149], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04879694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03172055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04618227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0476102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05993158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01362937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04276418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04856786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04636494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03206049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04807665], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03606633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.00835264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04693408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03020403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.02815552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.04611269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.0384998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01831296], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02563538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05451996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0257595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03808732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02358326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0477704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04819261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04798791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04565053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01217105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05392057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03406427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0165312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00475938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04938526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04017892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05267747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02259852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04289567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03982995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03247946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03783281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00093626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00842072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03816502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03386486], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04019589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00486045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.01571894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05391707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0137423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.00371351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02665402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03810407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02209502], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02932173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04894505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04367398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05174644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05027401], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03299528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04830942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04729179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03689444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05308493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05060323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02274012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03143425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04418134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04870968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0509317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03991461], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03061924], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03681373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02894164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02903293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04426303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.0245927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03789747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04188235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04487455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04847322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04678304], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04179499], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04638195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02205082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.060815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00197283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03527588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04103632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04387423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04584404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02211465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02408724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.03131449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05135332], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (8,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4413, 'query_cost': 0.0, 'learning_time': 211.2135479139397})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__8.pkl


ONLINE LEARNING CYCLE 9

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 50 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 4729 datapoints
Loss: 0.00935, iter: 0/100000
Loss: 0.00005, iter: 1000/100000
Loss: 0.00005, iter: 2000/100000
Loss: 0.00011, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00907, iter: 5000/100000
Loss: 0.00914, iter: 6000/100000
Loss: 0.00006, iter: 7000/100000
Loss: 0.01818, iter: 8000/100000
Loss: 0.00006, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9843.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11770531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10516583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1074765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10777287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11678117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06235171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11012909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14279926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07974914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12864235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10199663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10125294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12280979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0955614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10393731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10927798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11709272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12102566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11394102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12388435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11927651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11687456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12223566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11140626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08653925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12175442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11258906], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11565217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10831193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12361932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13437523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11760692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10638495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10375814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11960572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09945311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10418684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12545234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12048703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07514705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05964047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08261628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12108485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11500531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10859103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12568018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12231903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10960308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09732459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10807767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11036129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09780354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12014754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11088823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10636691], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.112984], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10382418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10754387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10896685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12170656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11841302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10845154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09650579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0355447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11051722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11360406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11850777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11514769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12214087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08885042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10712205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11219788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1181618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09474457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12188344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.06185168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10409606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11981606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0818646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11557492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10370584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10631464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10673744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10237037], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10563873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10208961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11636914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12006096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09708425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11395114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08258577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12448784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11811095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11445521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09379708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10772002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12111814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11685102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11501195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13487925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11283451], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08652858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12792118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12147954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10115687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10210165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10957548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11516349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09655008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11668859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11225151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11393239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12298389], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10458514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.11509915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.11281491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.09943912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10103871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.06127882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.1159168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10636276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.12063565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10374983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.1217156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10854363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.09516902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.1225964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.11678053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.08467036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.12219154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.08385036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.1108739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.0945766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.11858142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.10805062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.09752972], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12641612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10960244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11378796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1060482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11482975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1163756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12278056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11256018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1093786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09997545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1228715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12133224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10004853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11641754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11870468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11527926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11445025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10471079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11287933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09596638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08719414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11367452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12688103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12886733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11706857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09757682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11680081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05770945], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11104025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09573244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11381064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09919807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10706728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12600951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12081563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10879318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11658853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.08679993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11355144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11134463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11742131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.1159599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10572148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11395368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11526403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.09691101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11766418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11113623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12048606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.08864458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.12125951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10490309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.10177005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11955415], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09846386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09052178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13702695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10657429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08947995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12069731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1072301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11788151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10812283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1014439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12003753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10540246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12036302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1154462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10155431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10499724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10655427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11602243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11869325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10353866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09244744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11572496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09082822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11200773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11151483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10357066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1260867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11798802], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09509195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09631768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11094016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11319282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.0712114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11967342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11051701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08906917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11049443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11591005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11453458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1206459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11341469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07733961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.06219527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08985586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10340839], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11427811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10205331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1113308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12438391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09267262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11287924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09137884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11666252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11803258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11126226], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1101617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10539044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11904724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11233155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11662934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11766438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11927241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11984484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10312784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10684824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.07004922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10250077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11784309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11857918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08499909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11484968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11712246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.09519048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11751045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11560534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11073695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08440035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.08882079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12252601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10680573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.11136557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10877711], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (9,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 4879, 'query_cost': 0.0, 'learning_time': 243.18378760293126})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__9.pkl


ONLINE LEARNING CYCLE 10

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 55 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5219 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00008, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00007, iter: 4000/100000
Loss: 0.00936, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5003.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6713827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66895795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6633807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6625153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6282078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65666765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.67034686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6666132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6225785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.67165154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6513673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6696633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6675768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6649005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66160536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65610695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6407815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6540214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6603955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66068506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66906184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6684982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6542222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6349121], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6543022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6733831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6445919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65133053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6295005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66863585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.64771163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67023134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66760266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6523245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65857035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.64799136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.661587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.63786703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66998404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67084754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6432713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66329575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.59690136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67160314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6668378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67010164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6347664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6682403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66854215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6618486], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.66933423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.67284507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.64394057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6605019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6611506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6679765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.65250397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.64304334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6639144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6601958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.67274153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6339572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.664052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6433146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6646985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6447134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6623034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6684465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6712837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6684147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.67074054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.6647341], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.658937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65854824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.60122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6478119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6491313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67096305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6689199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6686558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6633843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65971875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66179776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6708786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6179308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67201036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.669078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.63219863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6704016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6354804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.60602254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6704042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.64849997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.656411], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66797566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6675196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6430581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6543629], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6732458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.670431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.66789585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.66838616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.67453307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.66178316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.65948737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6718349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.65458804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.66399896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6614613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6239326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.63309985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6711185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.64094406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.674709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6678515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.67141485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.63892233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6211169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6499264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6550791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5970489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.67051375], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6630361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.670566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6579335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6688856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6585253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65694165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6710355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6568006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6655812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6650092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6352916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6471203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66650325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6369642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6518916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6491768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65903395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.66742575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6627407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6624603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6759917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.670333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.67135435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.61821544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6323577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.63379765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6630718], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66215706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6472072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.63841397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6502519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.63861144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6464014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6670061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6685693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6652977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66523665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6719945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66328526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.649075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6640973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.64524335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65225315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65377164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66797215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65500456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6620223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6710453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6555533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.64351594], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6702624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6367231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66040653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6687575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66441226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65568274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6439936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66810423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65192103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6669881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.65086675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66181093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6719178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6651971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6457849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6672141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6587977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6617521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6669724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6709063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.63434887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.63011307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6725738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6140874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6630675], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (10,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5384, 'query_cost': 0.0, 'learning_time': 268.57529581693234})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__10.pkl


ONLINE LEARNING CYCLE 11

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 60 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 5709 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.02813, iter: 1000/100000
Loss: 0.00947, iter: 2000/100000
Loss: 0.00006, iter: 3000/100000
Loss: 0.00004, iter: 4000/100000
Loss: 0.00005, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6743.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37732485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3569343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4008995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37408933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35376236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3731588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36506918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38019434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3759838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37819844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.34281924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33781984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3786878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36086234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38133657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38271904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35449627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35853693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3628853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39048102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.376432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3681334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39095807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37567672], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39042935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36321265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32330984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38225248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3633038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3812581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38099378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3851578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34779096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38038898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35021925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39037645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.361643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38935766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3702946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3194045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3873334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3759724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38601264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37780395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38476357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36810485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37683898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40666544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38143864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38167602], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.29553607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3723041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.378157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3655369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3829811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37030616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37053782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37663597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.38333836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3837848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3702654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.35858607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3550844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3611684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37405926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37258613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.385694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.38604313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.37620464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.39182782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.3853588], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38126907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37327525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37765452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3748543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38404968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.346277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39784816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38104495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37338755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36455086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.390597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3680587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36372706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3374369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38798472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.382796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3982849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37973818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38643137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.39080676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3942895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36148542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38784492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37984434], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38841772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3668042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.34278947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.34429798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38584417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38388568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38594714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3716221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.36995763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3808496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38548744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38147458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38120916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.348961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38975936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38482967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3725983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3171784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3725208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38604406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.35358515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3862227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.37118506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.38230583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3803289], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35870922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38266808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38815156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37266865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3777358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3594232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37521356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38717005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38803372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32775724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3926997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38236994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3835893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35377568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37241152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3670031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3529887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3635061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3811905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.36261865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38457444], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35451135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38503155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3830315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3492427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38549155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2962102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3927239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3873374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38284722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.370546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.28580338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32531837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38704014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37305498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36552146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36916515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37614614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36156046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37846386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36199504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37973166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3875178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38758063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38728958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38220462], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37647495], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3613654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3760492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3998385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38699406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37995186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37403846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.36794445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38599545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38494518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3795498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37435523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3737094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3892623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39478844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.351806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3822653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.32568663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38490602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38980702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35065764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3729792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.38015372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.39097634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37978214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.33716333], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (11,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 5889, 'query_cost': 0.0, 'learning_time': 298.4430174109293})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__11.pkl


ONLINE LEARNING CYCLE 12

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 65 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6199 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00004, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00005, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss: 0.00006, iter: 6000/100000
Loss: 0.00956, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7562.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.97151804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12443471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12460849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13885234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10884725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.114733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12915358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12272561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11686369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13475446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1289829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1362334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11316309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1292306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.137398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12821308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1284803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12745196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1251283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.09220038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11303878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12271111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.135454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13531137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13323133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12051679], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.9977588], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9836371], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13331658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11092427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12391794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09638886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13780187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13748921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.127878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10782512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13583302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1325182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13668391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13285086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12350251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12722039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13535339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12816548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12842983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1034136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09575319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12709983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08541267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11442319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06286464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13682738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10900569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12780498], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.94709647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([0.97590506], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.12019088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.12892158], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13435894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.12880073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.1372638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13661039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.0864825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.12719335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.1101841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13748197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13543046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13687168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13539478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.12498042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.12709108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.10940872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.07590041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.1322863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13511126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13132228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.13380134], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.99775505], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13949928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11968997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13455822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1287865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10077519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12979172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12985241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13564423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10562185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13017876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09003229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13395725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13585852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12422679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11772212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13157955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1063078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12810157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12589759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04260895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09515637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11814436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07487012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13650239], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.97944504], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.12763838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.12215997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09845797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1156709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13470703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09981742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.0941717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13473892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13184448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13708767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1289752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11586362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.129616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11964175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11920703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13273363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.1017094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.10731465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11486702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09098844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.10681625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.13506898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.09249743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.11934941], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.9813059], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14429964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13644876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11542347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12505944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11557589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12839824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.10230739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13745447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13253085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14765505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0953302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1131243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12457178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11530081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11309267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11312767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1303836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.12871414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.132617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11335767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09880241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13467692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13582088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05445378], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.99518156], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13208799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12315878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13845907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12362164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13322385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13642335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1249343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12183727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11962126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13713086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13204497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10829499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12788491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13649425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13160433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12328056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12544537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11213942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11787266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11638118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1348249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11745318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13205218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.084373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11705973], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.9955446], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12220243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.14093836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0820417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11444012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.08285152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12957387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12385972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12940134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13838951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13421637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13797063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11735604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1271742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11871792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13061282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12815587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13028933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.127433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12917762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.11511692], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13425787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05516418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13560086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1274631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.12494116], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (12,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6394, 'query_cost': 0.0, 'learning_time': 331.38848131592385})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__12.pkl


ONLINE LEARNING CYCLE 13

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 70 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 6689 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00004, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00011, iter: 5000/100000
Loss: 0.00006, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00004, iter: 8000/100000
Loss: 0.00002, iter: 9000/100000
Loss: 0.00002, iter: 10000/100000
Loss: 0.00957, iter: 11000/100000
Loss: 0.00951, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12440.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2825018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25388825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28485554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23235844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29070404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28104997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2917509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28446642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2746489], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28763324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2615605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26761034], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2954378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29309985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27777532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28027362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25795949], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26132083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27292794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28771538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23002341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28872773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29489273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29469687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26533473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27923074], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21600632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29488075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2905778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2842261], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27928874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29080126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28636733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29163983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27001956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27742597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2499287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27539787], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26286268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21362984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25152367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2704268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29354528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20255056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25904608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2812413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28517485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29115167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29203925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28104946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2889998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26790795], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.28695402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.27342463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25975877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26968044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22970071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29474524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.20913707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29173905], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2886111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2782715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.27211118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24890177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24691945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29295447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29382056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29251313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2809164], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2157493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.29241925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26617804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25824064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.28400007], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26718786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.293754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2814648], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29342374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23850979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27915037], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28780156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29256237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29127464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23137352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29142547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29196465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26693368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29493296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29348928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25469217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27199057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28481764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22447236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2769311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28298062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2851767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2939948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29163867], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28781313], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2784609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27227566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18622954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28322014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2859678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25979948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2789717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2562099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2945569], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.29298884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20720634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28798136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.27167156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28617978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.29447514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28210834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24489379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28875178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2906231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.29097718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28354865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.28763568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2882457], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29362115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27531102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28270882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26886618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26147684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28273624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26761484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24867265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28941455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29067308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20881663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26415354], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27494287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27494854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28303716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2872378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27686128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28948548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27395633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28827855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28684896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2930951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28070217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28886542], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2631515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2853314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27714097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25592473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29462507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23550405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.264543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26864797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2854385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29266748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29408792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2904835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25195578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2947882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2114388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24828114], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22351292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2839928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2838142], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2698625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28971955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29334533], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2663415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22046205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2651583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29311338], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28337756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28872776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23445733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14018132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2826559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28523916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28684768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2426144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28312907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2622474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28464496], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27684462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26968664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27016926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2839712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28165174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24775992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.29421365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28438485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27285093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25468805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24184977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28971452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.28272018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22037688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.27716783], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (13,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 6899, 'query_cost': 0.0, 'learning_time': 374.02559800294694})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__13.pkl


ONLINE LEARNING CYCLE 14

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 75 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7179 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00951, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00948, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00950, iter: 7000/100000
Loss: 0.00002, iter: 8000/100000
Loss: 0.00004, iter: 9000/100000
Loss: 0.00003, iter: 10000/100000
Loss: 0.00006, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11102.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10644384], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1112492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1223657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09099352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11574454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11729466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10951966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1228526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11973748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11905735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11848252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1224298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0717032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10301343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11908634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.06810819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12287582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12152025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10321872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0902871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11557943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0962221], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10966688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11544546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09706535], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10989027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12182028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10025015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10999215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12151817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10485637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1201327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11037284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11913984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10704169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11792963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09740115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12130132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12173125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06854077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11770236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11153235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07283682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.095185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09310126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10593555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08774367], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10628039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09896257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02173631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09894084], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.06484344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10676892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11488035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12199945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09795861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08340152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11260173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11760043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12251109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08821994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1152622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.09024848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10575395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11147963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11916623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11369451], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.10598116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11943911], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11636836], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03468323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11848801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11462703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11483093], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10823171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11979234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1151031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10616267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11068509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11958884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11025479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12258048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12290113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10465012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11489532], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10873143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12323301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11517455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10116531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11977662], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09084295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11070973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12281353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06747935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12098557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08574506], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11876754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11920448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10493356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.05264821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11652761], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1051292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10005033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10849902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.09797981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.117141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12971908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06692839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11932839], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.10043745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11212129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11885877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1111541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0885213], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.0905308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.11373515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07214244], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09950414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10249068], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11171266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11865398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10574561], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10107789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09680717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11626773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09001392], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12102927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09720577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12073762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10913233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11879579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12083829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09808374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0702974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12167977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11790121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11504465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11420301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02344215], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12025866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06834174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08183511], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11534893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08994064], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12044591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1124857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10041619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10564345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10998076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10412422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0709845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07138859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12212227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11165362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11529969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08277629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1041658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12112089], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11134145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09454633], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09250209], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11955243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12136991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09845829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11874827], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12371965], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12722206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09518971], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1010234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11419336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10252802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09807307], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09319671], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1101891], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11142308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11696357], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08842861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08658064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12317602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1035084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09298786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09801722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12139507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11914727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12011562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11903512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.09132362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0995046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05691148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12213239], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07176352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10216246], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (14,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7404, 'query_cost': 0.0, 'learning_time': 416.175814349961})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__14.pkl


ONLINE LEARNING CYCLE 15

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 80 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 7669 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00942, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.01880, iter: 7000/100000
Loss: 0.01880, iter: 8000/100000
Loss: 0.00003, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9919.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26919132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2768605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25241268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29116404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29329044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26025617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25613713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2597181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2961114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25972095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2794717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29126337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25837958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25857717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2895042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26160648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2708196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26222342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2934098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26882708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27199724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27129987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2695878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28644362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29654652], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26742142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26870918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23371682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25772944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2927376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26788422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26001722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26733872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25518918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26595998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29608172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28264096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21795209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28254822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27436513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24410613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2595314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26245192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27113262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26469943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2846108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26366574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27357063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2792856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2170265], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2731796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29588503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.27139643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.23944482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2666219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28390437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.27424663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29622576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.26842567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.27976677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2706316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2688227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2925012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2615743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.26248777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.26802287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28684524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2741441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29398036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.27294856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.26336205], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26435956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27169764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29683882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28161114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2609935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26383835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27242017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2424989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25777566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27040532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25811005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26781288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2859276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27316087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2685153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25946447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27527085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28011936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25865108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27490357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25496736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20272815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25329006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26892653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27476388], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29228324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26526138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27532524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2697187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2905873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25788078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26463103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27373153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27355316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26688236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27305207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2720822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25837374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2699162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29033002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26442316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29180673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26003098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27490333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29535666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26033452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29288444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2739132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26005694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2699798], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27358723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2893181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26571292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28193918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25721425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2952656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2648335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28712016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28586003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2634666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29719216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26089093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29524875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2759538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26367813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29332674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25814337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27339432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29786822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2686238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28142175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2499955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26910222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27196667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2632041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2588619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2603418], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29460073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26864326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29446667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2622645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26191476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25909704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2853921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28535318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2668522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29503977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29550788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26836655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28959575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27211985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2671975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.271314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27664217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27306005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21145485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27527866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27953643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2656401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27115467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24807854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26407504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2768268], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29049042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2598565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2837705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28186205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27468243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29918566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26817396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29780897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29079273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2745604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27403507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26797205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2646358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2908063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2514052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24111289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29095742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2734207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2959888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27119964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26098874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26457372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27501345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27073455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23937619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26783714], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (15,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 7909, 'query_cost': 0.0, 'learning_time': 457.8221208899049})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__15.pkl


ONLINE LEARNING CYCLE 16

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 85 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8159 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.01010, iter: 2000/100000
Loss: 0.01014, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5016.
Loaded best model with loss: 0.00001
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.488471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4866993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4496963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.479921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46426922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48208934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49201792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48437658], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49617016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.44592857], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4679289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4770426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48226404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.44852003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49070358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.45746246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5015893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4588243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4766257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46670908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47657388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48811057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48685446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48005736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47620386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48883212], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4664756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47527376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4720944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46050906], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46885413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48682284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46678784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4867399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47424564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.463989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47960097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48107776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48673227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46136126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4818237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48730606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48598957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48978135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47631398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48021293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4754873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47536305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48072767], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45192915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49059796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4975968], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.4508776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.48519975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.4824751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.48593163], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.4666626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.47159204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.41070712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.4556981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.48109028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.48623416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.49208048], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.49241927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.47660697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.47993726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.48667789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.48949784], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5010009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4635867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4703601], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44677687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48666757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42603904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45309684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47175977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48938245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4891266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48618057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4417289], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49334332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45753646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47468758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47565252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4960541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4835551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4911231], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48992488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4686552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48718935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48013538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47798577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49082962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4819954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48738134], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4320201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.488225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4893197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48109207], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47420892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48178187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48302448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47892198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4634994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49626243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4420834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47339255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47802073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4792118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49409583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.4780393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.46056688], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47496957], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.49221537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48009515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48829955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.488459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.48571122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.47623196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.46997166], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4680508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39585572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47274604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45171264], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47246203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49377024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4940368], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48895276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4801085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4734431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48262697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49043572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44778228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4802461], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4637238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48577887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47802508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.49333817], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4886629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48725942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5001783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4827375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48950467], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46412453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49507535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4874356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4734252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48458052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47664666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.46253517], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48801023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47098443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4696613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48162195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47338387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4733237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48151845], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48226717], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49289945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4962902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4798191], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.487981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.43411282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47564986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49863848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.40326607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4876518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4874956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48465788], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47186628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.42923334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48295102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47384673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4914153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49051586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4574789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.482271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47209802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4909856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48161784], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.44478348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.42199567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48838484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48095754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47482497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47246617], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48664182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.45209813], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4882656], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4787737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49120653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.47057387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.41331983], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (16,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8414, 'query_cost': 0.0, 'learning_time': 492.62461050291313})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__16.pkl


ONLINE LEARNING CYCLE 17

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 90 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 8649 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.01049, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00003, iter: 7000/100000
Loss: 0.00002, iter: 8000/100000
Loss: 0.00008, iter: 9000/100000
Loss: 0.00001, iter: 10000/100000
Loss: 0.00002, iter: 11000/100000
Loss: 0.00002, iter: 12000/100000
Loss: 0.00003, iter: 13000/100000
Loss: 0.00002, iter: 14000/100000
Loss: 0.00001, iter: 15000/100000
Loss: 0.01041, iter: 16000/100000
Loss: 0.01043, iter: 17000/100000
Loss: 0.01044, iter: 18000/100000
Loss did not improve after 5000 itrs, terminating at itr 18027.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20776659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19151708], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23983677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23270994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2229302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19407201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23868768], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2260678], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23900269], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23976962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2082987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23749952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22949472], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23326358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23558074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18874921], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23229934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22206306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23772171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23525481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22203332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21796443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21505158], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24040529], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21678747], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23491365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2380651], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23720868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2286902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2268428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21388902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2227637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24163675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22708166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21691683], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20939201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2313868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21664086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23472945], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22043814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22444166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23857783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2324934], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2401125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21468528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23262541], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24328454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23875786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24038576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23556106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22584058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11034114], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23600814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23334031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21183485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22610323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22911268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23621887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.24046944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21988203], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22510593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23663789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23669794], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.24091032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23808819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.18413535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.1975062], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23039854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21626344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.24002069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.23709695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2388134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2216019], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2274412], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24088933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22232288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23186946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23131576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22483526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23569125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24154462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22684222], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23495764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22834624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18110539], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20168124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19994497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23996711], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24158634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14671965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23750894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2304684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23083888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19821072], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23788232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2206421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2360725], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17299654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23410282], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24090414], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22840938], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.19341862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22535494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.18439214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23929188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22515693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22395279], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23843837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.19463567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22958528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22524314], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23534122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23622145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2257868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22664028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.235888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22034748], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2292419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22011416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21547544], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.24196452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23801024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22151762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.1987256], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.17598782], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.23313698], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21718308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23216572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21467979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20228148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23738326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22718611], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20128684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23425151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23429482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23292553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1778262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21886145], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2401399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23226112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21850619], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17870674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22673836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21825123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23956798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21323116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2373125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2281169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21226603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22142947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23736416], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22006916], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.218174], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24043895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23505956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2392992], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2136265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23346771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23945126], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21648535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19727531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23843889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19923615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2060121], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20386854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22189726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22058277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22996634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23944318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2037715], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21686736], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2010629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21402879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24094647], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22661822], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22706513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22926521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23450044], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23397335], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21770763], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18112801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21211565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23962563], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21067847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18202423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22071344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14107312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21263453], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.24119276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22379379], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19679739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23731565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1987976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21840398], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23070288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23886286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22221962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23493877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23400111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23979308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21831073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22829424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23025005], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23531625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22743204], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (17,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 8919, 'query_cost': 0.0, 'learning_time': 550.443509880919})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__17.pkl


ONLINE LEARNING CYCLE 18

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 95 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9111 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5019.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22316132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20537248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22180696], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.17049032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21915111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22236522], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21400994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21167198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19582409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22204025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20753391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1666803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22077043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21399124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20006749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21506684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21994668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21690328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20813483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21209124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21266831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20935075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21965426], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19756699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21011004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17743345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18147331], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21946907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2025007], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11777238], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22152312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21454978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2149967], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22304109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17350988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21064027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20285632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19412962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21934333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20260675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21538422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20097156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22255038], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19195032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19519524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21185134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21358277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2132284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19848457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19464105], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21361528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21939442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2158834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.18773438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21412292], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.16511193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21624], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21118422], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22228666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22252762], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2175378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22259325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22258426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21858808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.2097205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.18740118], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21931985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.22232728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.17652546], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21957807], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.21510573], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1740865], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19997324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19789492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22199166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18433385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18181883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19562756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20784345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21508253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17472473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18500642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21961744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20953663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20444386], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18988733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14646518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21569094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21602027], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22018337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21767485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19437408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21810743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19419728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16115627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21303459], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1313644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1760939], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.17381337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22123341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20853513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.19943851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20626378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.19353448], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2154229], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20017377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2135248], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20998687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21535788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22043216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20903583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21044798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21295968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2144301], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2127718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21743786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21811022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.20732668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2172754], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22197343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.22237942], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.2044444], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21803984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20330413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19824092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1741423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20576319], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.19567871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21443026], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21951374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2174306], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18532012], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.22225294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20353548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20475066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16382208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21870902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21758513], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15900394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21301283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21876772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2129705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20997675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21235661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20269866], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21894981], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21473543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18840058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17411277], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21123543], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21482152], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2154572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.12689082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21660359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2167525], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18303351], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19497016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18649887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20015933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20460854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2089377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20095046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19718896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15934692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20034508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20140418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22022775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15749046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20723332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21086295], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19927548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15939893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21670085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1606324], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19430527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19911276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21282697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20473716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22280842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19494188], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22069786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19648042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2066727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21454626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19728361], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19573219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20908028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21938908], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19350113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18116987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22089858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20724103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21273772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20458779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21897987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22204317], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.22142184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2219218], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (18,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9396, 'query_cost': 0.0, 'learning_time': 588.2643792139133})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__18.pkl


ONLINE LEARNING CYCLE 19

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 100 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 9601 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00003, iter: 3000/100000
Loss: 0.00922, iter: 4000/100000
Loss: 0.00923, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00003, iter: 7000/100000
Loss: 0.00925, iter: 8000/100000
Loss: 0.00001, iter: 9000/100000
Loss: 0.00002, iter: 10000/100000
Loss: 0.00924, iter: 11000/100000
Loss: 0.00922, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12701.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5032619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5127466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48275113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5139324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50863415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5037495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5060848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5084927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50837904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5079458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49888858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5041644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48664486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5224609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48456886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50473505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50702506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51223516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51701504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4347509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4776417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.481231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51218003], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5174435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5050633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51761353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5060714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51777667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49614224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49954095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49851564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5004482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48944154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51535314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5138683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48996168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49319056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5000831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5049036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5027322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5153398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51525515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4805315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5143149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5230099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51642203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48200184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52213675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52042747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49492216], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.48267856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.49298126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.517387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5133076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5127503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.50384897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5206492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5046248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.50886995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.49941117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.50555134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.51115614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5168545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.51416147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.4963313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.50321007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.50571835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.51006126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.46549025], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51733536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49405268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5082812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5164347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50844973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5024195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51371586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47486487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5198819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5142668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5240103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50760114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5002956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51195115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50070816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48688343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5155443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5164754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5072903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5102313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5031357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50526744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5116059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49487227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49595255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47557446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5033991], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5145565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4995056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.52063435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.48569587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45897174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5141373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.516936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5161243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.49392423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51243526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51211363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5112904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51545775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51157296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45904514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.44112155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.503203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.50457686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.46783572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51352835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51268053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.49887273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.49822736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.50693727], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5072884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48753485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.508893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49817938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5158737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5052768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5175666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51737434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51780534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5184491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5143954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51109093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5018538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5115665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.530891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50867605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48470932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51171356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5092347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53140694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5029764], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50348735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49942577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48229116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5004085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5015031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5350503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50479853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50542116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48983294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4843736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5092023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5250652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49624848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5131883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50742877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.46316373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50854105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49855393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5061894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5123811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49007976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51308644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50521296], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48863217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5097047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49349737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50234234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5128374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50313866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49875432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49785107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48885566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5036456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51041526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5061625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5049894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51183087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49967945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4901584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5169507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51559746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4966331], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (19,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 9901, 'query_cost': 0.0, 'learning_time': 640.3484861779143})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__19.pkl


ONLINE LEARNING CYCLE 20

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 105 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10091 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00942, iter: 1000/100000
Loss: 0.00940, iter: 2000/100000
Loss: 0.00005, iter: 3000/100000
Loss: 0.00948, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00947, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8466.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16890949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15067045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1675133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15330683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1603347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14987816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16441049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14382671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15564899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15946817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15562066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15909606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15449052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16946152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10688337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.155506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1605322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16963759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1578346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15753978], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.11624491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13891836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.142784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13570704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14137088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16291755], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13178758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13252616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1599535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15792026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15555663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14309207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09176725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1635665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17299387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17255774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16342951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16779162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17156276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1444081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16469043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15571862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15633053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16725264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16683212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15118678], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16874218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15883942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16652374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16170467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.17041788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.13402507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.12904154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15518706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.1156565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16755024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16657475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.12705776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16198213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.14894088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16263662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.11702597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16547936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15482484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15799187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.16377103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.14577352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.15766937], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.10093198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1680526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16234446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13168287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15708657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16336416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16798258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1640116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12386046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14073324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15190393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16824694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16189097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15659627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16045381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15218168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1375602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16522238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15646398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16582347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14780529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16898057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15428093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15661804], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16890085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15167566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16287825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16904053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10634919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16105856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16056673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15391485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16379014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.14895608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1543953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15847062], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12647858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15359353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1650665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13532238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13417982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16546984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.10146219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.13987443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.12988672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16564398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1348137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16698225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.1662521], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15425804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15275681], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15934956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1652741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14681531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16340074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1572507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16314028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15713494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16901803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.152248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17236336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16958795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14747922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16904008], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16535388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16675638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15060921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15605728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16799578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14520262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1613658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16576877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13229069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15302232], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16564684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16389188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16322151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16328456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13307573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16923161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16396993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1614064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16883364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14525856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16774036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.155723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15039341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16873762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15453319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12301888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17105356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14781444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17002615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1696587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16585377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12950394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12883916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1524693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10660857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14956762], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1629073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13094027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15768869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16852319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17003734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14696229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16309655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16478904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15700425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.13258511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14509167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16304885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.17064755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16441229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16774534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1680006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16162057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14649013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15553932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16558221], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15790825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.16043383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15486485], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (20,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10406, 'query_cost': 0.0, 'learning_time': 687.1324251899496})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__20.pkl


ONLINE LEARNING CYCLE 21

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 110 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 10581 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00929, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss: 0.00923, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00005, iter: 9000/100000
Loss: 0.00002, iter: 10000/100000
Loss: 0.00003, iter: 11000/100000
Loss: 0.00001, iter: 12000/100000
Loss did not improve after 5000 itrs, terminating at itr 12590.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52128303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53158957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54076785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53209215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50845504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48984316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52255374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5373296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53469074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5295707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54100245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5031088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5005748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54478014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5354653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53477675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5207575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51325935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.528571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5401255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5318131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50149417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53471935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47510743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5353562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5338426], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5398173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5449771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53778625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5397045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52205384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5383444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5087173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5296057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.545909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5456652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5251067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49410662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46246088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5029775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51297337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5395149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53839236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5374673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5461085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50705546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5346611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47196457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52232236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4788188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.48144668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5280788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.538828], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5419036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5386972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.52364826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5148007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5420037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.51500815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.51782346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54475015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5378908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5441149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5414812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5303421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.53231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.53544354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54082304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5453819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54579675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.53995574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5080106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5283165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5221135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.54035574], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5338143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53782636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.47150418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5180946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5456024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51077324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5463707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4861323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5491969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51901585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5060373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54078674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49455813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5318132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52444905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54010844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52062315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5336604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.542709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5360262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49900427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5396587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53498787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5286098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51573294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52483356], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5407955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5290263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5439498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.54200083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5226685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5428516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5067931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5439476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5361178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5388218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5236137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5295578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5216811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5426067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45288715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5172743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53808576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.42540264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.49342912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5158792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51589835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.53215075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.4990939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.51230466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.5444994], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53756315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5078825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53976595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5459048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5121426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5250722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.50317174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51536435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5292956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5363885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5416168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5213304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5471704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5396358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5214172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51668817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5432137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53754604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52568454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5247869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5167934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5203905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5137602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53526765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5069212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.54353476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53913623], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5393043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54186803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52894336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5365156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5427294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48615026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5067218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52157265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54490274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5376567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5219445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.526654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5355511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50418705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52295786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5148986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51907843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5028574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49692267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54529816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53936857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5270671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5238348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54328287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53237134], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.536383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54236037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5274163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54571503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5395842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5351136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.47862563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5385937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53259814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5394461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52654815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5416859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5151109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53519106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50990045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54264593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5225376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52454287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5409804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53969777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52000797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54511315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50863624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5435484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.53582925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.54538053], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (21,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 10911, 'query_cost': 0.0, 'learning_time': 742.7246645679115})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__21.pkl


ONLINE LEARNING CYCLE 22

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 115 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 11071 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.01904, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00952, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00951, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00951, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9015.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18095571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17003219], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13929778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17575492], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1474757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1594359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1757873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16691554], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17667887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1659876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15133996], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18066184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16872531], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1797558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18056352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16833615], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14293103], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11199726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1846123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18351135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16083097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17601112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13811556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16014132], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.161545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12290114], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09019795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18184303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1745788], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15828851], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17524743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1817629], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16708015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1810041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15994743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17419854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16783056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18097982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12034061], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18324739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1700523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17677565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1849776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09689516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13771267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17990232], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18197411], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15790989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17882591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10298752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1146562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1783439], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.17478198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.16476144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.18168406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.17414667], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.17795378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.14422573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.08840193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.17659627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1402738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.18388224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.18310176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.16923001], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.15937918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1848806], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.16700895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.18191954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1507879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.1717528], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12722507], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.18296425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.15361613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.16217725], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11519186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18473756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16240747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11779765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15159464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17064494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17907046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18386106], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18406373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18379039], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16634133], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13627559], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18044625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18115447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18124676], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13773698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17904751], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1540909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17056894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16031756], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17365979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16463223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1626537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16760558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18236424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1804081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.12198699], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17861441], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17803271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18269064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17317799], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12227779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17931548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.16589002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17562608], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1844011], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.14693111], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.16247946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.14815257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17073745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18161428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.1782693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18053775], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18348078], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17152941], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.14950195], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18318045], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18381123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.18400829], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.12929057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.16762596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.17508468], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14780898], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16827293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16604646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13805287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18457673], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18310148], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17488661], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15020558], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11561979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18547131], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18524137], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16498426], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18113342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1622359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1271552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09580579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18240759], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1816575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1808408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14217645], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17263524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17724338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14460976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15801854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18404692], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17183505], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17680815], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13131663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16986327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14570634], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18123016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17804281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18219607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14568104], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18249494], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.177886], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17733423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14512889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14451627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13192484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16315821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15181419], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16911337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17276202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18096739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18553081], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18417808], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17756583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15879902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18013802], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16163096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18446752], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18295729], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1688974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17366406], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17838424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18055224], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18077263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13237298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14602874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1542836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17310914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18197478], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1622117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17520083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16974664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1779835], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16442393], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1829316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16718018], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17779312], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17274435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18018895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14653252], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15638146], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17350498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16924071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17617606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18123838], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (22,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11416, 'query_cost': 0.0, 'learning_time': 793.7858775269124})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__22.pkl


ONLINE LEARNING CYCLE 23

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 120 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 11561 datapoints
Loss: 0.00001, iter: 0/100000
Loss: 0.00003, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00003, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5011.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.260844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26110926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23571506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26732874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26815403], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20663334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24635032], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26239002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2555013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2678287], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26597595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2673255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20691206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26414487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26022607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.262556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2667391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2517899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26354036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23773396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22671433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24518071], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2578562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2257088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22465944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2507899], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26258087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26341584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26447576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23629889], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24419135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25934124], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.227804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2630371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25740263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24806882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25402483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25475892], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25667876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2316609], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26580894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24141473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24685375], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.252805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24540515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26250196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26673672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25575778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22081204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2418277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25841156], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21061444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.15389119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2157302], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26809344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26574427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25899363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24111599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23841698], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2480243], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.242844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2564237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.229288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.254162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24716657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.19171198], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2619479], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2565577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.20869172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22178455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26381022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24449858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.26401547], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2616323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25250697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26177412], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25345358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20225969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2541117], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26775265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26707262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2631166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26131493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19708899], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2645685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24844271], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19666976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26806173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26055345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26817054], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25039056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23023966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21976958], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23253895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23202167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2378605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2304909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2664322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2496463], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26355326], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26023415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25691605], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26750973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24940765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25591418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25373125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2575677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24190268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2679842], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24876739], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22187537], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25957477], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26403713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26760057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25518352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25244862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25981545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26735848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.251602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26723143], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.244669], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22327462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26376185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25772476], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26494956], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21366324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26579863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2604077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.267343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25596064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2520868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25729015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26278618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25907415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2556075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2589052], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2475861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2564962], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2626979], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23199077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2659801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25202024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26304713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26320618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20986407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25993675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25205943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19392778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26566735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23920871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2627654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26480785], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26747712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24115255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26798552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26646718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25876153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26660657], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26157704], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26518926], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23819041], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.19994783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2677603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26554087], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22446042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2658286], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22641069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26116863], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.265632], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26629844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25675407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2517003], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22227316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25638774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2560951], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26560107], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.267432], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26276097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2655989], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24169436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23390202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26613402], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25953466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26337254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2520931], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.1996571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26455316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26427212], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2505321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24307998], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24409266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17012732], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25242305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26668873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24874273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25531098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23982918], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25412548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26492208], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.238457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17096749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26826832], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22881353], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (23,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 11921, 'query_cost': 0.0, 'learning_time': 839.5024639809271})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__23.pkl


ONLINE LEARNING CYCLE 24

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 125 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 12051 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00004, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5006.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26160738], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24230082], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25945467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24673693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24544482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24549486], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22371471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2595514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25359792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25248966], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25269225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2105364], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25307745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2607388], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25522867], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25690675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25052506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25730538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2542305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22218484], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23947251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25738046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2585973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2499447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.256128], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24476899], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19735791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22539273], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26151797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2501582], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25613445], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25423595], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2182722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22493963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24843526], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25608316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2330341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24214557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26024348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24681836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25818515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2612006], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25882268], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25278482], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22293521], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25274202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2113907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17549504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23960769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20876236], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26131633], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2523579], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21695493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24501285], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25302675], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25404042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25434777], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23891334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25591165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.261792], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25234747], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25212815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2488014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24140643], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21421956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24981566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22963874], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2518987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2563004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2495387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23541135], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25242344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2586115], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24039075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23016728], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22997075], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24569017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22137591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24683963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2416862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24693497], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23360871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22740395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22983621], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26099378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25418884], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24347538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2500457], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2618591], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22230057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2547099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2617369], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24175088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25447443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20961109], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24604085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25748706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21052913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25564864], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25846863], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23976466], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25492057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25418305], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24496178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24983653], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26222235], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20190527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2499914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25181338], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26099303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2607598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23080726], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25012785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22259085], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24685885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.26162425], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25960854], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23957345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24908572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2560693], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23685485], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24206816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2564982], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22012228], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23831806], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25652322], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25744975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25479516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25959015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24567272], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2556069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21444929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22057968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26127407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21590771], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24287628], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25446025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21036342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22126707], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23653755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25071186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22955625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24934888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20568654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25986856], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18297954], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25862503], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2545102], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2340415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26134652], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24920067], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20142958], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26161638], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25956407], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24640056], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23879914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25937894], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24124047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23986483], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20285897], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18481968], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16472527], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2527749], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24919878], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17792092], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24356413], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16470774], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22337729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26033178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26017588], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24618758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25633815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25174618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24122293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25241816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22372602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2408765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2279418], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24894515], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23055151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.224211], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25913465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2601833], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23899764], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21885115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20160487], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24039097], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25034374], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24252795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24544303], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25676534], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25965664], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2619051], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25218844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24858572], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25949365], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26189524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24805409], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22601125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2574795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22065447], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2620902], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23779732], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (24,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12426, 'query_cost': 0.0, 'learning_time': 887.2372430438991})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__24.pkl


ONLINE LEARNING CYCLE 25

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 130 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 12541 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00004, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5010.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24543442], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25104654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25160348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23484944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25224602], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25331065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23960105], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23988399], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24178743], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20638467], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24766876], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23497772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24249345], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25100994], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25290373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23418568], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22527772], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24445125], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25522342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25180823], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2486852], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24707113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23314004], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.19658509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25506654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25240377], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20100129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24548744], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23633371], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24627046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24232247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24463318], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25168094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22563002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2514363], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2466769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21757165], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21684785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2350733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2158404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2366893], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23156594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2558119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25384328], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21020174], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21048567], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25091353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2550773], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2368697], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20947915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22992183], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22145548], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20328458], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25027603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24966176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24472909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24379493], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25356057], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24933352], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25260073], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22133961], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25502598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21116737], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24652173], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21167976], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25463423], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.25313297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.21901122], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2498216], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.2529187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24547909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23643668], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.22757064], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.23031431], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.24208017], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22850882], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24505194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24306326], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2529309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24706912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24573912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25265267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25593844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25180033], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23290801], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20754263], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24335565], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25584394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20718397], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24602155], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24576119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24332626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21116987], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25486606], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21760127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.232626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24657464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24541603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25288206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25508204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20229468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2512229], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24724838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2502266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24071465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2504449], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2513519], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25377443], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20372978], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.20928955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.19418703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2484562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25255805], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24124555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.23768096], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21442053], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24626938], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.225514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24029179], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25535178], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24231997], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.2521343], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21591009], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25048205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.24678627], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.25516686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.254209], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25063127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2339309], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23768933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24695547], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2555928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24716344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2421024], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20985757], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21248066], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24561858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22792076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2539226], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25540233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25017202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25281468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25340912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.21652883], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24173452], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23718327], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18355872], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23106197], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22663929], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23860298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.25022462], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23631983], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24226938], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15370245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25600296], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20435186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23431194], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2265795], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25434607], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24637796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2537637], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25298646], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23755391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21945599], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2345455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24673136], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23789814], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24595618], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20470464], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25309002], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25201622], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24560237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21711074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20221297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24579088], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23988985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24010323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21336786], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23657481], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2011283], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24002169], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24014935], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2468909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24844988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24554642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2424473], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2495819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22268377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25307187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22930214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21663594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.22957644], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21662116], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20797549], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23759586], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24996753], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20932977], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24123988], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.20032123], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23668785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25122377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.25407955], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.23545471], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (25,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 12931, 'query_cost': 0.0, 'learning_time': 936.0127651768853})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__25.pkl


ONLINE LEARNING CYCLE 26

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 135 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 13031 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5033.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28256792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27363998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2779914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.20995195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2893346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29442272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2703373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29722744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2874108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28150544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29905224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27789578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24849714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29378876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2970213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29830673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2904208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2783501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2903069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.16138722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29662374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27238697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28146234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29750848], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29649484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.293612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2983197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28501883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28886926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29830846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26077938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2977844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2501058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28096968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27033418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29583845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28240657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29206365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27515414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27476352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2660827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29632697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29585573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24852161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29483473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26909253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2706515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2899606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29738137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28323686], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2917752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.21231143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29917878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29688397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29582548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.25570536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28811353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.2756117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29162613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28732982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28262725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.27012485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.27812117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.25606373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29603487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.22157127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28530854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.21878181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28253266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.277703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.29259232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.28048414], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.284534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28777134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27947438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20693663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2698819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29030013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29714438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23661663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29069316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2928155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27835053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28867325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29642698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28930554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2745254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29867494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28568807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22537479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2333469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28355157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2691396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28377616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29055935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29839823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29160848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24516653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2841372], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2671749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25005296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29505473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27767965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27766496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2433138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29726842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27181178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29831743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27720228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.28206518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27875644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.28893536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2884033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25615808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.24872075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29662555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.24115369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.26912153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.29317218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.25019926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2757306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2871579], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.27028564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.28870165], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.24986726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27765882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.26144126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2260459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23255067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22135569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2952461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28522116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29171515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27742794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29775053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27638474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28696334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25133198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28756815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2983847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28655234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29330432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28594002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29209626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2821315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2966882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29889023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2523415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28942478], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28107822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27434555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29238513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29096383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19669217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26803377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2458479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2895803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29879066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2737494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2758795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29592803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2959332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.270385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27825707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28565308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28507027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.23356107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29743633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25411716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2980852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28251755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24802335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2958045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24432743], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.26933244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2634013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29466224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27158767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28687704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.273562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28763068], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29531726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.25665632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2884769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29405227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2980724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2693767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29126102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29737508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24850644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29328814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28392878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.22965251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29600865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.29616365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27698436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.260396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27278987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.27413395], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (26,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13436, 'query_cost': 0.0, 'learning_time': 986.9711869838648})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__26.pkl


ONLINE LEARNING CYCLE 27

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 140 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 13521 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.01918, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00005, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00002, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss did not improve after 5000 itrs, terminating at itr 8013.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (27,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 13941, 'query_cost': 0.0, 'learning_time': 1043.8243425848195})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__27.pkl


ONLINE LEARNING CYCLE 28

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 145 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 13980 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00003, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5005.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (28,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14415, 'query_cost': 0.0, 'learning_time': 1097.7467138628126})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__28.pkl


ONLINE LEARNING CYCLE 29

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 150 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 14470 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00003, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5028.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (29,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 14920, 'query_cost': 0.0, 'learning_time': 1152.7708057548152})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__29.pkl


ONLINE LEARNING CYCLE 30

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 155 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 14940 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00977, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5015.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (30,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15405, 'query_cost': 0.0, 'learning_time': 1209.5103602987947})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__30.pkl


ONLINE LEARNING CYCLE 31

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 160 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 15363 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5010.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (31,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 15843, 'query_cost': 0.0, 'learning_time': 1267.4220162188285})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__31.pkl


ONLINE LEARNING CYCLE 32

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 165 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 15853 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00982, iter: 4000/100000
Loss: 0.00002, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5008.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (32,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 16348, 'query_cost': 0.0, 'learning_time': 1327.495598732843})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__32.pkl


ONLINE LEARNING CYCLE 33

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Termination triggered.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 170 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 16296 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00984, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00986, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5003.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (33,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 16806, 'query_cost': 0.0, 'learning_time': 1388.5127133478527})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__33.pkl


ONLINE LEARNING CYCLE 34

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 175 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 16786 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5009.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9604846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99108964], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9653837], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98124516], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.998986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9548433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9947948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9793859], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98757154], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98697454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.992672], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9961182], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9896298], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9972022], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9978952], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99624366], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9808667], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99359584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.98046225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9864564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9912063], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.983296], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.966724], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9308042], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9326942], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97199017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.997909], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9886153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99564594], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97804797], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99835956], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99963796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99967545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9847014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97555804], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97688377], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97780687], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99645257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9788573], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9518348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97193253], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9538337], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9678206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97401214], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99348354], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98899055], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98987323], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97683877], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9913741], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9905077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9842901], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98313963], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.94448036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98488927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9440953], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99921995], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9847437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.94130427], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9881825], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99691266], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99776167], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.97855276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.99952745], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9816031], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9651172], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.9917879], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.98401016], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.94205636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99668896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.979147], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96944684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97281986], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99812424], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9875245], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.96950036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9773755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98641557], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99823785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99808276], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9785965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9987508], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9911545], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97685677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95775735], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.95952356], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99105674], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99681187], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.984047], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99375844], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97163177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98913234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9884377], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99367344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.97991353], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99833834], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9889803], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9665171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9997636], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99954706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9991469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98417944], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99819267], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9549973], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.98404694], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9838597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.99129933], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9981134], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9807168], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.9932178], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9803202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97695225], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9964925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.979258], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.984344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96060234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9906512], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.97183454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.93501043], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9743151], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9906099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98401046], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99614686], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9946358], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.972192], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9522113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9775255], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9794404], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98331815], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9690288], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9955172], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99384177], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9957217], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9982816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9895112], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9622141], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9924593], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9985201], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9986589], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9773939], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9791446], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9510404], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97794396], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9939471], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9660626], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9811094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99680895], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9891324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.97497904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.93951184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99192685], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99775016], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9601946], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9791847], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.943321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9835758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9994985], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99183065], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9861193], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99107766], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9853871], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.99625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9861948], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9973553], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.93932927], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.96267456], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.9851829], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99742514], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9601789], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9337015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.92742455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99731755], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99695796], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98071635], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.9958974], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.991597], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.995535], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.98724914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.99774265], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (34,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 17311, 'query_cost': 0.0, 'learning_time': 1451.7042782238568})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__34.pkl


ONLINE LEARNING CYCLE 35

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 180 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 17276 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00987, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5007.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (35,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 17816, 'query_cost': 0.0, 'learning_time': 1515.8392077909084})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__35.pkl


ONLINE LEARNING CYCLE 36

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 185 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 17766 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5003.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (36,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 18321, 'query_cost': 0.0, 'learning_time': 1581.6078738558572})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__36.pkl


ONLINE LEARNING CYCLE 37

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 190 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 18256 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00985, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5003.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (37,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 18826, 'query_cost': 0.0, 'learning_time': 1649.0470941818203})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__37.pkl


ONLINE LEARNING CYCLE 38

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 195 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 18746 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00003, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00984, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (38,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 19331, 'query_cost': 0.0, 'learning_time': 1718.0956390718347})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__38.pkl


ONLINE LEARNING CYCLE 39

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 200 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 19236 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (39,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 19836, 'query_cost': 0.0, 'learning_time': 1788.469017515832})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__39.pkl


ONLINE LEARNING CYCLE 40

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 205 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 19726 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5003.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (40,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 20341, 'query_cost': 0.0, 'learning_time': 1860.5648331028642})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__40.pkl


ONLINE LEARNING CYCLE 41

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 210 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 20216 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00980, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00986, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (41,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 20846, 'query_cost': 0.0, 'learning_time': 1934.785172964912})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__41.pkl


ONLINE LEARNING CYCLE 42

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 215 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 20706 datapoints
Loss: 0.00989, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00984, iter: 4000/100000
Loss: 0.00986, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5017.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (42,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 21351, 'query_cost': 0.0, 'learning_time': 2010.6439569749054})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__42.pkl


ONLINE LEARNING CYCLE 43

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 220 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 21196 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00003, iter: 6000/100000
Loss: 0.00002, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss: 0.00002, iter: 10000/100000
Loss: 0.00001, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11327.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37855747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03594933], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7389702], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.19703008], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.3840156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3627251], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.11143078], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32738447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04460043], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47125039], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.12835559], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.45742193], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23727156], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.13112548], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08030879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19416821], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05827608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46934694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25221378], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.14856677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.35638517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.4186443], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.04544742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4094646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40480974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.638848], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48193836], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01669437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14102335], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08643669], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.05182791], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07813445], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.280708], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.12780006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.61357117], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.45176882], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.07605139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.00357856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08811784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.28694645], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.57744336], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07280391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5003334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.39377943], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09638021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13290408], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.52217436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.33853856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6078861], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.00740271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.85823274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.22910209], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05041749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05365523], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15942425], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20307815], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.02563631], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.42343584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.81565017], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15782437], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.74941343], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11993732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20448957], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.15389436], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30736405], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10624288], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34222475], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.42455244], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12601806], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.45143023], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09265593], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (43,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 21856, 'query_cost': 0.0, 'learning_time': 2098.8696652888902})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__43.pkl


ONLINE LEARNING CYCLE 44

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 225 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 21686 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.01987, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00995, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8619888], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21060418], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17402719], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46278644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08779291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.43098074], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.14258729], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2348395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09790779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.31473488], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18440226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20809226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38304025], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08003197], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.5546115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.11660325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.38033816], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.49026343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.06268702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.31996828], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.76902086], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.41103145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.4661016], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.41210455], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09830769], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.44270563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.564504], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03398823], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20461415], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23676915], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17153323], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21926862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.26749024], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0029444], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.48606342], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23768038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19770114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.25711957], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66552126], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2976794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.2685666], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15142575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7175427], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32063463], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16487847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4437226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86092156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.19435035], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03749006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7451603], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05923099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16451173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0688758], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15675469], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4701896], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.30094674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08730436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8336699], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34200022], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4674292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5242376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.14271209], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4500265], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18811132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29645306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3309637], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29199436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6865281], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.143322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32363582], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2940025], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07143638], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.15666786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.42001575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24228993], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.41574728], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10125344], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.17447697], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (44,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 22361, 'query_cost': 0.0, 'learning_time': 2178.0613617838826})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__44.pkl


ONLINE LEARNING CYCLE 45

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 230 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 22176 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00001, iter: 8000/100000
Loss: 0.00001, iter: 9000/100000
Loss: 0.01003, iter: 10000/100000
Loss: 0.00000, iter: 11000/100000
Loss did not improve after 5000 itrs, terminating at itr 11008.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.33153108], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.0057811], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.50279146], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00315012], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11702006], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.44175848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.56730944], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01109563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01879441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34527257], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.47480518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3336131], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.04608279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0131604], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.577503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.07354508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5447009], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3372039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12517324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.01204484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.05699235], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.34168935], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03713831], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11302776], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13996677], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3482695], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03213378], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07719914], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29720774], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46693346], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.71827734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24389616], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34099433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11456339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19955073], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.08753509], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.16561207], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.66747254], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.48446792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7812625], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.46630558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.41507927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.49747208], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.2106507], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.75738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.20452885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.31294584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.24999546], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.08766052], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16531858], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.00717317], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4641166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4511184], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3121642], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02984497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34147957], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09770106], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37265438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.37886986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04307156], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18220983], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.02002975], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03557385], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32567084], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.42268682], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29134277], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17262256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07312387], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05761991], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14475496], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.337804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14251496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.80754924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7901245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07147221], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.423852], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.09877119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.13382143], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.4317325], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.2846294], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21581408], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.41326383], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (45,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 22866, 'query_cost': 0.0, 'learning_time': 2268.5195568508934})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__45.pkl


ONLINE LEARNING CYCLE 46

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 235 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 22666 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9716.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5586428], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14708868], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24455562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7838576], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13228332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0039241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08543637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6932467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.58183795], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.25255027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7452993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2278512], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01790284], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20850538], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21628724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04050101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03415729], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3548655], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19168435], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.0208683], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35634303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5393119], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.29641846], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.33683828], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2327416], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.20157959], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.09629854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09129465], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02324841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.04216562], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35768408], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.09982541], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.20437959], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.1390362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.6559297], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.37990013], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.22957642], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.32486644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.7503251], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.30985042], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6616849], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2815096], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3402514], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.104851], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37346318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5892218], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.28550142], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.25401333], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.04754725], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35133177], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18489152], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.19452475], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20707357], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.6723537], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09159937], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.16278028], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.01797262], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03622264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16582769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.34906468], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0862783], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.28640905], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08651966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20728269], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.51087123], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5484867], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.21981826], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4452134], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.11184801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.23935103], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.7572535], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06213614], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06746206], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.38419923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4425755], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31996247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.1500445], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13332964], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (46,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 23371, 'query_cost': 0.0, 'learning_time': 2358.2088189588976})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__46.pkl


ONLINE LEARNING CYCLE 47

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 240 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 23156 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00998, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00999, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9681.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1990913], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39706025], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04965011], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.7912503], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.320682], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.38636062], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.77753115], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13160385], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4103048], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06091101], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1164574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22604625], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4211751], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17458522], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.12792633], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.43559858], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.5270633], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.25932264], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.6980753], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.37892386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8044429], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4215857], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4032873], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27469453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4888358], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.70048237], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.0209321], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11384319], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.30580965], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13466303], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.859609], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.58831716], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.01403808], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.36313778], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.22462505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.20853831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.35153988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.46671867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.50801986], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.23947746], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27889454], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19538808], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4433099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.6098574], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.68707395], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4067871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.51404136], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25786328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6276794], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.694332], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.21433797], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.13146369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7459017], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4833584], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.35731134], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.05371786], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.05724647], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.0667359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.1869653], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12595247], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06528821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.73205227], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35101083], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16065545], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13231894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06127653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.42010733], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38265973], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (47,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 23876, 'query_cost': 0.0, 'learning_time': 2449.0228301708703})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__47.pkl


ONLINE LEARNING CYCLE 48

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 245 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 23646 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5552.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.15103075], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.12888312], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.04352643], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1544761], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3005742], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19150864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.03756645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3970091], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15431246], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02291446], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5857223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.34728724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21571077], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.15220577], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06667587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4675325], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.0026629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.05401259], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.06895417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.309037], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10562594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.65581864], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.00194969], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.02729785], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.09961277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.22322129], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.13112585], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.02038249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.32522157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.07092596], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.17098463], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([0.16158308], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.00241154], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17708041], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.133915], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.22559586], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16438518], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14323358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00225995], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.08176659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07445448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.15542002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46776086], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03731687], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.63795537], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10103887], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.08239391], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.18110089], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.2758524], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.03525528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.62530804], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.58389646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.6322653], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07510129], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11621553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5446654], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00866622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.06916511], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4606786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03368099], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.20433113], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1616172], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17851359], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05134314], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.64383763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.12820923], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.02401306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11997947], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10774017], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14708984], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.37751335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.09247518], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.11965846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4766444], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.45378944], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.14980736], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06757718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3538834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.05617896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.32644603], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.14461376], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04058371], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.18492703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.34756932], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.05738036], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.16299127], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13973713], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02991753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.04338831], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (48,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 24381, 'query_cost': 0.0, 'learning_time': 2535.2895783098647})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__48.pkl


ONLINE LEARNING CYCLE 49

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 250 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 24136 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.01051, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5013.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.722086], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4353583], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.21757205], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.16028671], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5739247], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.35128537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.46652517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.48616362], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3029762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1292764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.60604334], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07845695], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23278378], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03987177], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7379601], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5148069], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13526805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06391722], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.24638754], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.0437912], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24712256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2131166], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10062173], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell5:cell], params=array([-0.03708603], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.29063243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.05545064], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.12838559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([-0.6630522], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.02738943], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.68963194], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.3931223], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1261097], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.32743153], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.13036613], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3461922], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28619233], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.23973769], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.14939204], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24530049], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.29129153], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.03752687], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.39758286], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.05406459], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.66196746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.43002465], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4439731], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.15624928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.16280098], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.51199484], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17128439], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11527872], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.30407536], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.26628023], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.2781556], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1110523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3941573], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.06180854], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19386092], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.21802309], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03653023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06722604], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09151336], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1143316], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23796421], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.07602007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1912452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08865152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1619202], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.18273623], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22703834], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01348728], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08133723], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13161679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.01185855], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.17847838], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.15797123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.17783736], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (49,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 24886, 'query_cost': 0.0, 'learning_time': 2622.1391718688537})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__49.pkl


ONLINE LEARNING CYCLE 50

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 255 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 24626 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00002, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.02115, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5013.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04562934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.05623157], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13524598], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.66354936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.44207874], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.98666507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.19710885], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.13235316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.57076234], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.23286745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.23604712], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6040338], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10312116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.4034187], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.19782417], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.87878865], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.088057], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.59301513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1012444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5960386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.32152483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.07670276], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7582506], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.82344455], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.1470394], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.43830922], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9303779], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23473223], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13744183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7267467], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([-0.21205011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell5:cell], params=array([0.5520164], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.6523405], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.294492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.6480076], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.60321], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.2556227], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([-0.8565458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell4:cell], params=array([0.59124666], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6207098], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8619845], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3552972], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.43539533], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.53783584], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09173698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24530552], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7222477], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.09958465], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3562189], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.3369499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.44502798], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2653334], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.26416734], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.00356663], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.10106562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.1672578], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.8005705], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.08388056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40089348], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.27880144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5550081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.58627284], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5022208], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.2680113], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.505777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.03387688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.3469163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14886013], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.3935194], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.68034536], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.10405162], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.93518746], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.2056768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.6746256], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.3700076], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.08461589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.35706997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.29582956], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1924847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.23738159], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.88270223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11679506], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.74354565], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.33213404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.69950485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.4578862], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.41959816], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7255341], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.20600384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.10050616], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7047555], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.24427344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17457382], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39549014], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (50,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 25391, 'query_cost': 0.0, 'learning_time': 2709.874489571899})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__50.pkl


ONLINE LEARNING CYCLE 51

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 260 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 25116 datapoints
Loss: 0.00002, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5021.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.02301551], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.79985434], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.35285094], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.21931899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.78339344], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.083925], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9168819], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.20893185], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.95910907], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7921789], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.22064736], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.40570563], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.16849282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.18931913], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5977888], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.17376673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.51252514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5480415], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.57232094], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.61504924], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.834196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13673714], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.7682834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.11522659], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([0.6116174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([0.09632861], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4975392], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9874697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2032727], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.38935715], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.13121116], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.24449703], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05808847], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.22666049], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45154795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.50969], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.4522339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.20244144], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.87836], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.9982303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.5334718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.11718091], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.6081067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.53606176], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.3730461], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5282859], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.07378709], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.63005495], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.87691116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.21733984], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.81851566], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.06493889], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.75762564], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.21047702], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([0.5471431], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.04863014], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.54901314], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.0667219], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1345791], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.61988115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.7411167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.34078592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.00848155], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.18853498], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.5994654], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.39592075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4865912], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.5893032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.14618437], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.32590675], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.8483653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.18444124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.60893327], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.01517023], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.54911685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.37477672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.4695169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.23546997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.61478376], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.43531644], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.1784171], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.7760632], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.05450281], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.2756729], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.49409488], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.41044816], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.72503835], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.24878438], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.08552694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.5146015], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6172472], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4184696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.11760186], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (51,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 25896, 'query_cost': 0.0, 'learning_time': 2800.250961982878})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__51.pkl


ONLINE LEARNING CYCLE 52

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 265 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 25606 datapoints
Loss: 0.00996, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00990, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss did not improve after 5000 itrs, terminating at itr 7035.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99190116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96755564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99375695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.987396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9997187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99741626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99783546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9990338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9980631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9633489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99736005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9637392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9820558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98366386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9964827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94523823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9893545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9865962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.963152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99865067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96662104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.897433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9851538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96505564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9296434], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9874786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9580285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99181956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9437314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98544157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9998645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9669937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99242437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9857115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95226645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9802445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99698675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99852216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97542393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99886525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9462508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859141], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98824555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95268667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98683053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97585773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9496966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9660555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99737436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97278804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8832534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9791334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9835187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9565639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97699744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.955568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9827915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9367613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99646974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9809245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994486], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93830323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99606615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9725223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96016353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99344736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99530214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9661743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97504735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99147344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98990726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99970466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98105407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99361324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.963876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97485656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90907806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95409876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9850451], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9982394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9738633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9546497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9937635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94951147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9928507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99624115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99087197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9795996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98532677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9910321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9835659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9870266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9449704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97899455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9758011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99769723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9936366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.8883702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9563549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9763424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9732895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9864812], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98356414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99288666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99607944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99352854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99606013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9577935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98421943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97419024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98449254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99965066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9885972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97084177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9930528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96124655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9834627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9633348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818084], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9594141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9853991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94326556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96758056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96863556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9859502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99063665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99795145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9901292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9966953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9912704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9818218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.984801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9963803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97054803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99775076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9787613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95943683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98639995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97602797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9999214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9970763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.987845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99164945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9684242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99604315], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99800336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.976378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9578862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99347514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99217933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9703153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99295735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8383234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99567026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96522826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99893385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99264085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98693967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99174756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.973416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99460804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97873294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98543406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99338645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99845946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97960645], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9737539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.8752377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99044055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95493317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99090624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98547184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99769384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9628752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99523604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9870885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9794167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98568004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99901736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98786694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9802679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97124404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.958714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9923658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9485039], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99099314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96304435], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98945665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98204243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97875375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98778075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9633446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99555314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9905817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99047047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99333376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9988384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99523306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9994629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9904595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94642097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98372394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93359554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99256593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97371626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9791536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9965436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9970506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99992085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9956633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98825556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9832133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98952836], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (52,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 26401, 'query_cost': 0.0, 'learning_time': 2894.8837662328733})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__52.pkl


ONLINE LEARNING CYCLE 53

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 270 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 26096 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00998, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9689.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.29623476], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.76537657], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.31240305], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5364666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.4445293], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.321263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2771765], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.4063349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.5762186], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7393837], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.30288145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.2764597], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.27168718], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.09750657], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.1390569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1909373], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.07155607], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.30321714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.1744595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.28693268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.3624418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2010426], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.50629807], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell3:cell], params=array([-0.28830776], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell4:cell], params=array([0.08331134], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.48713273], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell2:cell], params=array([-0.21211816], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.45168176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.19206394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.35495818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2549418], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.7025077], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.09855366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.21705668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.25351575], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.03719588], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2746706], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.50016624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.2693808], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.6712578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.545574], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.64820844], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.3103139], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.21031609], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.06862928], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.656571], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.11672783], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.17945574], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.13487905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.27641618], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.10973739], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.00312333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.46863112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.14688566], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.28836936], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.40842196], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.61294717], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([0.22312224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.16263786], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.36561474], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([-0.43419433], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell0:cell], params=array([0.06446485], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.02767142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.10684078], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.576174], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.3430311], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.88384753], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.09371787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.03831689], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6074911], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.5281182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.52977324], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.58987904], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([0.24005023], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.6687945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.49880058], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.60348684], dtype=float32))test
_Option(name='MoveKey', objects=[robby:robot, cell1:cell], params=array([-0.5008589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([0.17822662], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.08509284], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.35220194], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell1:cell], params=array([], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (53,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 26906, 'query_cost': 0.0, 'learning_time': 2995.832107668917})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__53.pkl


ONLINE LEARNING CYCLE 54

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 275 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 26586 datapoints
Loss: 0.01000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00001, iter: 6000/100000
Loss: 0.00000, iter: 7000/100000
Loss: 0.00000, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9547.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9740828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9722953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99448055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99673086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9805934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95130146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99263245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9961026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9736608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98843724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9827007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99266815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9841064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9653776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9877971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9667598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98451185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96696246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9741754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9913974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99923444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97916394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98547244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9988969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94363153], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9720546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9358618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98754597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97434014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9818592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93164593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96892285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98627216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9792844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9945711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99560875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98749155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99333584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97239345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98592067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99681395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99358547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90914017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9210026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9610387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98838294], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97549933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9699043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98713213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99995744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9824196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98985755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99185306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9849247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9720504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9702778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9747216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9707736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89972556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99818546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95326185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99760354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9517489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95696074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9690874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98459464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99487823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9713262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98829997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9713314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852544], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96192545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95437205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97779197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9579478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9713036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9095954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96196926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99893737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96521723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98150456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97541195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97365326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9240379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9788371], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9739909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9918677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9907464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99627703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.971291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9899521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98606426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99699825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97813785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9672091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96291524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9844614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9712721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9582658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9872746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9855763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9992625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9949621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99725765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99005574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.941469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.987953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9690814], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97989905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99505377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9558177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96155244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.88368803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9849947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9798858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9955384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9780012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9291891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99167454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99893373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9635608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98999316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98947567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9816367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99993026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99387413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96631706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99448264], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99254745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9969841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99444926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9981092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9632337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9947812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9974917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9940202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9645358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98494214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97368926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9844321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9423831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9943581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9994313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9820458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99639726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99490976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99616694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9324094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95982563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9807235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98493284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.999408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99715334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.966915], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97860396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98169136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9820619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99719614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9777934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9800946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96636546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98431087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9817114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98680764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9542694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98188937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99449575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97058576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96112853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9721998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99464667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9737337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9755787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97189605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94352955], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9353098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97955567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9893184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98732954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99369216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97072816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95399034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99464995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99744624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9711048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99330544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9761605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9948235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98797446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9657049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99363416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9934053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96915984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9811413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.87101537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95660424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890391], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99931526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9871731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98543155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99575555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99565667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99411863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9895428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9956891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9820395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99073696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9837141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9933455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99708813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99461883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99466383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.960032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98520774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.921482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9865168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99076855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98195624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95071363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95051575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95365894], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (54,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 27411, 'query_cost': 0.0, 'learning_time': 3097.468500140938})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__54.pkl


ONLINE LEARNING CYCLE 55

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 280 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 27076 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9792132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9930985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98989373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99534655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93062556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9484307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9965427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99730295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98927593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94884837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95823944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99914694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9988271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9319596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9952865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97942185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99239147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9902741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9932568], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9742714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9811274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9671597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9701856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9786307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97906125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855299], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99006104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9686432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99297374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98885304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98707753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99181765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99447775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96940154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997852], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99112594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99501884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9454486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98920256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9386054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965898], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9704067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9365919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9918912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9646654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9824467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983043], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99196243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9870113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98142517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99234486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99139094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99415016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9930944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97002745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96804583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93750924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99830246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97387195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99797946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9859114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99064577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99851197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99463046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9687409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97621423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98256993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9762464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873019], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9858538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98522174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915439], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9507347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99848366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9678933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9606115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99353325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99912995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98948985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97710425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847092], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94094723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9912771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97788715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9804642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99623394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98402816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9787802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99125814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9393826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97257555], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.996891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9970432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9588593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.95143545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9675429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99579614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99183017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9266599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9665515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9531929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97071475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98028827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.92653406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98502874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9377675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97959894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9524553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9943247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9751271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96957064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9913311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9900683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9939008], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97536117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97990245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96700615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94253844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9577849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.981581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9362956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99775213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9870673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9774854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99723804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92648023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9456429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756941], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98840326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99610853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98142546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97667664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.952172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97437847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97245026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99839145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98929214], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9709486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9013496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9396086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9655561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9974053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9934751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9881065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.93447834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9798911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9980253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9959574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99511224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9936119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99653226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9612183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.977334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98948985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98416984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98468095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98880666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9884474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97913706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9919986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99777746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98351675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98021466], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97679687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99167114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9704184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9611845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9770445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99545205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9482733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96342003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99523926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.952515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994271], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9316954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98493135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96975774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9847651], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9881654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9641493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97251326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98727196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9831864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93176013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9751031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98655343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9750655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.999642], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9964506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9570983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9373035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98927337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9844082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9733257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.988464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9862788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9907731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99352336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9392243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97697616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97521174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9759107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9952122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9406069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9910655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99806803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96544343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97218233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98879313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9463737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99978256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96767056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99545133], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9725778], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98617125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99692357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.993168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9786511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99526685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99628645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9648508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9963392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99270356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98953515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96403086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98451895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9927663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9815147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99987936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99690527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9959033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99897647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97009176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.991037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99326706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9833152], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (55,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 27916, 'query_cost': 0.0, 'learning_time': 3193.205648749892})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__55.pkl


ONLINE LEARNING CYCLE 56

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 285 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 27566 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5048.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9879275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98198694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99999917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99757993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97851974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99201727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9801005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9821594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9968522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98763466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9874091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97676045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9251713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9975024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9901167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9866734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99597174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97102123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9975473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99776906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9851289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9032191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9500116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9959382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99586487], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99540585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98631936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99462485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99808604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97313666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99834037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97521687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9404902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99815285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99287415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9843312], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97045594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99733377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95265794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99166054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94440776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9807282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98648244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9841033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9813005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98540246], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95007145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98645675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99824286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99126387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99635845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964718], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96887785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99823445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99775606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93971205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99375844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99156684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99881625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97086644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9820899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97237945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9821606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9873996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9845605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9733182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99463236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.975911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99769324], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99804395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9471589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98798263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98704207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97009635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9551572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98026884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98808867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98742056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97822434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9904373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9459873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99465126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9377133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91778696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97766507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97564656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99394464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9965313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95652175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9924143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97959614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.930969], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98823017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99703604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99215233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9749216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.944014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9367514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99772173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9407251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9826731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97923064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9716878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9847161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99894774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9519889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98663163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94849795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9948012], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99213284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98577136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.985976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9997185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96987706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96581703], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9740653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.946283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9723603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98771346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95000726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99975944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99714863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96727055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9515912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9790308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9098268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9448942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98171544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96079224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9726018], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96652263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994892], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9389], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9787086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97707427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99295074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99660164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98511964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97227293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9952125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95118964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97661555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99374014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97967947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9892088], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9392669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94873506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9970249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9345386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9884295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9336873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9900436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9770021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95708996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9871372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9765419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9830484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95153266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98382324], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96927184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9769032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99978286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9761388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99645424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97687423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9285447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99751854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93838966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9895421], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99168044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99582577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99743384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99412704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99339175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97372466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99465156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.977915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97800493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9694873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98259896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931501], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.980809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98942494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9935897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9913337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9968723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98484224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9784191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9977286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98732084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97692066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99045354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96281993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9873982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9923035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92563486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99487466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9951782], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9113225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9312554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9374514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98184663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98078567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9958586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97855115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97310615], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96210456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9716997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99056214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97628945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9714595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9881541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97123927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9936109], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9936113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9297013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99018806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98386395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9867528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9943052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9988639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98888683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9418725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98646563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9994009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9969185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9681674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9805869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9971325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9950216], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (56,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 28421, 'query_cost': 0.0, 'learning_time': 3291.5725286699017})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__56.pkl


ONLINE LEARNING CYCLE 57

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 290 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 28056 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.01060, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9977337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95283806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9934722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91294634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9949424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95631546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9902929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96961844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9888002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9928311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95031404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9909991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97456706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9634916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.992487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9926763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94801205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.997923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9715576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99001163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974391], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98034286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9634196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9696101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94395095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99607223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99789757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9457625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9692967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9508218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99830115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98168135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9886696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98565555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98374975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95164937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98358977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97921234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97040284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.917989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97852916], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99819326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98585516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98299176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91562515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99816155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99552023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9525074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98969305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99904495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9789106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99294764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98081577], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9488394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9864172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99190664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99080354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98975056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98496616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9759983], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97664493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9259931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97003263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99217594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97039086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9856673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97444516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9615616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99901146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9560605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99661463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99592054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97940576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9653967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98417205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94903797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9674142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95369935], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9972553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9355457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99677414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9980519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9297239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9020341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98764515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9685142], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9504914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99802184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9941482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9663806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9843367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9944637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9932924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9824216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98809206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9518402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.925111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98084223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9833569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.993915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9913124], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95408267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9865995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9678509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95233804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98795116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99557155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98724145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97029525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94957477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98197687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95397973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9555997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9760033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95358676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9742228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98157126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96718955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92781895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9434938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96776694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999473], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98445475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9518345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9952223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9903997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99066335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99694055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9962063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9899845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9698673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9747173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97618854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9970074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99280465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97728056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9721831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97763693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9611176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9984288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9725621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99356693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9241954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9842965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9726263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99386775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9989538], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99096304], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9834377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98145753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963355], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9806154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9807934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9638172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9753779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98824346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96018845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99492794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99501663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93547595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8971591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9464595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98132795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99258256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98489726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98870647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98893166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9872199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.955728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9489227], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9650231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9923449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99158514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9183126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99407774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98520833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97811043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9990351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9587171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94188017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97594804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9982143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9795879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9776511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9949524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9554938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9863441], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9864483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99382156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99638504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9654933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9759683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9863859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9972071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98081005], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96581477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9900912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9909353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9930348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97510684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97153103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98860383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98940825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9858526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99469274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97630525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99980605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99072593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9982969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9954746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9731643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9600911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99979764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99526334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9772815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99626046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9546373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998138], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99994755], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (57,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 28926, 'query_cost': 0.0, 'learning_time': 3390.825840209902})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__57.pkl


ONLINE LEARNING CYCLE 58

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 295 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 28546 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00002, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5013.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99857527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9963313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9970206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9866643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9099722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97448266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98403454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.89951295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9828001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9696047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9924703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9933046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99282444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99722624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.969471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97807664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99882424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9948107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99638504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9206793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9908163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99380237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98379344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99141043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97186965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96338964], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99381256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99276495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9605919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9401505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94583553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99781597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99262005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98942226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9513429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95347935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96149445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9591623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99826497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98076284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99048287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9697209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99473685], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9945949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9945174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9864287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97266906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9375479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9707077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9999265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.986932], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98468524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.973727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95073026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93022895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9661907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97848576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986709], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99669147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863096], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789291], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9907327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99073493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9574037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9795407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98806787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97038305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98858464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9708378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9880963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99939835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9791834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95232713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98708725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99467516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688727], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91683173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9160333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99520713], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9766505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99773276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96833795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96466017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9621672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9867323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9889437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9921776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98814595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99700975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98409456], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99585086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96307415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9934127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94511485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9896587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9998838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9677624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98176855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98759425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94487053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.990766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9896485], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99678826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99278086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99762523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983769], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99945617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89039403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9860637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98820543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9774874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9714274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99113995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977189], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9658358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96980524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98764247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9768153], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97245264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.935492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9828461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9350596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9947655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9997408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9943358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9801831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9920246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99623954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94217634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9876984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9829246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9830865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99699324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.998327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94736385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9889945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98828804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9844647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9749901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94107854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9830316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9541427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9895487], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9525203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9720584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9744945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9443093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.945515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99594736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9648174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9656233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9705866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9906587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99536306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.971459], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99885726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98316914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96981007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9909888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9864427], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99888027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9860742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99680674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9830826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.969424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99881124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99615395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93237776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9848526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9595342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9774663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97515625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95819455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96628433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97728825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9712525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98504615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99871963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97355455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94146353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93163484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9937132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99745756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.962263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95749396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9993316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9288056], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95926195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9737608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99029416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99340725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99667186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.993165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99743736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9603089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99627364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99952346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9983469], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9604515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9697634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95027214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96803105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9932177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9645792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99780107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9960962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9936483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97971916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.991389], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (58,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 29431, 'query_cost': 0.0, 'learning_time': 3492.1250503598712})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__58.pkl


ONLINE LEARNING CYCLE 59

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 300 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 29036 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.02172, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.02177, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5013.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9968036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98296267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9795606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9821529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9917131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98614234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93893754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9922166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9612629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99982756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99734116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92013544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99616784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9919087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98264635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9747954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98285526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.998896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9957343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99822426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96422535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9631867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9753682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97913533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9827535], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99865985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96393853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9866599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97942525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9796566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9940734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97438556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98680466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99267197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97419703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9877531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9508526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.997524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9828849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99338484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98095524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93906546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97604805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9914384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714166], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96701854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92768383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9726126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9406299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9658375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99431115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9830418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9571445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9245663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97200215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9142997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99050844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9828732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9659859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9713524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9841105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98232776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8727195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9792165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98404086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95363426], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96512127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99252236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99392515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98604715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98604786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99830896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98993766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99409336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9593476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9492648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97018325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9728933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94921863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99441105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9873399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.913532], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9983465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9815553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98965675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96092415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9612128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99266773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9925832], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96382695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9747265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99472016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9629389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.994319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9898664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94964474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98712325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98108035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99657863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9996493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9676807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9923082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9750108], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99377143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.95838296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9925775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.990311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96877724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9823089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9988225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9648049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9948848], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98397183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9414717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98783934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99930173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98482925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9761081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9725739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98170674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9885485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99436057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98222446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9933301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97530717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99712974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99181384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99790657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98467493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99732614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96794945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99893546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920411], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97955674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9717587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98817414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97857094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98621935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9738191], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9932545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9949901], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.985597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98099947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9700883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99137205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98706305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.986406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98638713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97966486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94718593], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99601763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.995217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9542204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9446882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99354696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9995765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.991153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9735544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9889066], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9815033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99550337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9722151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9896806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9796226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9779458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.960945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99655807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99474764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.973933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97626275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9840129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9945079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98262906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9594457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99186975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932699], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99562323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97611976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9934997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9678784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9609903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9767428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9883917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9987767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.970087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9984373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99976796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9983489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93882895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9601129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9854042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9675608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9785061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9581648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9946544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9873631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9360415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9908247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9982906], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99993587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99163777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96241397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9904935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99513155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9682279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95062715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99700737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9934726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98011136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803002], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98225325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97423047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9846214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9830136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9962767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99403775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98914194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9716457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99950165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9905682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9439605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9728675], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (59,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 29936, 'query_cost': 0.0, 'learning_time': 3594.487933198863})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__59.pkl


ONLINE LEARNING CYCLE 60

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 305 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 29526 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.01088, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5012.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9691432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9375453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9871294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96479434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99399674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99418336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98809624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99893975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96987325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9958849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9759777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99209875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9791907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99607724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9246003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9685417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98618174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97333854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97331274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9789014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98885965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97492003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9642895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.956172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.993147], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99618053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96969306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99018383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9296054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.990891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.950926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897208], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9731789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9835955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99176073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9458564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98197585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9948841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98742574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96821684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98119944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.981877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98199695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96318823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95499885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99588776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991476], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99883926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9793276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99362236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98321813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89964753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9255087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9723877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99905205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99266815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99019647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96930707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9840402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9566583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99967074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96278375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9897103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98445123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9797024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935673], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855801], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9938988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96042436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.954243], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96468383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9892878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99416935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9710584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99837035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9844514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97015345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.84447443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98058754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9376668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99329543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9832571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9978316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9677587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9681244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94572026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94997466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99402857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99117345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9762239], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.999368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99400413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9891231], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99005526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9840461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9999756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96935964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9982955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9853571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9866048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9968557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99229914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97821105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99347496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99124396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.998338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99499375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9929622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.965671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99119365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97849846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9981863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9910641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99138844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.95124674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99985874], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98577607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9718585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9813649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99590236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93518484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9289343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95802695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99660724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97876424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99369377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9749695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9684266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98153955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9711233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98115176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95704234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99202764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99922323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9672736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9762179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98088026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9684448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858921], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9953906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9780057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9797004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9966877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9557495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.960073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99573684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.997494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9262591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.983133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9825802], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9989103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94853663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9865094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9793711], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9723994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9538192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9938607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99761367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9740357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9730047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.93260807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99661326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9732605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9736639], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96862954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9806594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96007144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96692044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99548584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9828182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98872554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92939067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9805879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98609537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9732171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9261883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9874051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98168755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97360855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92783827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9801533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9789175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.929502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9962173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996623], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99496686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96266866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98797435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9963493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99354786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98048264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99710596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98065406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9575326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99406135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9980903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9633471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97886884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9919531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9593273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.953047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9584155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9763795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9853387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97930366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9954078], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880243], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98412496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98933935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9983998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94208086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9692904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9733784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9989811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99806106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9776162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9875146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99650484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9905317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97295296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.973874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99710894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9442823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9736407], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98766685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99873793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9684136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99857193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9957525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96808296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99810493], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (60,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 30441, 'query_cost': 0.0, 'learning_time': 3698.7442185988766})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__60.pkl


ONLINE LEARNING CYCLE 61

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 310 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 30016 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.01048, iter: 1000/100000
Loss: 0.01049, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00002, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9779911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9688124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9950246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9769255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9481202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9800707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9583601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9867531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9696876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.89798397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9752499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9904248], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99415815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9921614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9968038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99595875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9340016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9397913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9878704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9370748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9774332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98472416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9984401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9860751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9908943], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.944911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98157537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.977318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9701175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99728155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9867781], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99763316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94270676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9976368], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.956845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99667877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97632724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9463655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9960467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98267365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9576735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98000574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9700348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9962313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9665585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98147994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9520313], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9897279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97383904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99160916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98770463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97811437], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96855766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98367983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99602026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9582511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98604584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9959998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9921629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9676216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9891059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99466926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9800993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97986275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98949814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9858733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.954522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9489055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9458325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99296135], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96123487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.89803946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97473824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98055446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9504005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.975701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95367277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9632643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.88877875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99508566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99913955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99428135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99581844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.983775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95639503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9656658], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98164093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98174214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95197576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93983465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99585617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9908542], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99449503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99902195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94701535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9899891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9961504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9466253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9889479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98061806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9806386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.92055136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9746994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9295987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9979496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9785807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9466851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9339358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9903162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.964739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9631027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98156023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9092981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.92688066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98049223], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9919265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99940735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99907124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98577523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99952674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98296684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96795785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980389], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9962308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9798595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788687], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99697983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96465135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99199826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98595667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91826135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9953058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9912256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97274804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98664486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9816737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9870921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97428805], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99811417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9971858], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.948057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9993467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.996588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9905907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9906928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99445826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9885086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9917836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9802944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9822392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.93768233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9594623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9915883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9946605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98323107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94666076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9707383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99737775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98334414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99949044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99151415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9879796], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98626477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96141434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98292625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97113115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98609614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993869], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98767656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.989021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94005096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89267784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9550173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98952127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99787927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97744226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9336974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9581251], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91873944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98595744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96418375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99023503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916862], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99339765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98111844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998693], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99810994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9362281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.998206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91008365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9975661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98177975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99759567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98022777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9907752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9788237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93357366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.971367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95904493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.997717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9641654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97626275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9932809], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94933826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9913909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9982983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9784122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99064976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9938854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9586531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97118926], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9852584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99666905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976292], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97576714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99940753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9889204], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99098784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9933082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9999064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9922435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94982326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9474457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99333006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98378694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98204094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95643145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96981764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98695225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9860773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99470633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912559], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9718087], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99182314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9676615], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (61,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 30946, 'query_cost': 0.0, 'learning_time': 3805.056004034879})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__61.pkl


ONLINE LEARNING CYCLE 62

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 315 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 30506 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9246779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91038936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99636006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95018315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99977493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92890453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97576195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97888243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98400474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98005915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9599112], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9978736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9938296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9806238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99464387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9945305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9950473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9884422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9742111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99334157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96341753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9823452], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94144714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98416907], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99997175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98595685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97768164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95567256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9967047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99630886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99509156], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9757043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95345104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96578205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9811401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98082525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99564815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97545916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.986205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9834225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9582677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99940103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97819203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99814427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95535296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97344625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9997042], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9866784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98334014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9897826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9747288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9901023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9860565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9898322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9610573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98022866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96754926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9669253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9337253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94114226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98439074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9627348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9892732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9756256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99506676], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9295162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9659453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9283139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9819326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9938041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9495794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99645287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.970647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94922537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9836197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99368256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9748609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98104125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99235606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9923478], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9900545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9073228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98771405], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9939998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98117036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9000309], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9707907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9937038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9632762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9247811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99916995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9822369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.963772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99589396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9692991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9490749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9966086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.971916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97803634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9813909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.93259376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98647374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9954777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9907748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9644263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99673796], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9952714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9898878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9655498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96424675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9834912], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96905816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9762465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97815603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9597169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9361725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99188685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98526096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.998647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98930186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788089], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9541347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.997245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99131536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9621618], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9733118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.937601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984513], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98140097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9758678], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99342775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96166587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9635649], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99531645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9912948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9852753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9465412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99953157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9811928], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97352034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9581868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99955004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99054927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9932551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9979294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9969037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9941442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9974994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9788153], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9663415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9857099], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9781476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99637175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9742584], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98722917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99419683], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99199086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96074474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99782044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99553084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9923058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99705994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99804825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98750484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9842641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98960704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96532154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.89644504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98710436], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99433774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99456644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97531724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9728232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9738258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9724506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98857844], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9584543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97532195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98963195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9896063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9969431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9954313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99123454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9437232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99295884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9878933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98910856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96607614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99546427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98490936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9943363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9761848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.954107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9956384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9865696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9756574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95613414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.89090693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9873486], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9763666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9820265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97320384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99753034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9577833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98965347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.989447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9756481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9970922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9871844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9730034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9699814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.944856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9612186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9938895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9765849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9648582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99155945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98511434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9932696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9751884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98327625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9793285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9839694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857405], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (62,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 31451, 'query_cost': 0.0, 'learning_time': 3912.453588837874})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__62.pkl


ONLINE LEARNING CYCLE 63

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 320 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 30996 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5041.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93053424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.970329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97765464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96531725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9965938], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9856336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9726155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99329597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9926391], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97853625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9972923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9850377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9738438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9573082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9828308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9676422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.979194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98201495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9728736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97045887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9801003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99387974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9807037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9862587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.998179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9784185], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98232484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95188344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846911], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98069614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9433308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902171], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9702298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98452955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94905555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9790609], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9736694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9528748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9466429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92826205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9974369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98102224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9806571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9934098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9333474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9596058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97519666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98920554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9910229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.994282], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97762525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96421105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99549985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99840933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9949834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99629575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9458222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.985454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98021185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99580085], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99571013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98096603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99934524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9827417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9831197], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94330126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99159634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9955552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97570235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9951401], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992751], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98644656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99432987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96873933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9699499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98172665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99755114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98490226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97834474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9882507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9876608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94873846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99459296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98993474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97806776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9568399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97548187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98117864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9885748], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97815293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99070466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98329514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9761794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9855341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917071], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99637014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994047], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9865358], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98116946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99108106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9480972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98371893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9416931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98671615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98001426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9778207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9852548], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99539596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9814116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9663048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9752632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.952563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9814613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9873616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9656471], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9791919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9897304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98705316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.996707], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98760825], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99293554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97579366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98938274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9512131], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98549664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96815246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96014124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97205937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98557055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8871173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9601222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98760307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99921685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.965373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96809083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9584589], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9517525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9570738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95837253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96541744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98363113], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9974829], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.997281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96519583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94716424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9836388], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9903949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9987698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.93521166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99191326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9888905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.93358266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98007697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9167547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.976043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9928972], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99718887], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9976294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9482956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98295903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99013835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9959026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9978024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99340814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98107475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.987737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9962011], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9701086], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9655384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9740147], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99878955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97300017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9830817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97374356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99558145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9879883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9745481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99655133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9836484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98969245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99586993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99797237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97323453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9885229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9710791], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9844284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942127], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96744925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99617237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9927569], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96948135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9926888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9268152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9986234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97848386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98514736], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9973828], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9818816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.974149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99866325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9900387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94516647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9909398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98739284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98018867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9758427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99587387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99680144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97490954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99427664], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99211615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96198124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99899524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99529374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91642874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99682635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98551023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9694745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97962034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9871612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9459293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9678902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9689498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9864634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99718446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96603286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9983319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9893962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99950635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.988712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99241817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9923966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9078628], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.981819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99011385], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (63,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 31956, 'query_cost': 0.0, 'learning_time': 4021.686280750844})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__63.pkl


ONLINE LEARNING CYCLE 64

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 325 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 31486 datapoints
Loss: 0.01039, iter: 0/100000
Loss: 0.00001, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss did not improve after 5000 itrs, terminating at itr 6942.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99918544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97376484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99330837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97159445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925969], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96803486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96571916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98722667], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9370193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9485762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9737033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9882231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99683815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97188294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98754644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9895595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99470425], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99998635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96198547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98906267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95851475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99709266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9949332], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98530596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9986926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99040294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.936053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9823294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99929625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9854404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9944336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9847638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99894315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9984369], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98654646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9902582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9943757], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9691295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99085236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9988064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99846846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97773063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99662036], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9596219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914834], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99932235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9396872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9571096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99852777], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9694134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96209633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97524846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9531942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9860821], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99844027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954845], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell0:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97091293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97447246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99813014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99681234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99873734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9731069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9472942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98140293], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9782544], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98985267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95837307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9881869], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99688977], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9896502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99601674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97589266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9961473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9473286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9739382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97573936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99763626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9778968], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999732], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99527705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9933534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99620247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.998212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.967096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98963445], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98242915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98718923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9896021], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9520242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9933954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9881192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9803304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.971944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98013824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98988765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9969875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9774216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9435909], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9956363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99061954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99325275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96944445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98752624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99231815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99943835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98753965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9652396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99987966], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98550093], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97064435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9866531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99996245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98897123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9937688], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9867237], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9606706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9908755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9960891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96175987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99370915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99131185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9776789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9683249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99911195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9935756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.947739], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9737602], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957811], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943203], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9848507], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98921037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98915565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.992022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9949349], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95431674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9787076], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99916184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9967826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9998184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9762999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9600921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9924205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99547726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97817236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96570677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.998118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9638992], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9948961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99198], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9798367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9936859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9578641], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98714817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99465644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96892995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9995624], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99686295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94392246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9926024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9541163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96689665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97371256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99049896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97068805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99416226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99457824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9901296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993052], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957541], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9477879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98866117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97139144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96596754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9937793], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9762934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95610535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9631288], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9710015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96676064], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97794634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9786185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9440199], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.988703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9971999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.958918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93506074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9756341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9869457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9936227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.992884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95435965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99873614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9737756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.980173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99247485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99460405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.992714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9866169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99040717], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9623412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99157023], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99900216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9969908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99613935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9821927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9879587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868501], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9698004], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.982016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9949598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97989833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9804906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9735665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9702953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9928143], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99628556], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9569851], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98390657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98166305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98180956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99396014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98524016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9529157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96312183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97988844], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (64,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 32461, 'query_cost': 0.0, 'learning_time': 4135.841773480817})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__64.pkl


ONLINE LEARNING CYCLE 65

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 330 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 31976 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00001, iter: 5000/100000
Loss: 0.00000, iter: 6000/100000
Loss: 0.00001, iter: 7000/100000
Loss: 0.00954, iter: 8000/100000
Loss: 0.00000, iter: 9000/100000
Loss did not improve after 5000 itrs, terminating at itr 9989.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97750205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9622066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9914182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9361785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9828344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99415946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99450374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9717186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9853614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98418486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99159366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9918555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9960664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9749187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97946966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9823841], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9803572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9393962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9949392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98684615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99816483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.944427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96979845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9860217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99843997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996755], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9968256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99487686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98536754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99517906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95624554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941861], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9982118], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97675943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99959195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9996497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99250036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9789366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993175], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99830115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98507595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9408684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9863799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99928766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98813325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97974557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99428767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96748364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97903866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96950716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98365825], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9794624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96141535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9833385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986042], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9861997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99739325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99082255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97900677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99920404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932402], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.976202], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983009], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9758094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9687399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9889431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9630788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878489], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910951], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99593115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99928015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99640226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94675016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9805915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9880847], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.996776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98835945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9732035], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99533224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9842573], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97128755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98866075], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97028995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97370553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9417323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97005737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99266696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9851716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.958789], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96487254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9651608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9817124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9603006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9887377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9798554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95908445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9649055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971818], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9955245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.91964996], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97163343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9893213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.95540684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9903963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.84166807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9224783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9990665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.95657223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98212427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.969927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9893864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98793423], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96612006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9794229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9690829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9995444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.987722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9986592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99561435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.984201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9908812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9945302], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9899215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98817295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9573812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.959433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9630213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9452173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9564353], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9850961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96617526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96631485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95610374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99492395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9729324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98941624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9778929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95649743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94631886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9931693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97404414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98813814], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97486395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99072444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98139304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804224], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99938005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9527953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99756706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98598313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.999455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99838805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9601697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9673927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95671463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9995133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98504007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.91058445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9968591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98937017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98014647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96137387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99171335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9428953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9688403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94305235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9897825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9914545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9396327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99588925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98045486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9930804], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98680896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97466016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9972526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99784625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9508528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9993288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99353594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9932341], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98809105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9838498], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98611575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99342406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99592125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98325604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9846242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9979848], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99986136], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96518946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97984636], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99275696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9753419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9702217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99829334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9817882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8658653], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94448227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9872947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9866362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99589485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9911524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9454046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9797338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98979276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9886665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99836737], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9975134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9813384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97490937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98366785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9841733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98420924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9471962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9639321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9992398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9629155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93662304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99412984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97367877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98473215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9907774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99342734], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981241], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9717627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9952648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96650535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9395399], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9003351], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96992487], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96531767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9982743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9876326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9959549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9933048], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9883069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9888594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9682128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94547457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99966866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9654167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98475623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9859716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99644375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9978432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9930747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97063196], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (65,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 32966, 'query_cost': 0.0, 'learning_time': 4255.542382940825})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__65.pkl


ONLINE LEARNING CYCLE 66

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 335 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 32466 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00001, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99560213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97183406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94025207], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9710792], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9674115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98263395], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9830178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95645183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98942053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98748976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99421376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99350524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9951675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9926957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97470146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.980731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9622449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9551967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9942243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99482524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9713269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98386014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99724835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9937733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998493], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9952743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9973394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98642933], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956908], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99899095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9745805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99521464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99134445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950826], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99707747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922508], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751738], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96944314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95701337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9989325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98846644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.968412], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9838631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9905392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97455794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9922846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.969963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98620534], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929303], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9719422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9752263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9449107], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9583442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97504675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99610865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99493873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9654129], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975195], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99671835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97779846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9894231], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9976716], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99439424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97783494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99621934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9532621], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98481166], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915428], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9909956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9973447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98423773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.983603], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96471936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99412936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99376404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.971434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98470145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9747334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97533935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98778045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9274915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95563704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980097], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9921119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.995176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97725374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97459376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94997746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.955524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9722069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9773132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98748386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947467], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9463783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98313755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9909161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.992639], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97751635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9766857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9861773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9796772], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9965111], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98438764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9702057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99142414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9680146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9781032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9814771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9365184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9990144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97209644], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9955923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9628314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9974578], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9630803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9909952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9836418], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98373324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99872196], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9888497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9855432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99492335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99684906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98181623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98282766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97530633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99683183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96333015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97652245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9383788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95532817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9721722], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9432939], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99133784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98875296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.978477], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971233], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92736655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9345332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9848163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9694866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9680255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9866201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99607885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98904127], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.998881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9880886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9593192], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96810836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98828334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9864776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99697626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98830396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9521434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98133445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9968768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9515613], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.993362], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9978587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9405693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9888188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.979161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9837179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97914785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9898745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9732206], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9822124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94042504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9983321], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9739742], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9771397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93582255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9295588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.981822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9989539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9975611], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9962023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9968543], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91844404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9737481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99876326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9957823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9802286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95045406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9354799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9832662], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.984555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97001725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.91183907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99433565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9717416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98708606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9485693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998742], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99700904], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9661385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98782396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98894656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9913141], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9752442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96484214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9636121], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9861817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9262652], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9332059], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99681044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97501945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.984442], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93703705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99639696], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99102396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97726125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95538485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.942242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9945885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98971635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9847123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9980775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97750765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9869948], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99985754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9865808], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9774612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95530915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9929119], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9870479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9399565], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9518612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94677985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9881017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99477893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9723944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98787254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96685135], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9919871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97801274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9758493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96993655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94576406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96562946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9974258], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9811671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99601847], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98956287], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9819223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9388507], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (66,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 33471, 'query_cost': 0.0, 'learning_time': 4368.725459338806})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__66.pkl


ONLINE LEARNING CYCLE 67

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 340 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 32956 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00002, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9933663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9995907], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9979182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98551804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9744209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9813378], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9566115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9747146], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99599004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99795324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9874871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9565742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99741006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99383575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9876305], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99040735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9920182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855725], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97365767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93478864], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9910513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99583596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9688081], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97991693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9656427], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98893744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9609515], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98000616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99692494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98969185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9764049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99704564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98623186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9822704], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99333346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99120533], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9950324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9916804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9548084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97365105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95478046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9491211], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9754214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99005955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9667333], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.92206323], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9936229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99344367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93886733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9848507], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97637653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99593335], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9486181], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97785485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9788723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99598086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9794865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99137664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95752937], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.933404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97989005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9978455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96747327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96219254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852513], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9948186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99946654], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9865318], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9713073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9512899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9678742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99711835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9966982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9754545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9842298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98939466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9628949], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97434807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99446744], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95686966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9086228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8933476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9899458], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98246044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9971632], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97382295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995218], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9898883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99850345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9714958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99410665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.978079], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9820468], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95892984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9825315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97986114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9577936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98743844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9797926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.86818194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9831676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97719806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99158365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9919714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99991286], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96726805], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98837435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9812169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98637474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9862616], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9739001], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9760215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9166913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9955798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94986343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97420424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98330975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99979216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9874867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9858776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9751084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9919338], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9964921], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9902157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.95357186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99160343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9505819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9692179], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9992823], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9928403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97539335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9992922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9918699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9881429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96788645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94055074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9783553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9422298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916371], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9601881], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99166006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98441446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97835386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9915053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95702744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.994925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9944512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96761537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99277705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98050714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9892903], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97774184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99711186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98141235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.953492], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98764235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9947883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9915194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9902906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9982642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9493583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9885719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99740994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99906695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9842049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.992829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98562443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.996768], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99546653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98819053], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9841553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9992849], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99616426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99542505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9964051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9936499], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9853917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9954665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98726815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9971562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9946632], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9977752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96349245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99045753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9804415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9811519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9883947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9800429], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9368415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9893414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99737215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99863315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9866585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9995038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9615966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99175227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9910991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99602795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99592763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97995466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9962159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9700055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98507905], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95960766], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96184343], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.993826], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880365], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99222916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9590268], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9854187], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9836453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9857528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9874554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96915334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95141876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99430114], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96361583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9961354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9906045], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9535301], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9586751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9972252], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9653799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9957196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.999694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9552845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9629253], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9952293], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99459994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9908597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9478404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9415373], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98744434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9929152], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9887216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9826322], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9994033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96447384], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99807364], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9392647], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855743], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9946461], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9960288], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99777234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996612], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98907256], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99633193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95635694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98044115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9461282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9274929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9929348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99877495], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97718006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9900101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95532626], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97827774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9879983], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9681614], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (67,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 33976, 'query_cost': 0.0, 'learning_time': 4485.252499948838})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__67.pkl


ONLINE LEARNING CYCLE 68

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 345 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 33446 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00994, iter: 1000/100000
Loss: 0.00995, iter: 2000/100000
Loss: 0.00001, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5013.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96518815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9636482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9838762], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99326885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985167], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9836227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.994151], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9828512], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9990566], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9526829], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9801965], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9794657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9898699], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9820713], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99120367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9978554], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9601946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97806895], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99609345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9939473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95664185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9691712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9908917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.89230376], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99898124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9648105], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98043424], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97683966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98393154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99675745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.90064806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9929224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9991337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9655906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9606214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.8549414], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9729481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9703183], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93808043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93069047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95809656], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9420492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9633659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.980488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96947306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9266942], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99493223], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96878415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99402916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9723529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9913263], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9883405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9846824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9980845], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99100786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99755794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99361914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99536055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9743865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99319106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99888605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96660936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9849049], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9620331], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9822481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97339594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99657404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99997896], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9659503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99712884], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9794454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9964587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98195446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96854013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905998], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971521], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95725405], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98396397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.93628955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9911719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901537], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99209666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99867874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98825943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9870705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95566815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99744123], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98573273], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935387], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783963], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97030354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98402214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99463785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9959127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9751394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9765369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94813025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99293435], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860422], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96431476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97303694], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640243], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9628674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99851084], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9932932], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96732205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98858714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97272605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9895502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9908771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9368958], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9999102], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99202013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99058247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9792698], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9538527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9812381], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9932455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.968051], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99665624], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9999833], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9839444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99644876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9912161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9690894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98686635], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98864746], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9727072], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9767854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9417981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97454244], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9819575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.934024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98963857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9431214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9752514], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9802491], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97208756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99806994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9651332], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97073597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99736863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9707403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97044945], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99007726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9913504], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9818575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99411196], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9965726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99297583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9789308], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9901927], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9993967], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9935159], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9866601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.969946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9652878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99461806], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9531885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9670936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.993132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98441154], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9943639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9742759], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9999073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9834356], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.955916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9873891], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97513366], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99215144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9925885], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94436026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99584126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.967661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.994463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97674483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99006367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99372166], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96692663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9874352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.8847482], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99162614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98928773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99645525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99105394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9853516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940608], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9451352], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9745307], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98968595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99020845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98764116], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9565684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9991562], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9902438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98976314], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9752061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.984082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99688977], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9822041], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99467325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97568244], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99489516], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.977999], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9813328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953361], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9972525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97839224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9938261], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95460993], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9684304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96963245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9697165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9989627], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9037702], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9465431], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9935639], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99349886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9751126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9858311], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97493595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9761526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981979], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9605497], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97273517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99434316], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99755996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.971808], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98163265], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9393524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.88688946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98978585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99021846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9986991], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99779695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998342], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996077], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99668294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9904375], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9864816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9987927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97128785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.979659], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9967043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98887813], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.917177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99378157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9998705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98526835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96038455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95855325], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.949832], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (68,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 34481, 'query_cost': 0.0, 'learning_time': 4603.629780667834})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__68.pkl


ONLINE LEARNING CYCLE 69

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 350 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 33936 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5012.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9621588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9918638], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97825503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98402065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9223176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94269747], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98156124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9735966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9644247], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9832449], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9777339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9997427], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99874496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9611529], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9916857], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9903643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9881056], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95918524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98498863], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.990599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96017927], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99666697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98110294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9929816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97291267], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9240488], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98581874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9771067], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99237657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.982755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9734961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97242063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9562622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95931685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9947855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9972731], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99128145], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99953115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9670798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99024874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9860174], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9510091], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98842776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9840128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99631083], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98217446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99828017], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97972625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9590599], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98076916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95664227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96808606], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98811036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995817], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9659728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982296], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984622], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98240614], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9701055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98778623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9722016], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9770444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958842], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.996148], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98936975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9852015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9888889], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9892936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9400745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.933918], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9772629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9930336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99307454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954492], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9863607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9940558], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9799795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9373708], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93475056], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9875785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99927133], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9602741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9969448], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9349788], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99226665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9897552], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9555771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98309094], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9894025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9721753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9853522], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9360526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985103], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9906975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9774827], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96334505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9995474], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9794169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98137623], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99935246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9928557], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9849232], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9350645], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99298257], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95516354], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99156284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9679445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99284047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99428564], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98372763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.986728], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9987572], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9936866], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9773069], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99201363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98764753], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9827878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97530377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9924784], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99001044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9902433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98745465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96131724], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9945946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9995583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99469733], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9982913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9413798], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9986535], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99028796], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99712604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.955393], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9591549], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946948], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96117973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9905642], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9924046], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9917874], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9616219], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9770438], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97419876], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99984956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9666715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99955523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9876749], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9893625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9757034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98814386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9939511], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9526799], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.967359], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.985369], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9946619], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9980547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99198526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98617613], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9638686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.977931], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98611987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95992655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.992962], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9693466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98261255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99870986], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9362238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98408693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9918975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9902216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9875185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96776587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99677867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9955434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9689807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98216444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95173055], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9477832], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.945027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9915596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99391824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9944771], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9950345], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9290587], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97771686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9887886], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96927744], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9997126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99879664], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9573122], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9684074], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9709582], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.976878], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98447484], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9786913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9998444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98614603], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97419524], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97291434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9663712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96872234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95797944], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95366275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9911209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99354005], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.941493], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9846447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97999954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9699523], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99864465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9981969], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97252566], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9874715], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9616615], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9887773], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9978805], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9615267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9839872], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95921177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9639413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.998246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9966173], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99000883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9970124], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96380335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9859453], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9688751], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9978974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.949274], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.997466], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98186576], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9743036], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9757163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92045176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9721666], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98292893], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9966061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9944539], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9977542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99796015], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97037625], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98451966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96711445], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9837519], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9985392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98736995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9722178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9463586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9756509], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9981555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9969643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9859259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.997765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9687988], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99413824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9792481], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99861234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9907648], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99518126], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9433178], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9744919], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9980031], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97795457], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94200563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9994519], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (69,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 34986, 'query_cost': 0.0, 'learning_time': 4722.378713065817})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__69.pkl


ONLINE LEARNING CYCLE 70

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 355 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 34426 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9898583], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9420022], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.91797346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.932413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9869947], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96888685], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9874822], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9995883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9953169], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99803567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96736956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9761182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98927677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99410856], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9352277], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99497217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97139525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99366486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.973339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93874276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98163867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9758843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97616297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9782483], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97670406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9925374], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99108225], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.989825], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970329], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99264383], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96158755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9966406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97135216], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99439913], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.985281], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9793721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9814831], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97495794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98979115], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99908006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9975755], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97458214], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98893034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9566868], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992672], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9942758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99810684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859082], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9992671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96968734], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990238], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9735528], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94610417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97066325], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99463284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.995604], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.94951767], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99705637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97400385], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99164164], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9803254], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99143803], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99811953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9953105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98597914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9779953], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994139], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97061723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9914194], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9808774], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99671155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99452835], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98553073], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99450934], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97264403], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98807955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9985601], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9950486], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9954193], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98297185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97511464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934515], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9957815], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96888185], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9781205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9954719], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9999019], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99579334], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97396326], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9990339], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9963028], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99232775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98980844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9981335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99683595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9816302], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97923684], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9951879], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9915594], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94972575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98186785], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9970775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9770643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98786855], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9314382], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9941392], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97999394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96124184], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9888168], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.976191], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9852298], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94128966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.94699347], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9733117], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99123013], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98465794], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99892503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9961668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.992006], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98707396], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9981657], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97004294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98798597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99432665], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9869245], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9649007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99291027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97862417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9529057], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9971971], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96794415], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9831853], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97830147], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99132633], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9545798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9878943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9945313], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9800182], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98475844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.980882], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9843553], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9771038], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9707838], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97958875], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98033655], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9990104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9916957], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.95744455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9548693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9656447], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9859925], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9840262], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98392695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99983406], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99177974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99001646], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9907701], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.93272865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9668043], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98816943], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98445344], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95941585], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9917961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99170446], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9747106], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.985419], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9860303], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99620205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99161756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.994463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98566234], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97918856], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([0.510481], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9746101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9953888], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96361494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9695264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94316906], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9931871], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9270695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9875034], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97375137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9988756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9829675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.95114577], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92626786], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936915], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9458266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9958279], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9724144], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99652845], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99808294], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9691542], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9868086], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969033], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9984229], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99419177], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9391272], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9826894], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99896914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9809877], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9970581], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99360317], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.990592], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9987149], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98816335], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9807172], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9936213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9799555], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98747104], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.977598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9945309], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9880916], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9997721], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95982575], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9928336], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99759775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96707225], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98885804], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9749372], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9807232], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99804527], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99742985], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96926546], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96817285], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97321165], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99224526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.967567], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9820132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99903995], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9759327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9957324], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97056454], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98562163], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.993157], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9915975], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99220705], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9937547], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9890967], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9463137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97966444], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99599695], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.996379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9719269], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9826072], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9954631], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9875266], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9728539], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9417047], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.985434], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9845661], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976973], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99091023], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99502337], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9667763], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.92865765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9868327], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9752952], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99148357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9845503], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9895201], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98371917], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9871584], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98696125], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99681306], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9895853], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (70,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 35491, 'query_cost': 0.0, 'learning_time': 4844.0015106347855})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__70.pkl


ONLINE LEARNING CYCLE 71

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 360 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 34916 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00001, iter: 2000/100000
Loss: 0.00000, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9973284], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9486058], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98711824], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9816807], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9810756], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97139776], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9858873], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99548703], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99223346], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9490357], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99155354], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9755098], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9582823], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9731897], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9948128], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9855563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9708712], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98368037], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9615319], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9788518], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996472], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9048304], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9647929], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99315846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9783976], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.93758607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9911416], dtype=float32))test
[CogMan] Finishing episode.
Task 1 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98914844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.988955], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99838924], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9977394], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973485], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9251224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9624398], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9837003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9775348], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9865405], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98837686], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97366506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9871236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9987249], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95547783], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9647299], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98505867], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9827222], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9631735], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.96406966], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.98237455], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.973027], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9901994], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99843025], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9878379], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9869363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9884689], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9994316], dtype=float32))test
[CogMan] Finishing episode.
Task 2 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9605668], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9862432], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9864605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967101], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9396961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9652883], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9799922], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.988764], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97481155], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9969443], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99297464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9982397], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9780819], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9886669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9994679], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98056984], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9623215], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9934255], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9967859], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98506105], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99953586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97710246], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9869408], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9499464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99682295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9925044], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9778974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99751586], dtype=float32))test
[CogMan] Finishing episode.
Task 3 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9985606], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9750188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9662004], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99679476], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9429032], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9953259], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.991363], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9465242], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97753465], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9979409], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.993669], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9565899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.95900315], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.94875765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97397417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9956386], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97313464], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9852605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.97570693], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9749571], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9917127], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9859282], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99636275], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99686706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9783134], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.99819946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9935676], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9993473], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell0:cell], params=array([-0.9640724], dtype=float32))test
[CogMan] Finishing episode.
Task 4 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell4:cell, cell5:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell5:cell, cell6:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell6:cell, cell7:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99569297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9875936], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98832226], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99201536], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9867227], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9878982], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96362865], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9938212], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9864236], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9749671], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9905526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.96966505], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9937096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9783816], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.97281003], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9906162], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9775726], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99427706], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9505981], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9911502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.9933531], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.98819506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell6:cell], params=array([-0.99397516], dtype=float32))test
[CogMan] Finishing episode.
Task 5 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98659617], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98436964], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9895574], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96216065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9557854], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9942132], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98997176], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9671935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98641413], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9884433], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98010844], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9840954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98188066], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9900496], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98351264], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.96971416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9785675], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92237765], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9666899], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9920328], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.971926], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9909637], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9971463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9903752], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.90962416], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99494475], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9983228], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9871984], dtype=float32))test
[CogMan] Finishing episode.
Task 6 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell3:cell, cell4:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98083663], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9900742], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.94695914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98829377], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98964065], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98213494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9802595], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99963224], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.998551], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97619367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97610563], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9476954], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.96912235], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99341697], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.998682], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.99401295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9671188], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9497373], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98701787], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97904545], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9861494], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9777846], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9820758], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.97290295], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.9846775], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell3:cell], params=array([-0.98539305], dtype=float32))test
[CogMan] Finishing episode.
Task 7 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97500956], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9996989], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97855276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98323745], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9638754], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9825935], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.92004186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9943161], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99836653], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9649479], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9615638], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.987063], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98599607], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98470014], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99416506], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9733095], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9963902], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9953596], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9516289], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9988586], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.97086525], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.992974], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9790517], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.99067426], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.98978186], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.991367], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9628096], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell1:cell], params=array([-0.9941591], dtype=float32))test
[CogMan] Finishing episode.
Task 8 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9664741], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9996812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9858629], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9991997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9956007], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9611812], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9988961], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.90799797], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9938026], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9976779], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9907996], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.94254297], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9812217], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9621914], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9902714], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9892344], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.981209], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96246946], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.96187526], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9934598], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9896283], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98841417], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9836836], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99877137], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9587674], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.984798], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9806185], dtype=float32))test
[CogMan] Finishing episode.
Task 9 / 10: Policy failed to reach goal
[CogMan] Reset called.
_Option(name='MoveRobot', objects=[robby:robot, cell0:cell, cell1:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell1:cell, cell2:cell], params=array([], dtype=float32))test
_Option(name='MoveRobot', objects=[robby:robot, cell2:cell, cell3:cell], params=array([], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9709588], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99190205], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9965634], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98814404], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9862843], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9361677], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.988561], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95819587], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.98189723], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9922591], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99527276], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9442597], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.97582024], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9966463], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99690837], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9955061], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9663997], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.95677054], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9920987], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9970502], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9917213], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9999923], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9743605], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99817795], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.99310267], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9912643], dtype=float32))test
_Option(name='TurnKey', objects=[robby:robot, cell2:cell], params=array([-0.9559044], dtype=float32))test
[CogMan] Finishing episode.
Task 10 / 10: Policy failed to reach goal
--- Logging error ---
Traceback (most recent call last):
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 1083, in emit
    msg = self.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 927, in format
    return fmt.format(record)
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 663, in format
    record.message = record.getMessage()
  File "/home/gridsan/ali1/.conda/envs/predicators/lib/python3.9/logging/__init__.py", line 367, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 739, in <module>
    main()
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 159, in main
    _run_pipeline(env, cogman, approach_train_tasks, offline_dataset)
  File "/home/gridsan/ali1/predicators/predicators/main.py", line 301, in _run_pipeline
    logging.info("HEYASEIHASIFHIHAOIDF", i)
Message: 'HEYASEIHASIFHIHAOIDF'
Arguments: (71,)
CUMULATIVE NUM SOLVED: 0.0
CUMULATIVE NUM SOLVED: 0.0
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0][0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Tasks solved: 0 / 10
Average time for successes: inf seconds
Test results: defaultdict(<class 'float'>, {'num_solved': 0, 'num_total': 10, 'avg_suc_time': inf, 'avg_ref_cost': inf, 'min_num_samples': 0, 'max_num_samples': 0.0, 'min_skeletons_optimized': 0, 'max_skeletons_optimized': 0.0, 'num_solve_timeouts': 0, 'num_solve_failures': 0, 'num_execution_timeouts': 0, 'num_execution_failures': 0, 'avg_num_samples': 0.0, 'avg_num_skeletons_optimized': 0.0, 'avg_num_nodes_expanded': 0.0, 'avg_num_nodes_created': 0.0, 'avg_num_nsrts': 0.0, 'avg_num_preds': 0.0, 'avg_plan_length': 0.0, 'avg_num_failures_discovered': 0.0, 'num_offline_transitions': 0, 'num_online_transitions': 35996, 'query_cost': 0.0, 'learning_time': 4965.9665160887525})
Wrote out test results to results/grid_row_door__rl_bridge_policy__5______RLBRIDGE_gridrowdoor-no_callplanner__71.pkl


ONLINE LEARNING CYCLE 72

Getting interaction requests...
Generating interaction results...
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
[CogMan] Reset called.
[CogMan] Finishing episode.
Query cost incurred this cycle: 0.0
Learning from interaction results...

Learning NSRTs on 365 trajectories...

Running harmlessness check...

Doing sampler learning...

Learned NSRTs:
NSRT-TurnOnLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOff(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOn(?light:light)]
    Delete Effects: [LightOff(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOnLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-MoveKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: MoveKey(?robot:robot, ?current_cell:cell)
NSRT-MoveRobot:
    Parameters: [?robot:robot, ?current_cell:cell, ?target_cell:cell]
    Preconditions: [Adjacent(?current_cell:cell, ?target_cell:cell), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [RobotInCell(?robot:robot, ?target_cell:cell)]
    Delete Effects: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Ignore Effects: []
    Option Spec: MoveRobot(?robot:robot, ?current_cell:cell, ?target_cell:cell)
NSRT-TurnOffLight:
    Parameters: [?robot:robot, ?current_cell:cell, ?light:light]
    Preconditions: [LightInCell(?light:light, ?current_cell:cell), LightOn(?light:light), RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: [LightOff(?light:light)]
    Delete Effects: [LightOn(?light:light)]
    Ignore Effects: []
    Option Spec: TurnOffLight(?robot:robot, ?current_cell:cell, ?light:light)
NSRT-TurnKey:
    Parameters: [?robot:robot, ?current_cell:cell]
    Preconditions: [RobotInCell(?robot:robot, ?current_cell:cell)]
    Add Effects: []
    Delete Effects: []
    Ignore Effects: []
    Option Spec: TurnKey(?robot:robot, ?current_cell:cell)

Training MapleQFunction on 35406 datapoints
Loss: 0.00000, iter: 0/100000
Loss: 0.00000, iter: 1000/100000
Loss: 0.00000, iter: 2000/100000
Loss: 0.00957, iter: 3000/100000
Loss: 0.00000, iter: 4000/100000
Loss: 0.00000, iter: 5000/100000
Loss did not improve after 5000 itrs, terminating at itr 5001.
Loaded best model with loss: 0.00000
